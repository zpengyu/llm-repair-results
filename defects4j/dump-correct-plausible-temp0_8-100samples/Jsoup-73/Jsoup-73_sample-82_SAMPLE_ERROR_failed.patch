diff --git a/src/main/java/org/jsoup/helper/W3CDom.java b/src/main/java/org/jsoup/helper/W3CDom.java
index fb864f5..12bb3ce 100644
--- a/src/main/java/org/jsoup/helper/W3CDom.java
+++ b/src/main/java/org/jsoup/helper/W3CDom.java
@@ -68,22 +68,17 @@ public class W3CDom {
     protected static class W3CBuilder implements NodeVisitor {
         private static final String xmlnsKey = "xmlns";
         private static final String xmlnsPrefix = "xmlns:";
-
         private final Document doc;
-        private final HashMap<String, String> namespaces = new HashMap<>();
+        private final Map<String, String> namespaces = new HashMap<>();
         private Element dest;
-
         public W3CBuilder(Document doc) {
             this.doc = doc;
         }
-
-        public void head(org.jsoup.nodes.Node source, int depth) {
-            if (source instanceof org.jsoup.nodes.Element) {
-                org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
-
+        public void head(Node source, int depth) {
+            if (source instanceof Element) {
+                Element sourceEl = (Element) source;
                 String prefix = updateNamespaces(sourceEl);
                 String namespace = namespaces.get(prefix);
-
                 Element el = doc.createElementNS(namespace, sourceEl.tagName());
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
@@ -92,30 +87,28 @@ public class W3CDom {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
-            } else if (source instanceof org.jsoup.nodes.TextNode) {
-                org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
+            } else if (source instanceof TextNode) {
+                TextNode sourceText = (TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
-            } else if (source instanceof org.jsoup.nodes.Comment) {
-                org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
+            } else if (source instanceof Comment) {
+                Comment sourceComment = (Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
-            } else if (source instanceof org.jsoup.nodes.DataNode) {
-                org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
+            } else if (source instanceof DataNode) {
+                DataNode sourceData = (DataNode) source;
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
                 // unhandled
             }
         }
-
-        public void tail(org.jsoup.nodes.Node source, int depth) {
-            if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element) {
+        public void tail(Node source, int depth) {
+            if (source instanceof Element && dest.getParentNode() instanceof Element) {
                 dest = (Element) dest.getParentNode(); // undescend. cromulent.
             }
         }
-
-        private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
+        private void copyAttributes(Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
                 // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
                 String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
@@ -127,7 +119,7 @@ public class W3CDom {
         /**
          * Finds any namespaces defined in this element. Returns any tag prefix.
          */
-        private String updateNamespaces(org.jsoup.nodes.Element el) {
+        private String updateNamespaces(Element el) {
             // scan the element for namespace declarations
             // like: xmlns="blah" or xmlns:prefix="blah"
             Attributes attributes = el.attributes();
