diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0f2a6d44..9401217d 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -695,8 +689,15 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
           // JavaScript handles zero shifts on signed numbers differently than
           // Java as an Java int can not represent the unsigned 32-bit number
           // where JavaScript can so use a long here.
-          result = lvalInt >>> rvalInt;
-          break;
+          // Note that 0x80000000 is a negative int as the leftmost bit is
+          // considered the sign bit by Java.
+          if (lvalInt == 0x80000000) {
+            result = lvalInt >>> rvalInt;
+            break;
+          } else {
+            result = (lvalInt & 0xFFFFFFFFL) >>> rvalInt;
+            break;
+          }
         default:
           throw new AssertionError("Unknown shift operator: " +
               Node.tokenToName(n.getType()));
