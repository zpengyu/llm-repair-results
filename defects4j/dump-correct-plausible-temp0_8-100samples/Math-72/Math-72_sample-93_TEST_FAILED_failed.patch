diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
index 747f80ac0..25bfe79d6 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
@@ -98,10 +98,10 @@ public class BrentSolver extends UnivariateRealSolverImpl {
     public double solve(final UnivariateRealFunction f,
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-
         clearResult();
-        verifySequence(min, initial, max);
-
+        verifyInterval(min, max);
+        verifyInterval(min, initial);
+        verifyInterval(initial, max);
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
@@ -115,25 +114,13 @@ public class BrentSolver extends UnivariateRealSolverImpl {
             setResult(yMin, 0);
             return result;
         }
-
-        // reduce interval if min and initial bracket the root
-        if (yInitial * yMin < 0) {
-            return solve(f, min, yMin, initial, yInitial, min, yMin);
-        }
-
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
             return result;
         }
-
-        // reduce interval if initial and max bracket the root
-        if (yInitial * yMax < 0) {
-            return solve(f, initial, yInitial, max, yMax, initial, yInitial);
-        }
-
-        if (yMin * yMax > 0) {
+        if (yMin * yMax >= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
         }
