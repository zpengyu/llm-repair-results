diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java
index 933d4ffa..ea2b7d0a 100644
--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -2421,14 +2421,14 @@ public final class NodeUtil {
    * @return Whether the node is known to be a value that is not a reference
    *     outside the expression scope.
    */
-  static boolean evaluatesToLocalValue(Node value, Predicate<Node> locals) {
+static boolean evaluatesToLocalValue(Node value, Predicate<Node> locals) {
     switch (value.getType()) {
       case Token.ASSIGN:
         // A result that is aliased by a non-local name, is the effectively the
         // same as returning a non-local name, but this doesn't matter if the
         // value is immutable.
         return NodeUtil.isImmutableValue(value.getLastChild())
-            || (locals.apply(value)
+            || (locals.apply(value.getFirstChild())
                 && evaluatesToLocalValue(value.getLastChild(), locals));
       case Token.COMMA:
         return evaluatesToLocalValue(value.getLastChild(), locals);
