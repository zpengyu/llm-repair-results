diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
index 07c667408..d84cfd481 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
@@ -98,10 +98,8 @@ public class BrentSolver extends UnivariateRealSolverImpl {
     public double solve(final UnivariateRealFunction f,
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-
         clearResult();
-        verifySequence(min, initial, max);
-
+        verifyInterval(min, max);
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
@@ -132,13 +126,10 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         if (yInitial * yMax < 0) {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
-
-
-        // full Brent algorithm starting with provided initial guess
-        return solve(f, min, yMin, max, yMax, initial, yInitial);
-
+        throw new IllegalArgumentException("Function values at endpoints do not have different signs." +
+                                           "  Endpoints: [" + min + "," + max + "]" +
+                                           "  Values: [" + yMin + "," + yInitial + "," + yMax + "]");
     }
-
     /**
      * Find a zero in the given interval.
      * <p>
