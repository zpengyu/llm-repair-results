diff --git a/src/main/java/org/apache/commons/cli/TypeHandler.java b/src/main/java/org/apache/commons/cli/TypeHandler.java
index 4f23011..5575f3c 100644
--- a/src/main/java/org/apache/commons/cli/TypeHandler.java
+++ b/src/main/java/org/apache/commons/cli/TypeHandler.java
@@ -60,50 +60,68 @@ public class TypeHandler
      * @throws ParseException if the value creation for the given class failed
      */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
+{
+    if (PatternOptionBuilder.STRING_VALUE == clazz)
     {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
-            return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
-            return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
-            return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
-            return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
-            return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
-            return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
-            return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
-            return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
-            return (T) createURL(str);
-        }
-        else
+        return (T) str;
+    }
+    else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
+    {
+        return (T) createObject(str);
+    }
+    else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
+    {
+        return (T) createNumber(str);
+    }
+    else if (PatternOptionBuilder.DATE_VALUE == clazz)
+    {
+        return (T) createDate(str);
+    }
+    else if (PatternOptionBuilder.CLASS_VALUE == clazz)
+    {
+        return (T) createClass(str);
+    }
+    else if (PatternOptionBuilder.FILE_VALUE == clazz)
+    {
+        return (T) createFile(str);
+    }
+    else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
+    {
+        return (T) openFile(str);
+    }
+    else if (PatternOptionBuilder.FILES_VALUE == clazz)
+    {
+        return (T) createFiles(str);
+    }
+    else if (PatternOptionBuilder.URL_VALUE == clazz)
+    {
+        return (T) createURL(str);
+    }
+    else if (PatternOptionBuilder.STRING_ARRAY_VALUE == clazz)
+    {
+        return (T) createStringArray(str);
+    }
+    else
+    {
+        return null;
+    }
+}
+public static String[] createStringArray(final String str)
+{
+    String[] result = null;
+    if (str != null)
+    {
+        StringTokenizer st = new StringTokenizer(str, ",");
+        result = new String[st.countTokens()];
+        int i = 0;
+        while (st.hasMoreTokens())
         {
-            return null;
+            result[i++] = st.nextToken();
         }
     }
-
+    return result;
+}
     /**
       * Create an Object from the classname and empty constructor.
       *
