diff --git a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
index bed27f2b..bffa1e5a 100644
--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
@@ -32,7 +30,7 @@ public class JsonParserSequence extends JsonParserDelegate
      *
      * @since 2.8
      */
-
+    protected boolean _hasToken;
     /*
      *******************************************************
      * Construction
@@ -103,15 +95,25 @@ public class JsonParserSequence extends JsonParserDelegate
     @Override
     public JsonToken nextToken() throws IOException, JsonParseException
     {
-        JsonToken t = delegate.nextToken();
-        if (t != null) return t;
+        if (!_hasToken) {
+            JsonToken t = delegate.nextToken();
+            if (t != null) return t;
+        }
         while (switchToNext()) {
-            t = delegate.nextToken();
+            JsonToken t = delegate.nextToken();
             if (t != null) return t;
         }
         return null;
     }
-
+    @Override
+    public JsonStreamContext getParsingContext() {
+        // 12-Sep-2016, tatu: for [core#312] need to be careful about returning
+        //    context from "current" or "delegate" parser
+        if (_hasToken) {
+            return delegate.getParsingContext();
+        }
+        return super.getParsingContext();
+    }
     /*
     /*******************************************************
     /* Additional extended API
@@ -147,6 +146,7 @@ public class JsonParserSequence extends JsonParserDelegate
             return false;
         }
         delegate = _parsers[_nextParser++];
+        _hasToken = false;
         return true;
     }
 }
\ No newline at end of file
