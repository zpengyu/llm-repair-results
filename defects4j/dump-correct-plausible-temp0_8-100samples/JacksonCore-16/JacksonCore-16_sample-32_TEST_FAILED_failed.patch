diff --git a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
index bed27f2b..7fd883ca 100644
--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
@@ -32,7 +30,7 @@ public class JsonParserSequence extends JsonParserDelegate
      *
      * @since 2.8
      */
-
+    protected boolean _hasToken;
     /*
      *******************************************************
      * Construction
@@ -103,15 +95,39 @@ public class JsonParserSequence extends JsonParserDelegate
     @Override
     public JsonToken nextToken() throws IOException, JsonParseException
     {
-        JsonToken t = delegate.nextToken();
-        if (t != null) return t;
+        if (!_hasToken) {
+            JsonToken t = delegate.nextToken();
+            if (t != null) return t;
+        } else {
+            _hasToken = false;
+        }
         while (switchToNext()) {
-            t = delegate.nextToken();
+            JsonToken t = delegate.nextToken();
             if (t != null) return t;
         }
         return null;
     }
-
+    @Override
+    public JsonParser skipChildren() throws IOException, JsonParseException {
+        if (delegate.currentToken() != JsonToken.START_OBJECT
+                && delegate.currentToken() != JsonToken.START_ARRAY) {
+            return this;
+        }
+        int open = 1;
+        // first both skip the array or object
+        while (true) {
+            JsonToken t = nextToken();
+            if (t == null) break;
+            if (t.isStructStart()) {
+                ++open;
+            } else if (t.isStructEnd()) {
+                if (--open == 0) {
+                    return this;
+                }
+            }
+        }
+        return this;
+    }
     /*
     /*******************************************************
     /* Additional extended API
