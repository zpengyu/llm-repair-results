diff --git a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
index bed27f2b..fc180072 100644
--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
@@ -32,7 +30,7 @@ public class JsonParserSequence extends JsonParserDelegate
      *
      * @since 2.8
      */
-
+    protected boolean _hasToken;
     /*
      *******************************************************
      * Construction
@@ -44,8 +41,8 @@ public class JsonParserSequence extends JsonParserDelegate
         super(parsers[0]);
         _parsers = parsers;
         _nextParser = 1;
+        _hasToken = false;
     }
-
     /**
      * Method that will construct a parser (possibly a sequence) that
      * contains all given sub-parsers.
@@ -103,8 +96,29 @@ public class JsonParserSequence extends JsonParserDelegate
     @Override
     public JsonToken nextToken() throws IOException, JsonParseException
     {
+        /* First: if we have not yet fully consumed the first parser, need
+         * to call it first
+         */
+        if (!_hasToken) {
+            JsonToken t = delegate.nextToken();
+            if (t != null) return t;
+            // If not, we'll have to switch to next
+            if (!switchToNext()) {
+                // but if no more parsers, need to return null
+                return null;
+            }
+        }
+        // If already pointing to a token, just need to return it
+        if (_hasToken) {
+            _hasToken = false;
+            return delegate.currentToken();
+        }
+        // Otherwise need to try to find the next token
         JsonToken t = delegate.nextToken();
-        if (t != null) return t;
+        if (t != null) {
+            return t;
+        }
+        // nothing more in current parser? Need to move on.
         while (switchToNext()) {
             t = delegate.nextToken();
             if (t != null) return t;
