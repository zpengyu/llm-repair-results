diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
index 24fa134a..a60888d5 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
@@ -112,14 +112,11 @@ public class FastDateParser implements DateParser, Serializable {
      * Initialize derived fields from defining fields.
      * This is called from constructor and from readObject (de-serialization)
      */
-    private void init() {
+private void init() {
         thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
-
         nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();
-
         StringBuilder regex= new StringBuilder();
         List<Strategy> collector = new ArrayList<Strategy>();
-
         Matcher patternMatcher= formatPattern.matcher(pattern);
         if(!patternMatcher.lookingAt()) {
             throw new IllegalArgumentException("Invalid pattern");
@@ -130,11 +126,9 @@ public class FastDateParser implements DateParser, Serializable {
         for(;;) {
             patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
             if(!patternMatcher.lookingAt()) {
-                nextStrategy = null;
                 break;
             }
             String nextFormatField= patternMatcher.group();
-            nextStrategy = getStrategy(nextFormatField);
             if(currentStrategy.addRegex(this, regex)) {
                 collector.add(currentStrategy);
             }
