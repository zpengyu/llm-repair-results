diff --git a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
index 78f4d67e..cb01ee81 100644
--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
@@ -139,10 +131,20 @@ public class BaseNCodecInputStream extends FilterInputStream {
      *
      * @throws IllegalArgumentException if the provided skip length is negative
      */
-
         // skip in chunks of 512 bytes
-
-
+        long read = 0;
+        long remaining = n;
+        int toRead = remaining > BUFFER_SIZE ? BUFFER_SIZE : (int) remaining;
+        while (remaining > 0) {
+            int inputLen = in.read(buffer, 0, toRead);
+            if (inputLen < 0) {
+                break;
+            }
+            read += inputLen;
+            remaining -= inputLen;
+            toRead = remaining > BUFFER_SIZE ? BUFFER_SIZE : (int) remaining;
+        }
+        return read;
     /**
      * {@inheritDoc}
      *
@@ -153,6 +155,6 @@ public class BaseNCodecInputStream extends FilterInputStream {
         //       as long as we have not reached EOF, indicate that there is more
         //       data available. As we do not know for sure how much data is left,
         //       just return 1 as a safe guess.
-
         // use the EOF flag of the underlying codec instance
+        return this.baseNCodec.isInAlphabet(this.singleByte[0]) ? 1 : 0;
 }
\ No newline at end of file
