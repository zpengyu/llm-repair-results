diff --git a/src/main/java/org/jsoup/nodes/FormElement.java b/src/main/java/org/jsoup/nodes/FormElement.java
index 3949f22..a7909ec 100644
--- a/src/main/java/org/jsoup/nodes/FormElement.java
+++ b/src/main/java/org/jsoup/nodes/FormElement.java
@@ -75,40 +75,39 @@ public class FormElement extends Element {
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
-    public List<Connection.KeyVal> formData() {
-        ArrayList<Connection.KeyVal> data = new ArrayList<>();
-
-        // iterate the form control elements and accumulate their values
-        for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
-            String name = el.attr("name");
-            if (name.length() == 0) continue;
-            String type = el.attr("type");
-
-
-            if ("select".equals(el.normalName())) {
-                Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    // iterate the form control elements and accumulate their values
+    for (Element el: elements) {
+        if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+        if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+        String name = el.attr("name");
+        if (name.length() == 0) continue;
+        String type = el.attr("type");
+        if ("select".equals(el.normalName())) {
+            Elements options = el.select("option[selected]");
+            boolean set = false;
+            for (Element option: options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+                set = true;
+            }
+            if (!set) {
+                Element option = el.select("option").first();
+                if (option != null)
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
-                }
-                if (!set) {
-                    Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
-                }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
-                if (el.hasAttr("checked")) {
-                    final String val = el.val().length() >  0 ? el.val() : "on";
-                    data.add(HttpConnection.KeyVal.create(name, val));
-                }
-            } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
+        } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            // only add checkbox or radio if they have the checked attribute
+            if (el.hasAttr("checked")) {
+                final String val = el.val().length() >  0 ? el.val() : "on";
+                data.add(HttpConnection.KeyVal.create(name, val));
+            }
+        } else if (type.equalsIgnoreCase("submit")) {
+            final String val = el.val().length() >  0 ? el.val() : "Submit";
+            data.add(HttpConnection.KeyVal.create(name, val));
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
-        return data;
     }
-}
+    return data;
+}}
