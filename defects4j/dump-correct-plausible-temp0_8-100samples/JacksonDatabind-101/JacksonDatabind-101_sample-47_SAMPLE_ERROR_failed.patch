diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java
index 3c89dc109..1b4e86fc4 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java
@@ -805,11 +802,7 @@ public class BeanDeserializer
             //    both to any setter AND buffer... but, for now, the only thing
             //    we can do.
             // how about any setter? We'll get copies but...
-            if (_anySetter == null) {
-                // but... others should be passed to unwrapped property deserializers
-                tokens.writeFieldName(propName);
-                tokens.copyCurrentStructure(p);
-            } else {
+            if (_anySetter != null) {
                 // Need to copy to a separate buffer first
                 TokenBuffer b2 = TokenBuffer.asCopyOfValue(p);
                 tokens.writeFieldName(propName);
@@ -822,15 +815,19 @@ public class BeanDeserializer
                 }
                 continue;
             }
+            // !!! 08-Jul-2011, tatu: Could probably support; but for now
+            //   it's too complicated, so bail out
+            ctxt.reportInputMismatch(_beanType,
+                    "Cannot bind JSON into Object.class but got %s",
+                    handledType().getRawClass().getName());
+            return null;
         }
-
         // We hit END_OBJECT, so:
         Object bean;
         try {
             bean = creator.build(ctxt, buffer);
         } catch (Exception e) {
-            wrapInstantiationProblem(e, ctxt);
-            return null; // never gets here
+            bean = wrapInstantiationProblem(e, ctxt);
         }
         return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
     }
