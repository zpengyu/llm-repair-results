diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
index aeaa0dc42..c2b216c37 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
@@ -425,21 +425,18 @@ System.err.println("And new propr #"+slot+" '"+key+"'");
      */
     public void remove(SettableBeanProperty propToRm)
     {
+        String nameToRm = propToRm.getName();
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
-        String key = getPropertyName(propToRm);
         boolean found = false;
-
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
+            String propName = prop.getName();
             if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+                found = (nameToRm.equals(propName));
                 if (found) {
-                    // need to leave a hole here
                     _propsInOrder[_findFromOrdered(prop)] = null;
                     continue;
                 }
@@ -447,7 +444,7 @@ System.err.println("And new propr #"+slot+" '"+key+"'");
             props.add(prop);
         }
         if (!found) {
-            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
+            throw new NoSuchElementException("No entry '"+nameToRm+"' found, can't remove");
         }
         init(props);
     }
