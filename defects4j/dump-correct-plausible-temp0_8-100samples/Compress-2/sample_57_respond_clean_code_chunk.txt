//        if (offset == 0) {
//            final byte[] expected = ArArchiveEntry.HEADER.getBytes();
//            final byte[] realized = new byte[expected.length]; 
//            final int read = read(realized);
//            if (read != expected.length) {
//                throw new IOException("failed to read header");
//            }
//            for (int i = 0; i < expected.length; i++) {
//                if (expected[i] != realized[i]) {
//                    throw new IOException("invalid header " + new String(realized));
//                }
//            }
//        }
//        if (offset % 2 != 0) {
//            read();
//        }
//        read(length);
        {
//            final byte[] expected = ArArchiveEntry.TRAILER.getBytes();
//            final byte[] realized = new byte[expected.length]; 
//            final int read = read(realized);
//            if (read != expected.length) {
//                throw new IOException("failed to read entry header");
//            }
//            for (int i = 0; i < expected.length; i++) {
//                if (expected[i] != realized[i]) {
//                    throw new IOException("invalid entry header. not read the content?");
//                }
//            }
        }
//        return new ArArchiveEntry(new String(name).trim(),
//                                  Long.parseLong(new String(length)
//                                                         .trim()));
    }