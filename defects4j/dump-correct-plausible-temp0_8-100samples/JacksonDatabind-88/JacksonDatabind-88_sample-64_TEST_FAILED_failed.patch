diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java
index 112c00b5c..f0be0c326 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java
@@ -55,8 +55,11 @@ public class ClassNameIdResolver
             //    compatibility -- needed later anyway, and not doing so may open
             //    security issues.
             JavaType t = tf.constructFromCanonical(id);
-                // Probably cleaner to have a method in `TypeFactory` but can't add in patch
-            return t;
+            if (t.hasRawClass(_baseType.getRawClass())) {
+                return t;
+            }
+            throw new IllegalArgumentException("Invalid type id '"+id+"' (for id type 'Id.class'): "
+                    +"can not deserialize subtype of "+_baseType+" (from id type `"+_baseType+"`)");
         }
         Class<?> cls;
         try {
