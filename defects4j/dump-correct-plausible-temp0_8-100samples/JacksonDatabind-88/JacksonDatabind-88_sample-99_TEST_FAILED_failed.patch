diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java
index 112c00b5c..6a22681f2 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java
@@ -55,8 +55,8 @@ public class ClassNameIdResolver
             //    compatibility -- needed later anyway, and not doing so may open
             //    security issues.
             JavaType t = tf.constructFromCanonical(id);
-                // Probably cleaner to have a method in `TypeFactory` but can't add in patch
-            return t;
+            // Probably cleaner to have a method in `TypeFactory` but can't add in patch
+            return t.isTypeOrSubTypeOf(_baseType.getRawClass()) ? t : null;
         }
         Class<?> cls;
         try {
@@ -74,9 +74,8 @@ public class ClassNameIdResolver
         } catch (Exception e) {
             throw new IllegalArgumentException("Invalid type id '"+id+"' (for id type 'Id.class'): "+e.getMessage(), e);
         }
-        return tf.constructSpecializedType(_baseType, cls);
+        return cls != null && _baseType.isTypeOrSubTypeOf(cls) ? tf.constructSpecializedType(_baseType, cls) : null;
     }    
-    
     /*
     /**********************************************************
     /* Internal methods
