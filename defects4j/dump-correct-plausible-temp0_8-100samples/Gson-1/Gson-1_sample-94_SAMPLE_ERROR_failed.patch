diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..63224a98 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -90,27 +86,19 @@ final class TypeInfoFactory {
         int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);
         Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();
         return actualTypeArguments[indexOfActualTypeArgument];
-
-
       }
-
-      throw new UnsupportedOperationException("Expecting parameterized type, got " + parentType
-          + ".\n Are you missing the use of TypeToken idiom?\n See "
-          + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
-    } else if (typeToEvaluate instanceof WildcardType) {
-      WildcardType castedType = (WildcardType) typeToEvaluate;
-      return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);
-    } else {
-      throw new IllegalArgumentException("Type \'" + typeToEvaluate + "\' is not a Class, "
-          + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.");
+      else if (typeToEvaluate instanceof WildcardType) {
+        WildcardType castedType = (WildcardType) typeToEvaluate;
+        return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);
+      }
+      else {
+        throw new UnsupportedOperationException("Expecting parameterized type, got " + parentType
+                + ".\n Are you missing the use of TypeToken idiom?\n See "
+                + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
+      }
     }
   }
-
-
       // Evaluate type on this type
-
-
-
   private static Type[] extractRealTypes(
       Type[] actualTypeArguments, Type parentType, Class<?> rawParentClass) {
     Preconditions.checkNotNull(actualTypeArguments);
@@ -129,6 +115,6 @@ final class TypeInfoFactory {
       }
     }
     throw new IllegalStateException(
-        "How can the type variable not be present in the class declaration!");
+            "How can the type variable not be present in the class declaration!");
   }
 }
\ No newline at end of file
