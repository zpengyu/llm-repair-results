diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..ea6d12d2 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -90,10 +86,26 @@ final class TypeInfoFactory {
         int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);
         Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();
         return actualTypeArguments[indexOfActualTypeArgument];
-
-
+      } else if (parentType instanceof Class<?>) {
+        // Since the class is not parameterized the type argument for the generic supertype is the
+        // raw type argument.
+        Class<?> rawSuperType = TypeUtils.getRawType(parentType);
+        TypeVariable<?>[] typeVariables = rawSuperType.getTypeParameters();
+        int indexOfTypeVariable = getIndex(typeVariables, (TypeVariable<?>) typeToEvaluate);
+        Class<?>[] genericInterfaces = rawSuperType.getGenericInterfaces();
+        for (Class<?> genericInterface : genericInterfaces) {
+          Type resolved = resolveTypeVariable(typeToEvaluate, genericInterface, rawSuperType);
+          if (!(resolved instanceof TypeVariable<?>)) {
+            if (TypeUtils.getRawType(resolved).equals(rawSuperType)) {
+              if (resolved instanceof ParameterizedType) {
+                Type[] typeArgs = ((ParameterizedType) resolved).getActualTypeArguments();
+                return typeArgs[indexOfTypeVariable];
+              }
+            }
+          }
+        }
+        return Object.class;
       }
-
       throw new UnsupportedOperationException("Expecting parameterized type, got " + parentType
           + ".\n Are you missing the use of TypeToken idiom?\n See "
           + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
