diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..d241f7d 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -80,23 +80,23 @@ class CharacterReader {
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
-            }
+        int tempPos = pos;
+        int offset = 0;
+        while(tempPos < length) {
+            if (input[tempPos] == seq.charAt(0) && startsWith(seq, offset))
+                return offset - pos;
+            offset++;
+            tempPos++;
         }
         return -1;
     }
-
+    private boolean startsWith(CharSequence seq, int offset) {
+        for (int i = 0; i < seq.length(); i++) {
+            if (seq.charAt(i) != input[offset + i])
+                return false;
+        }
+        return true;
+    }
     String consumeTo(char c) {
         int offset = nextIndexOf(c);
         if (offset != -1) {
