diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..9884b3f 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -80,16 +80,16 @@ class CharacterReader {
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+        // handles scanning for surrogates
+        int startChar = Character.codePointAt(seq, 0);
+        for (int offset = pos; offset < length; ) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
+            if (startChar != Character.codePointAt(input, offset))
+                while(++offset < length && startChar != Character.codePointAt(input, offset));
+            int i = offset + Character.charCount(startChar);
+            int last = i + Character.charCount(seq.length()-1);
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                for (int j = 1; i < last && Character.codePointAt(seq, j) == Character.codePointAt(input, i); i += Character.charCount(Character.codePointAt(input, i)), j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
