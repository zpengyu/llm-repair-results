diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..fe2c994 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -79,24 +79,22 @@ class CharacterReader {
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
-    int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
-            }
+int nextIndexOf(CharSequence seq) {
+    int start = pos;
+    while (start < length) {
+        int skip = (int) input[start] & 0xff;
+        int next = start + skip + 1;
+        if (next > length)
+            break;
+        if (input[start] == seq.charAt(0) && input[next] == seq.charAt(1)) { // scan to first instance of startchar:
+            int offset = nextIndexOf(seq, next - pos, 2);
+            if (offset != -1)
+                return offset;
         }
-        return -1;
+        start = next;
     }
-
+    return -1;
+}
     String consumeTo(char c) {
         int offset = nextIndexOf(c);
         if (offset != -1) {
