diff --git a/src/org/mockito/internal/creation/DelegatingMethod.java b/src/org/mockito/internal/creation/DelegatingMethod.java
index 0e20d9b8c..63e4c3e6a 100644
--- a/src/org/mockito/internal/creation/DelegatingMethod.java
+++ b/src/org/mockito/internal/creation/DelegatingMethod.java
@@ -9,54 +9,25 @@ import org.mockito.internal.invocation.MockitoMethod;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 
-public class DelegatingMethod implements MockitoMethod {
-
-    private final Method method;
-
-    public DelegatingMethod(Method method) {
-        assert method != null : "Method cannot be null";
-        this.method = method;
-    }
-
-    public Class<?>[] getExceptionTypes() {
-        return method.getExceptionTypes();
-    }
-
-    public Method getJavaMethod() {
-        return method;
-    }
-
-    public String getName() {
-        return method.getName();
-    }
-
-    public Class<?>[] getParameterTypes() {
-        return method.getParameterTypes();
-    }
-
-    public Class<?> getReturnType() {
-        return method.getReturnType();
-    }
-
-    public boolean isVarArgs() {
-        return method.isVarArgs();
-    }
-
-    public boolean isAbstract() {
-        return (method.getModifiers() & Modifier.ABSTRACT) != 0;
-    }
-
-    /**
-     * @return True if the input object is a DelegatingMethod which has an internal Method which is equal to the internal Method of this DelegatingMethod,
-     * or if the input object is a Method which is equal to the internal Method of this DelegatingMethod.
-     */
-    @Override
-    public boolean equals(Object o) {
-            return method.equals(o);
-    }
-
-    @Override
-    public int hashCode() {
-        return 1;
-    }
+public boolean isAbstract() {
+    return (method.getModifiers() & Modifier.ABSTRACT) != 0;
+}
+/**
+ * @return True if the input object is a DelegatingMethod which has an internal Method which is equal to the internal Method of this DelegatingMethod,
+ * or if the input object is a Method which is equal to the internal Method of this DelegatingMethod.
+ */
+@Override
+public boolean equals(Object o) {
+    if (o == null) {
+        return false;
+    } else if (o instanceof DelegatingMethod) {
+        return method.equals(((DelegatingMethod) o).method);
+    } else if (o instanceof Method) {
+        return method.equals(o);
+    }
+    return false;
+}
+@Override
+public int hashCode() {
+    return method.hashCode();
 }
\ No newline at end of file
