    private void handleObjectLit(NodeTraversal t, Node n) {
      for (Node child = n.getFirstChild();
          child != null;
          child = child.getNext()) {
        // Maybe STRING, GET, SET
        // We should never see a mix of numbers and strings.
        String name = child.getString();
        T type = typeSystem.getType(getScope(), n, name);
        Property prop = getProperty(name);
        if (!prop.scheduleRenaming(child,
                                   processProperty(t, prop, type, null))) {
          // TODO(user): It doesn't look like the user can do much in this
          // case right now.
          if (propertiesToErrorFor.containsKey(name)) {
            compiler.report(JSError.make(
                t.getSourceName(), child, propertiesToErrorFor.get(name),
                Warnings.INVALIDATION, name,
                (type == null ? "null" : type.toString()), n.toString(), ""));
          }
        }
      // Addendum to the above: if we have a child of this object literal
      // that is a getter or setter, rename it if it is a valid assignment
      // target.
      if (child.isGetProp() && !child.isQuotedString()) {
        // A getter or setter.
        name = child.getLastChild().getString();
        prop = getProperty(name);
        if (prop.renameable) {
          // A getter or setter, so schedule the name for renaming.
          prop.scheduleRenaming(child.getLastChild(), true);
        }
      }
    }
    }