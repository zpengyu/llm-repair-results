diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index 96c66201..cc4a606d 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -496,10 +495,7 @@ class DisambiguateProperties<T> implements CompilerPass {
         // We should never see a mix of numbers and strings.
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
-
-        Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
+        if (type == null) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
           if (propertiesToErrorFor.containsKey(name)) {
@@ -508,6 +504,19 @@ class DisambiguateProperties<T> implements CompilerPass {
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
+        } else {
+          Property prop = getProperty(name);
+          if (!prop.scheduleRenaming(child,
+                                     processProperty(t, prop, type, null))) {
+            // TODO(user): It doesn't look like the user can do much in this
+            // case right now.
+            if (propertiesToErrorFor.containsKey(name)) {
+              compiler.report(JSError.make(
+                  t.getSourceName(), child, propertiesToErrorFor.get(name),
+                  Warnings.INVALIDATION, name,
+                  (type == null ? "null" : type.toString()), n.toString(), ""));
+            }
+          }
         }
       }
     }
