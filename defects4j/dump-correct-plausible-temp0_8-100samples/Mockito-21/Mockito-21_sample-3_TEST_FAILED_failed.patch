diff --git a/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java b/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
index 972e1a282..cca8c4e94 100644
--- a/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
+++ b/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
@@ -22,6 +18,7 @@ public class ConstructorInstantiator implements Instantiator {
             //this is kind of overengineered because we don't need to support more params
             //however, I know we will be needing it :)
             Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
+            c.setAccessible(true);
             return c.newInstance(outerClassInstance);
         } catch (Exception e) {
             throw paramsException(cls, e);
@@ -32,11 +28,11 @@ public class ConstructorInstantiator implements Instantiator {
         return new InstantationException("Unable to create mock instance of '"
                 + cls.getSimpleName() + "'.\nPlease ensure that the outer instance has correct type and that the target class has parameter-less constructor.", e);
     }
-
-
     private static <T> T noArgConstructor(Class<T> cls) {
         try {
-            return cls.newInstance();
+            Constructor<T> c = cls.getDeclaredConstructor();
+            c.setAccessible(true);
+            return c.newInstance();
         } catch (Exception e) {
             throw new InstantationException("Unable to create mock instance of '"
                     + cls.getSimpleName() + "'.\nPlease ensure it has parameter-less constructor.", e);
