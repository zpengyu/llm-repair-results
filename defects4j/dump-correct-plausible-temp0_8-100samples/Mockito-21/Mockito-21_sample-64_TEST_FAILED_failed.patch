diff --git a/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java b/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
index 972e1a282..fcb88af5c 100644
--- a/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
+++ b/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
@@ -16,11 +13,8 @@ public class ConstructorInstantiator implements Instantiator {
         }
         return withOuterClass(cls);
     }
-
     private <T> T withOuterClass(Class<T> cls) {
         try {
-            //this is kind of overengineered because we don't need to support more params
-            //however, I know we will be needing it :)
             Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
             return c.newInstance(outerClassInstance);
         } catch (Exception e) {
@@ -32,11 +25,9 @@ public class ConstructorInstantiator implements Instantiator {
         return new InstantationException("Unable to create mock instance of '"
                 + cls.getSimpleName() + "'.\nPlease ensure that the outer instance has correct type and that the target class has parameter-less constructor.", e);
     }
-
-
     private static <T> T noArgConstructor(Class<T> cls) {
         try {
-            return cls.newInstance();
+            return cls.getDeclaredConstructor().newInstance();
         } catch (Exception e) {
             throw new InstantationException("Unable to create mock instance of '"
                     + cls.getSimpleName() + "'.\nPlease ensure it has parameter-less constructor.", e);
