diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java
index f4775e18..7e5a757d 100644
--- a/src/main/java/org/joda/time/Partial.java
+++ b/src/main/java/org/joda/time/Partial.java
@@ -431,34 +431,10 @@ public final class Partial
         if (index == -1) {
             DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];
             int[] newValues = new int[newTypes.length];
-            
-            // find correct insertion point to keep largest-smallest order
-            int i = 0;
-            DurationField unitField = fieldType.getDurationType().getField(iChronology);
-            if (unitField.isSupported()) {
-                for (; i < iTypes.length; i++) {
-                    DateTimeFieldType loopType = iTypes[i];
-                    DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
-                    if (loopUnitField.isSupported()) {
-                        int compare = unitField.compareTo(loopUnitField);
-                        if (compare > 0) {
-                            break;
-                        } else if (compare == 0) {
-                            DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);
-                            DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);
-                            if (rangeField.compareTo(loopRangeField) > 0) {
-                                break;
-                            }
-                        }
-                    }
-                }
-            }
-            System.arraycopy(iTypes, 0, newTypes, 0, i);
-            System.arraycopy(iValues, 0, newValues, 0, i);
-            newTypes[i] = fieldType;
-            newValues[i] = value;
-            System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);
-            System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);
+            newTypes[0] = fieldType;
+            newValues[0] = value;
+            System.arraycopy(iTypes, 0, newTypes, 1, iTypes.length);
+            System.arraycopy(iValues, 0, newValues, 1, iValues.length);
             // use public constructor to ensure full validation
             // this isn't overly efficient, but is safe
             Partial newPartial = new Partial(iChronology, newTypes, newValues);
