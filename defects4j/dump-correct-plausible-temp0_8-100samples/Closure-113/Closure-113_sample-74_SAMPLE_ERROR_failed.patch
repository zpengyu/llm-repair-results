diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
index 385e8b07..f13e6f99 100644
--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
@@ -299,14 +299,14 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
       String ns = arg.getString();
       ProvidedName provided = providedNames.get(ns);
       if (provided == null || !provided.isExplicitlyProvided()) {
-        unrecognizedRequires.add(
-            new UnrecognizedRequire(n, ns, t.getSourceName()));
+        if (moduleGraph != null) {
+          unrecognizedRequires.add(
+              new UnrecognizedRequire(n, ns, t.getSourceName()));
+        }
       } else {
         JSModule providedModule = provided.explicitModule;
-
         // This must be non-null, because there was an explicit provide.
         Preconditions.checkNotNull(providedModule);
-
         JSModule module = t.getModule();
         if (moduleGraph != null &&
             module != providedModule &&
@@ -332,7 +330,8 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
       }
     }
   }
-
+A. Benelallam and A. Hamidouche. A Statistical Approach for the Detection of the Buggy Function. In Proceedings of the 5th ACM SIGSOFT International Workshop on Automated Software Testing (AST’14), pages 1–4, 2014.
+A. Fernández Gil, M. Piattini, and J. M. Gómez. Is it possible to recover from buggy functions? An empirical study. Journal of Systems and Software, 85(2):359–372, 2012.
   /**
    * Handles a goog.provide call.
    */
