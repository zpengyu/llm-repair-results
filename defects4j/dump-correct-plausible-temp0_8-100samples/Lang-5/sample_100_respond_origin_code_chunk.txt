    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.equals("_")) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char ch0 = str.charAt(0);
        if (ch0 == '_') {
            final int len = str.length();
            if (len < 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            final char ch1 = str.charAt(1);
            final char ch2 = str.charAt(2);
            if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 3) {
                return new Locale("", str.substring(1, 3));
            }
            if (len < 5) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (str.charAt(3) != '_') {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale("", str.substring(1, 3), str.substring(4));
        }
        if (str.contains("_")) {
            final String[] split = str.split("_", -1);
            final int len = split.length;
            if (len > 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            final String language = split[0];
            if (language.length() > 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 1) {
                return new Locale(language);
            }
            final String country = split[1];
            if (country.length() > 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 2) {
                return new Locale(language, country);
            }
            final String variant = split[2];
            if (variant.length() > 5) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 3) {
                return new Locale(language, country, variant);
            }
        }
        return new Locale(str);
    }