diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index 5e7bfa3f..18a65735 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -2034,9 +2030,28 @@ final class TypedScopeCreator implements ScopeCreator {
                 .recordEscapedQualifiedName(n.getQualifiedName());
           }
         }
+      } else if (n.isGetElem() && NodeUtil.isLValue(n)) {
+        if (parent.isAssign()) {
+          // Do not record the property name, it's not the name of
+          // the variable to be escaped.
+        } else {
+          Node lhs = n.getFirstChild();
+          Node prop = n.getLastChild();
+          if (lhs.isName() && prop.isString()) {
+            String name = lhs.getString();
+            Scope scope = t.getScope();
+            Var var = scope.getVar(name);
+            if (var != null) {
+              Scope ownerScope = var.getScope();
+              if (scope != ownerScope && ownerScope.isLocal()) {
+                data.get(ownerScope.getRootNode())
+                    .recordEscapedQualifiedName(lhs.getQualifiedName());
+              }
+            }
+          }
+        }
       }
-    }
-  }
+    }  }
 
   private AstFunctionContents getFunctionAnalysisResults(@Nullable Node n) {
     if (n == null) {
