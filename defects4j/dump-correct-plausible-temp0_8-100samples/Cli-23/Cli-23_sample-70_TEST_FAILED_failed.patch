diff --git a/src/java/org/apache/commons/cli/HelpFormatter.java b/src/java/org/apache/commons/cli/HelpFormatter.java
index 7f61ceb..fbed476 100644
--- a/src/java/org/apache/commons/cli/HelpFormatter.java
+++ b/src/java/org/apache/commons/cli/HelpFormatter.java
@@ -802,15 +802,10 @@ public class HelpFormatter
      *
      * @return the StringBuffer with the rendered Options contents.
      */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+    protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
         int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
+        if (pos == -1) {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
@@ -818,24 +812,17 @@ public class HelpFormatter
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
+        while (true) {
             int lastPos = pos;
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
+            if (pos == -1) {
                 sb.append(text);
-
                 return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            } else if (pos == lastPos) {
+                throw new RuntimeException(
+                        "Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
             }
-
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
