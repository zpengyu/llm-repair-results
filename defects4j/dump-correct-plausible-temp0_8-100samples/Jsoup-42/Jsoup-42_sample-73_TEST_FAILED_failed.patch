diff --git a/src/main/java/org/jsoup/nodes/FormElement.java b/src/main/java/org/jsoup/nodes/FormElement.java
index 256eb1b..b7fad25 100644
--- a/src/main/java/org/jsoup/nodes/FormElement.java
+++ b/src/main/java/org/jsoup/nodes/FormElement.java
@@ -71,16 +71,15 @@ public class FormElement extends Element {
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
-    public List<Connection.KeyVal> formData() {
+     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
-
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
-
+            boolean formControlTypeNotSet = type.equalsIgnoreCase("textarea") || type.length() == 0;
             if ("select".equals(el.tagName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
@@ -93,7 +92,7 @@ public class FormElement extends Element {
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            } else if (formControlTypeNotSet || "checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
                 // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
                     final String val = el.val();
