    private int compareNodePointers(
        NodePointer p1,
        int depth1,
        NodePointer p2,
        int depth2) 
    {
        while (depth1 != depth2) {
            if (depth1 < depth2) {
                p2 = p2.parent;
                depth2--;
            }
            else {
                p1 = p1.parent;
                depth1--;
            }
        }

        while (p1 != null && !p1.equals(p2)) {
            p1 = p1.parent;
            p2 = p2.parent;
            depth1--;
        }
        if (p1 == null) {
            throw new JXPathException(
                    "Cannot compare pointers that do not belong to the same tree: '"
                            + p1 + "' and '" + p2 + "'");
        }

        if (depth1 == 1) {
            return 0;
        }
        return p1.parent.compareChildNodePointers(p1, p2);
    }

