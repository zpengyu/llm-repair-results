diff --git a/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java b/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
index 5559e33..4c6ad70 100644
--- a/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
+++ b/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
@@ -645,35 +645,31 @@ public abstract class NodePointer implements Pointer {
         NodePointer p2,
         int depth2) 
     {
-        if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
-            return r == 0 ? -1 : r;
-        }
-        if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
-            return r == 0 ? 1 : r;
-        }
-        if (p1 == null && p2 == null) {
-            return 0;
+        while (depth1 != depth2) {
+            if (depth1 < depth2) {
+                p2 = p2.parent;
+                depth2--;
+            }
+            else {
+                p1 = p1.parent;
+                depth1--;
+            }
         }
-
-        if (p1 != null && p1.equals(p2)) {
-            return 0;
+        while (p1 != null && !p1.equals(p2)) {
+            p1 = p1.parent;
+            p2 = p2.parent;
+            depth1--;
         }
-
-        if (depth1 == 1) {
+        if (p1 == null) {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
         }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
-        if (r != 0) {
-            return r;
+        if (depth1 == 1) {
+            return 0;
         }
-
         return p1.parent.compareChildNodePointers(p1, p2);
     }
-
     /**
      * Print internal structure of a pointer for debugging
      */
