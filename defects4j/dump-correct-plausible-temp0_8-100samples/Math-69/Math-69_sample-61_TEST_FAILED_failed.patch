diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java
index 2b009fce4..872237236 100644
--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java
+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java
@@ -157,24 +157,23 @@ public class PearsonsCorrelation {
      * @return matrix of p-values
      * @throws MathException if an error occurs estimating probabilities
      */
-    public RealMatrix getCorrelationPValues() throws MathException {
-        TDistribution tDistribution = new TDistributionImpl(nObs - 2);
-        int nVars = correlationMatrix.getColumnDimension();
-        double[][] out = new double[nVars][nVars];
-        for (int i = 0; i < nVars; i++) {
-            for (int j = 0; j < nVars; j++) {
-                if (i == j) {
-                    out[i][j] = 0d;
-                } else {
-                    double r = correlationMatrix.getEntry(i, j);
-                    double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
-                }
+public RealMatrix getCorrelationPValues() throws MathException {
+    TDistribution tDistribution = new TDistributionImpl(nObs - 2);
+    int nVars = correlationMatrix.getColumnDimension();
+    double[][] out = new double[nVars][nVars];
+    for (int i = 0; i < nVars; i++) {
+        for (int j = 0; j < nVars; j++) {
+            if (i == j) {
+                out[i][j] = 0d;
+            } else {
+                double r = correlationMatrix.getEntry(i, j);
+                double t = Math.abs(r * Math.sqrt((nObs - 2)/(1d - r * r)));
+                out[i][j] = 2d * (1d - tDistribution.cumulativeProbability(t));
             }
         }
-        return new BlockRealMatrix(out);
     }
-
+    return new BlockRealMatrix(out);
+}
 
     /**
      * Computes the correlation matrix for the columns of the
