diff --git a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
index d0c0d43c..21761c1d 100644
--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
@@ -150,34 +150,23 @@ public class BZip2CompressorInputStream extends CompressorInputStream implements
      * @see java.io.InputStream#read(byte[], int, int)
      */
     @Override
-    public int read(final byte[] dest, final int offs, final int len)
-        throws IOException {
-        if (offs < 0) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
-        }
-        if (len < 0) {
-            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
-        }
-        if (offs + len > dest.length) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
-                                                + len + ") > dest.length(" + dest.length + ").");
-        }
-        if (this.in == null) {
-            throw new IOException("stream closed");
-        }
-
-        final int hi = offs + len;
-        int destOffs = offs;
-        int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
-            dest[destOffs++] = (byte) b;
-            count(1);
-        }
-
-        int c = (destOffs == offs) ? -1 : (destOffs - offs);
-        return c;
+public int read(final byte[] dest, final int offs, final int len)
+    throws IOException {
+    if (offs < 0 || len < 0 || offs + len > dest.length) {
+        throw new IndexOutOfBoundsException();
     }
-
+    if (this.in == null) {
+        throw new IOException("stream closed");
+    }
+    int destOffs = offs;
+    int b;
+    while (destOffs < offs + len && ((b = read0()) >= 0)) {
+        dest[destOffs++] = (byte) b;
+        count(1);
+    }
+    int c = (destOffs == offs) ? -1 : (destOffs - offs);
+    return c;
+}
     private void makeMaps() {
         final boolean[] inUse = this.data.inUse;
         final byte[] seqToUnseq = this.data.seqToUnseq;
