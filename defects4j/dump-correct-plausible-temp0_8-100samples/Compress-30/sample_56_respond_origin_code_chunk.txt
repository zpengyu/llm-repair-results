    public int read(final byte[] dest, final int offs, final int len)
        throws IOException {
        if (offs < 0 || offs > dest.length || len < 0
            || offs + len > dest.length || offs + len < 0) {
            throw new IndexOutOfBoundsException();
        }
        if (this.in == null) {
            throw new IOException("stream closed");
        }

        final int hi = offs + len;
        int destOffs = offs;
        int b;
        while (destOffs < hi && ((b = read0()) >= 0)) {
            dest[destOffs++] = (byte) b;
            count(1);
        }

        int c = (destOffs == offs) ? -1 : (destOffs - offs);
        return c;
    }
