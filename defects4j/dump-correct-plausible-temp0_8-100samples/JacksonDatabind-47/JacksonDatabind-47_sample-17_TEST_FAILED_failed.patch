diff --git a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
index 624a1fd7e..92a382846 100644
--- a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
@@ -868,11 +863,11 @@ public abstract class AnnotationIntrospector
                if (contentType.hasRawClass(contentClass)) {
                    contentType = contentType.withStaticTyping();
                } else {
-                   // 03-Apr-2016, tatu: As per [databind#1178], may need to actually
-                   //   specialize (narrow) type sometimes, even if more commonly opposite
-                   //   is needed.
                    Class<?> currRaw = contentType.getRawClass();
                    try {
+                       // 03-Apr-2016, tatu: As per [databind#1178], may need to actually
+                       //   specialize (narrow) type sometimes, even if more commonly opposite
+                       //   is needed.
                        if (contentClass.isAssignableFrom(currRaw)) { // common case
                            contentType = tf.constructGeneralizedType(contentType, contentClass);
                        } else if (currRaw.isAssignableFrom(contentClass)) { // specialization, ok as well
