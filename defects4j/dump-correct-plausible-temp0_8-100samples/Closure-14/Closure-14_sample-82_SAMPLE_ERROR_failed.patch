diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 0f5c5421..a934ab98 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -774,12 +772,10 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
     // Now that we are done with the special cases follow should be its
     // immediate sibling, unless its sibling is a function
     Node nextSibling = node.getNext();
-
     // Skip function declarations because control doesn't get pass into it.
-    while (nextSibling != null && nextSibling.isFunction()) {
+    while (nextSibling != null && (nextSibling.isFunction() || nextSibling.isClass())) {
       nextSibling = nextSibling.getNext();
     }
-
     if (nextSibling != null) {
       return computeFallThrough(nextSibling);
     } else {
