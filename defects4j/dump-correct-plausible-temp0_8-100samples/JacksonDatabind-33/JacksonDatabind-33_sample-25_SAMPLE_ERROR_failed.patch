diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
index f66075ef7..db26d3879 100644
--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
@@ -753,7 +752,29 @@ public class JacksonAnnotationIntrospector
         }
         return PropertyName.construct(name);
     }
-
+    private PropertyName _findConstructorName(Annotated a) {
+        JsonCreator.Mode mode = _findCreatorBinding(a).mode();
+        PropertyName name = null;
+        switch (mode) {
+        case PROPERTIES:
+            JsonProperty pann = _findAnnotation(a, JsonProperty.class);
+            if (pann != null) {
+                name = PropertyName.construct(pann.value());
+            }
+            break;
+        case DELEGATING:
+            name = null;
+            break;
+        case DEFAULT: // fall-through
+        case DISABLED:
+            name = _findExplicitParamName(a, a.getDeclaringClass());
+            if (name == null) {
+                name = _findImplicitParamName(a, a.getDeclaringClass());
+            }
+            break;
+        }
+        return name;
+    }
     @Override
     public boolean hasAsValueAnnotation(AnnotatedMethod am) {
         JsonValue ann = _findAnnotation(am, JsonValue.class);
