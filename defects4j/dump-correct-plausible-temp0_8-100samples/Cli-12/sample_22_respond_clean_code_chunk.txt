    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
    {
        List tokens = new ArrayList();
        boolean eatTheRest = false;
        for (int i = 0; i < arguments.length; i++)
        {
            String arg = arguments[i];
            if ("--".equals(arg))
            {
                eatTheRest = true;
                tokens.add("--");
            }
            else if ("-".equals(arg))
            {
                tokens.add("-");
            }
            else if (arg.startsWith("-"))
            {
                String opt = Util.stripLeadingHyphens(arg);
                if (options.hasOption(opt))
                {
                    tokens.add(arg);
                }
                else
                {
                    if (arg.startsWith("--"))
                    {
                        // the format is --foo=value or --foo value
                        int pos = arg.indexOf('=');
                        String key = (pos == -1) ? arg : arg.substring(0, pos);
                        if (options.hasOption(key))
                        {
                            tokens.add(key);
                            if (pos != -1)
                            {
                                tokens.add(arg.substring(pos + 1));
                            }
                            else
                            {
                                if (i + 1 < arguments.length)
                                {
                                    tokens.add(arguments[i + 1]);
                                }
                                else
                                {
                                    eatTheRest = true;
                                }
                            }
                        }
                        else
                        {
                            eatTheRest = stopAtNonOption;
                            tokens.add(arg);
                        }
                    }
                    else
                    {
                        // the format is a special properties option (-Dproperty=value)
                        tokens.add(arg.substring(0, 2)); // -D
                        tokens.add(arg.substring(2)); // property=value
                    }
                }
            }
            else
            {
                tokens.add(arg);
            }
            if (eatTheRest)
            {
                for (i++; i < arguments.length; i++)
                {
                    tokens.add(arguments[i]);
                }
            }
        }
        return (String[]) tokens.toArray(new String[tokens.size()]);
    }