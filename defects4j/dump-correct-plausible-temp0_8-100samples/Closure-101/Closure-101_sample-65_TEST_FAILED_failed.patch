diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java
index 00e3e1ba..08921954 100644
--- a/src/com/google/javascript/jscomp/CommandLineRunner.java
+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java
@@ -416,28 +416,24 @@ public class CommandLineRunner extends
   }
 
   @Override
-  protected CompilerOptions createOptions() {
-    CompilerOptions options = new CompilerOptions();
-    options.setCodingConvention(new ClosureCodingConvention());
-    CompilationLevel level = flags.compilation_level;
-    level.setOptionsForCompilationLevel(options);
-    if (flags.debug) {
-      level.setDebugOptionsForCompilationLevel(options);
-    }
-
-    WarningLevel wLevel = flags.warning_level;
-    wLevel.setOptionsForWarningLevel(options);
-    for (FormattingOption formattingOption : flags.formatting) {
-      formattingOption.applyToOptions(options);
-    }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
-    }
-
-    initOptionsFromFlags(options);
-    return options;
-  }
-
+protected CompilerOptions createOptions() {
+	CompilerOptions options = new CompilerOptions();
+	CompilationLevel level = flags.compilation_level;
+	level.setOptionsForCompilationLevel(options);
+	if (flags.debug) {
+		level.setDebugOptionsForCompilationLevel(options);
+	}
+	if (flags.process_closure_primitives) {
+		options.closurePass = true;
+	}
+	WarningLevel wLevel = flags.warning_level;
+	wLevel.setOptionsForWarningLevel(options);
+	for (FormattingOption formattingOption : flags.formatting) {
+		formattingOption.applyToOptions(options);
+	}
+	initOptionsFromFlags(options);
+	return options;
+}
   @Override
   protected Compiler createCompiler() {
     return new Compiler(getErrorPrintStream());
