  private void traverse(Node node) {
    // The goal here is to avoid retraversing
    // the entire AST to catch newly created opportunities.
    // So we track whether a "unit of code" has changed,
    // and revisit immediately.
    if (!shouldVisit(node)) {
      return;
    }
    int visits = 0;
    boolean condition = true;
    while (condition) {
      Node c = node.getFirstChild();
      while(c != null) {
        traverse(c);
        Node next = c.getNext();
        c = next;
      }
      visit(node);
      visits++;
      Preconditions.checkState(visits < 10000, "too many interations");
      if (node.hasChildren()) {
        // If this node was modified during the visit
        // we should revisit it.
        condition = shouldRetraverse(node);
      } else {
        // If this node had no children, there is no
        // point in revisiting it.
        condition = false;
      }
    }
    exitNode(node);
  }