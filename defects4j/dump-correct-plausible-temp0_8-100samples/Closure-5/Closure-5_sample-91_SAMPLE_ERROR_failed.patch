diff --git a/src/com/google/javascript/jscomp/InlineObjectLiterals.java b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
index 2f5a8e10..1fd25668 100644
--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java
+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
@@ -224,17 +217,13 @@ class InlineObjectLiterals implements CompilerPass {
             // ES5 get/set not supported.
             return false;
           }
-
-          validProperties.add(child.getString());
-
-          Node childVal = child.getFirstChild();
           // Check if childVal is the parent of any of the passed in
           // references, as that is how self-referential assignments
           // will happen.
           for (Reference t : refs) {
             Node refNode = t.getParent();
             while (!NodeUtil.isStatementBlock(refNode)) {
-              if (refNode == childVal) {
+              if (refNode == child) {
                 // There's a self-referential assignment
                 return false;
               }
@@ -242,8 +231,7 @@ class InlineObjectLiterals implements CompilerPass {
             }
           }
         }
-
-
+        validProperties.add(child.getString());
         // We have found an acceptable object literal assignment. As
         // long as there are no other assignments that mess things up,
         // we can inline.
