diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java
index d72ea4ad1..ff1a9a5ab 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java
@@ -123,10 +113,9 @@ public class EnumSerializer
     /* Actual serialization
     /**********************************************************
      */
-    
     @Override
     public final void serialize(Enum<?> en, JsonGenerator gen, SerializerProvider serializers)
-        throws IOException
+            throws IOException
     {
         // [JACKSON-684]: serialize as index?
         if (_serializeAsIndex(serializers)) {
@@ -165,10 +152,9 @@ public class EnumSerializer
         }
         return objectNode;
     }
-    
     @Override
     public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)
-        throws JsonMappingException
+            throws JsonMappingException
     {
         SerializerProvider serializers = visitor.getProvider();
         if (_serializeAsIndex(serializers)) {
@@ -235,6 +217,6 @@ public class EnumSerializer
         // 07-Mar-2017, tatu: Also means `OBJECT` not available as property annotation...
         throw new IllegalArgumentException(String.format(
                 "Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation",
-                    shape, enumClass.getName(), (fromClass? "class" : "property")));
+                shape, enumClass.getName(), (fromClass? "class" : "property")));
     }
 }
\ No newline at end of file
