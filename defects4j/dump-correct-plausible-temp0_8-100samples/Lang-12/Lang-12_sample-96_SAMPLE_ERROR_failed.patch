diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
index 7f269a0c..4b5812ef 100644
--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
@@ -227,19 +227,45 @@ public class RandomStringUtils {
         } else if (count < 0) {
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
-
         if (start == 0 && end == 0) {
-                if (!letters && !numbers) {
-                    end = Integer.MAX_VALUE;
+            if (letters && numbers) {
+                end = 'z' + 1;
+                start = ' ';
+                if (chars != null) {
+                    chars = null;
+                }
+            } else {
+                if (chars != null) {
+                    chars = removeDuplicated(chars);
+                    if(chars.length == 0) {
+                        throw new IllegalArgumentException("The chars array must not be empty");
+                    }
+                    end = chars.length;
                 } else {
-                    end = 'z' + 1;
-                    start = ' ';
+                    if (letters) {
+                        end = 'z' + 1;
+                        start = 'a';
+                    } else if (numbers) {
+                        end = '9' + 1;
+                        start = '0';
+                    } else {
+                        end = Integer.MAX_VALUE;
+                    }
                 }
+            }
+        } else {
+            if (end <= start) {
+                throw new IllegalArgumentException("Parameter end (" + end + ") must be greater than start (" + start + ")");
+            }
+            if (chars != null) {
+                if (end - start != chars.length) {
+                    throw new IllegalArgumentException("Parameter end (" + end + ") must be equal to start (" + start + ") plus chars length (" + chars.length + ")");
+                }
+                chars = removeDuplicated(chars);
+            }
         }
-
         char[] buffer = new char[count];
         int gap = end - start;
-
         while (count-- != 0) {
             char ch;
             if (chars == null) {
@@ -247,35 +273,10 @@ public class RandomStringUtils {
             } else {
                 ch = chars[random.nextInt(gap) + start];
             }
-            if (letters && Character.isLetter(ch)
-                    || numbers && Character.isDigit(ch)
-                    || !letters && !numbers) {
-                if(ch >= 56320 && ch <= 57343) {
-                    if(count == 0) {
-                        count++;
-                    } else {
-                        // low surrogate, insert high surrogate after putting it in
-                        buffer[count] = ch;
-                        count--;
-                        buffer[count] = (char) (55296 + random.nextInt(128));
-                    }
-                } else if(ch >= 55296 && ch <= 56191) {
-                    if(count == 0) {
-                        count++;
-                    } else {
-                        // high surrogate, insert low surrogate before putting it in
-                        buffer[count] = (char) (56320 + random.nextInt(128));
-                        count--;
-                        buffer[count] = ch;
-                    }
-                } else if(ch >= 56192 && ch <= 56319) {
-                    // private high surrogate, no effing clue, so skip it
-                    count++;
-                } else {
-                    buffer[count] = ch;
-                }
-            } else {
+            if (Character.isSurrogate(ch)) {
                 count++;
+            } else {
+                buffer[count] = ch;
             }
         }
         return new String(buffer);
