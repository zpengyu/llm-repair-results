diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
index 6fa773f53..37016a625 100644
--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
@@ -74,10 +65,18 @@ public class ReturnsDeepStubs implements Answer<Object>, Serializable {
      * @param returnTypeGenericMetadata The metadata to use to create the new mock.
      * @return The mock
      */
-
-
-
-
+    private Object createMock(GenericMetadataSupport returnTypeGenericMetadata) {
+        if (isCollection(returnTypeGenericMetadata.rawType())) {
+            return Mockito.mock(List.class, this);
+        }
+        if (isMap(returnTypeGenericMetadata.rawType())) {
+            return Mockito.mock(Map.class, this);
+        }
+        if (returnTypeGenericMetadata.isParameterized()) {
+            return Mockito.mock(rawType(returnTypeGenericMetadata.getGenericType()), this);
+        }
+        throw new MockitoException("Cannot create mock of generic type " + returnTypeGenericMetadata.rawType().getCanonicalName());
+    }
     private Object recordDeepStubMock(InvocationOnMock invocation, InvocationContainerImpl container) {
         Class<?> clz = invocation.getMethod().getReturnType();
         final Object mock = org.mockito.Mockito.mock(clz, this);
