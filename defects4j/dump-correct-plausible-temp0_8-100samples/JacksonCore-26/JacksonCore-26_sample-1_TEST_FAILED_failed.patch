diff --git a/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java b/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java
index feec6483..166b0052 100644
--- a/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java
+++ b/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java
@@ -87,11 +87,10 @@ public class NonBlockingJsonParser
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
-        if (end < start) {
+        if (start < 0 || start >= end) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
@@ -99,11 +98,9 @@ public class NonBlockingJsonParser
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
-
+        _currInputProcessed += _inputEnd;
         // Also need to adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
