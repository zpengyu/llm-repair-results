diff --git a/src/java/org/apache/commons/cli/HelpFormatter.java b/src/java/org/apache/commons/cli/HelpFormatter.java
index 0c5dc6b..653a4dd 100644
--- a/src/java/org/apache/commons/cli/HelpFormatter.java
+++ b/src/java/org/apache/commons/cli/HelpFormatter.java
@@ -789,11 +789,9 @@ public class HelpFormatter {
      *
      * @return the StringBuffer with the rendered Options contents.
      */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+     protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
@@ -801,27 +798,31 @@ public class HelpFormatter {
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
+        // all following lines must be padded with nextLineTabStop space characters
+        if (nextLineTabStop > 0)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
+            final String padding = createPadding(nextLineTabStop);
+            while (true)
             {
-                sb.append(text);
-
-                return sb;
+                text = padding + text.substring(pos).trim();
+                pos = findWrapPos(text, width, nextLineTabStop);
+                if (pos == -1)
+                {
+                    sb.append(text);
+                    return sb;
+                }
+                if (text.length() > pos)
+                {
+                    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+                }
             }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        }
+        else
+        {
+            sb.append(text.substring(pos).trim()).append(defaultNewLine);
+            return sb;
         }
     }
-
     /**
      * Finds the next text wrap position after <code>startPos</code> for the 
      * text in <code>text</code> with the column width <code>width</code>.
