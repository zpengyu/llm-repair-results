diff --git a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
index 42399c04d..6682627dc 100644
--- a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
@@ -254,7 +254,7 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
          * @throws MathIllegalStateException when the guessing procedure cannot
          * produce sensible results.
          */
-        private void guessAOmega() {
+            private void guessAOmega() {
             // initialize the sums for the linear model between the two integrals
             double sx2 = 0;
             double sy2 = 0;
@@ -297,7 +292,7 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
             double c1 = sy2 * sxz - sxy * syz;
             double c2 = sxy * sxz - sx2 * syz;
             double c3 = sx2 * sy2 - sxy * sxy;
-            if ((c1 / c2 < 0) || (c2 / c3 < 0)) {
+            if ((c1 / c2 < 0) || (c2 / c3 < 0) || Double.isInfinite(c1) || Double.isInfinite(c2) || Double.isInfinite(c3)) {
                 final int last = observations.length - 1;
                 // Range of the observations, assuming that the
                 // observations are sorted.
@@ -320,9 +314,6 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
                 }
                 a = 0.5 * (yMax - yMin);
             } else {
-                    // In some ill-conditioned cases (cf. MATH-844), the guesser
-                    // procedure cannot produce sensible results.
-
                 a = FastMath.sqrt(c1 / c2);
                 omega = FastMath.sqrt(c2 / c3);
             }
