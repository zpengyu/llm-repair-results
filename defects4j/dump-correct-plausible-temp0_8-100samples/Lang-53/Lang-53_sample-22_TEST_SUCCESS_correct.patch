diff --git a/src/java/org/apache/commons/lang/time/DateUtils.java b/src/java/org/apache/commons/lang/time/DateUtils.java
index b388e22e..1106d258 100644
--- a/src/java/org/apache/commons/lang/time/DateUtils.java
+++ b/src/java/org/apache/commons/lang/time/DateUtils.java
@@ -625,13 +624,6 @@ public class DateUtils {
         if (field == Calendar.MILLISECOND) {
             return;
         }
-
-        // ----------------- Fix for LANG-59 ---------------------- START ---------------
-        // see http://issues.apache.org/jira/browse/LANG-59
-        //
-        // Manually truncate milliseconds, seconds and minutes, rather than using
-        // Calendar methods.
-
         Date date = val.getTime();
         long time = date.getTime();
         boolean done = false;
@@ -640,20 +631,18 @@ public class DateUtils {
         int millisecs = val.get(Calendar.MILLISECOND);
         if (!round || millisecs < 500) {
             time = time - millisecs;
+        }
         if (field == Calendar.SECOND) {
             done = true;
-            }
         }
-
         // truncate seconds
         int seconds = val.get(Calendar.SECOND);
         if (!done && (!round || seconds < 30)) {
             time = time - (seconds * 1000L);
+        }
         if (field == Calendar.MINUTE) {
             done = true;
-            }
         }
-
         // truncate minutes
         int minutes = val.get(Calendar.MINUTE);
         if (!done && (!round || minutes < 30)) {
@@ -665,8 +653,6 @@ public class DateUtils {
             date.setTime(time);
             val.setTime(date);
         }
-        // ----------------- Fix for LANG-59 ----------------------- END ----------------
-
         boolean roundUp = false;
         for (int i = 0; i < fields.length; i++) {
             for (int j = 0; j < fields[i].length; j++) {
@@ -692,31 +678,21 @@ public class DateUtils {
                     return;
                 }
             }
-            //We have various fields that are not easy roundings
             int offset = 0;
             boolean offsetSet = false;
-            //These are special types of fields that require different rounding rules
             switch (field) {
                 case DateUtils.SEMI_MONTH:
                     if (fields[i][0] == Calendar.DATE) {
-                        //If we're going to drop the DATE field's value,
-                        //  we want to do this our own way.
-                        //We need to subtrace 1 since the date has a minimum of 1
                         offset = val.get(Calendar.DATE) - 1;
-                        //If we're above 15 days adjustment, that means we're in the
-                        //  bottom half of the month and should stay accordingly.
                         if (offset >= 15) {
                             offset -= 15;
                         }
-                        //Record whether we're in the top or bottom half of that range
                         roundUp = offset > 7;
                         offsetSet = true;
                     }
                     break;
                 case Calendar.AM_PM:
                     if (fields[i][0] == Calendar.HOUR_OF_DAY) {
-                        //If we're going to drop the HOUR field's value,
-                        //  we want to do this our own way.
                         offset = val.get(Calendar.HOUR_OF_DAY);
                         if (offset >= 12) {
                             offset -= 12;
@@ -729,12 +705,9 @@ public class DateUtils {
             if (!offsetSet) {
                 int min = val.getActualMinimum(fields[i][0]);
                 int max = val.getActualMaximum(fields[i][0]);
-                //Calculate the offset from the minimum allowed value
                 offset = val.get(fields[i][0]) - min;
-                //Set roundUp if this is more than half way between the minimum and maximum
                 roundUp = offset > ((max - min) / 2);
             }
-            //We need to remove this field
             if (offset != 0) {
                 val.set(fields[i][0], val.get(fields[i][0]) - offset);
             }
