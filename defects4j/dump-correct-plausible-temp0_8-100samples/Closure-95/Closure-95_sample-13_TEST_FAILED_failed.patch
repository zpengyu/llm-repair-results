diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index a5b356fb..8b76aabe 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -896,10 +894,19 @@ final class TypedScopeCreator implements ScopeCreator {
       // scope where the root object appears. This helps out people
       // who declare "global" names in an anonymous namespace.
       Scope scopeToDeclareIn = scope;
-
-        // don't try to declare in the global scope if there's
-        // already a symbol there with this name.
-
+      // don't try to declare in the global scope if there's
+      // already a symbol there with this name.
+      if (scopeToDeclareIn.isGlobal() &&
+          scopeToDeclareIn.isDeclared(variableName, false)) {
+        Var oldVar = scopeToDeclareIn.getVar(variableName);
+        if (!oldVar.isTypeInferred() && !oldVar.isLocal()) {
+          // We don't want to warn about an undeclared variable if
+          // it comes from a different file, because the global namespace
+          // isn't shared across files. We don't create a JSDocInfo for
+          // externs, so we check for that too.
+          return;
+        }
+      }
       // declared in closest scope?
       if (scopeToDeclareIn.isDeclared(variableName, false)) {
         Var oldVar = scopeToDeclareIn.getVar(variableName);
