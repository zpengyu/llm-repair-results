diff --git a/src/org/mockito/internal/util/Primitives.java b/src/org/mockito/internal/util/Primitives.java
index b44b8253d..203a6a03e 100644
--- a/src/org/mockito/internal/util/Primitives.java
+++ b/src/org/mockito/internal/util/Primitives.java
@@ -16,23 +15,20 @@ public class Primitives {
         }
         return (Class<T>) primitiveTypes.get(clazz);
     }
-
     public static boolean isPrimitiveWrapper(Class<?> type) {
-        return wrapperReturnValues.containsKey(type);
+        return primitiveWrapperTypes.containsKey(type);
     }
-
     public static <T> T primitiveWrapperOf(Class<T> type) {
-        return (T) wrapperReturnValues.get(type);
+        return (T) primitiveWrapperTypes.get(type);
     }
-
     public static <T> T primitiveValueOrNullFor(Class<T> primitiveType) {
         return (T) primitiveValues.get(primitiveType);
     }
     private static Map<Class<?>, Class<?>> wrapperTypes = new HashMap<Class<?>, Class<?>>();
     private static Map<Class<?>, Class<?>> primitiveTypes = new HashMap<Class<?>, Class<?>>();
+    private static Map<Class<?>, Class<?>> primitiveWrapperTypes = new HashMap<Class<?>, Class<?>>();
     private static Map<Class<?>, Object> wrapperReturnValues = new HashMap<Class<?>, Object>();
     private static Map<Class<?>, Object> primitiveValues = new HashMap<Class<?>, Object>();
-
     static {
         primitiveTypes.put(Boolean.class, Boolean.TYPE);
         primitiveTypes.put(Character.class, Character.TYPE);
@@ -65,4 +59,14 @@ public class Primitives {
         primitiveValues.put(float.class, 0F);
         primitiveValues.put(double.class, 0);
     }
+    static {
+        primitiveWrapperTypes.put(Boolean.TYPE, Boolean.class);
+        primitiveWrapperTypes.put(Character.TYPE, Character.class);
+        primitiveWrapperTypes.put(Byte.TYPE, Byte.class);
+        primitiveWrapperTypes.put(Short.TYPE, Short.class);
+        primitiveWrapperTypes.put(Integer.TYPE, Integer.class);
+        primitiveWrapperTypes.put(Long.TYPE, Long.class);
+        primitiveWrapperTypes.put(Float.TYPE, Float.class);
+        primitiveWrapperTypes.put(Double.TYPE, Double.class);
+    }
 }
\ No newline at end of file
