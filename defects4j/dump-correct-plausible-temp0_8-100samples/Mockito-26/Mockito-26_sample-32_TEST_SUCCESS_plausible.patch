diff --git a/src/org/mockito/internal/util/Primitives.java b/src/org/mockito/internal/util/Primitives.java
index b44b8253d..2294a1225 100644
--- a/src/org/mockito/internal/util/Primitives.java
+++ b/src/org/mockito/internal/util/Primitives.java
@@ -16,11 +15,9 @@ public class Primitives {
         }
         return (Class<T>) primitiveTypes.get(clazz);
     }
-
     public static boolean isPrimitiveWrapper(Class<?> type) {
-        return wrapperReturnValues.containsKey(type);
+        return wrapperTypes.containsKey(type);
     }
-
     public static <T> T primitiveWrapperOf(Class<T> type) {
         return (T) wrapperReturnValues.get(type);
     }
@@ -43,26 +38,34 @@ public class Primitives {
         primitiveTypes.put(Float.class, Float.TYPE);
         primitiveTypes.put(Double.class, Double.TYPE);
     }
-
     static {
-        wrapperReturnValues.put(Boolean.class, false);
-        wrapperReturnValues.put(Character.class, '\u0000');
-        wrapperReturnValues.put(Byte.class, (byte) 0);
-        wrapperReturnValues.put(Short.class, (short) 0);
-        wrapperReturnValues.put(Integer.class, 0);
-        wrapperReturnValues.put(Long.class, 0L);
-        wrapperReturnValues.put(Float.class, 0F);
-        wrapperReturnValues.put(Double.class, 0D);
+        wrapperTypes.put(Boolean.class, boolean.class);
+        wrapperTypes.put(Character.class, char.class);
+        wrapperTypes.put(Byte.class, byte.class);
+        wrapperTypes.put(Short.class, short.class);
+        wrapperTypes.put(Integer.class, int.class);
+        wrapperTypes.put(Long.class, long.class);
+        wrapperTypes.put(Float.class, float.class);
+        wrapperTypes.put(Double.class, double.class);
+    }
+    static {
+        wrapperReturnValues.put(Boolean.class, Boolean.FALSE);
+        wrapperReturnValues.put(Character.class, Character.valueOf('\u0000'));
+        wrapperReturnValues.put(Byte.class, Byte.valueOf((byte) 0));
+        wrapperReturnValues.put(Short.class, Short.valueOf((short) 0));
+        wrapperReturnValues.put(Integer.class, Integer.valueOf(0));
+        wrapperReturnValues.put(Long.class, Long.valueOf(0L));
+        wrapperReturnValues.put(Float.class, Float.valueOf(0F));
+        wrapperReturnValues.put(Double.class, Double.valueOf(0D));
     }
-
     static {
-        primitiveValues.put(boolean.class, false);
-        primitiveValues.put(char.class, '\u0000');
-        primitiveValues.put(byte.class, (byte) 0);
-        primitiveValues.put(short.class, (short) 0);
-        primitiveValues.put(int.class, 0);
-        primitiveValues.put(long.class, 0L);
-        primitiveValues.put(float.class, 0F);
-        primitiveValues.put(double.class, 0);
+        primitiveValues.put(boolean.class, Boolean.FALSE);
+        primitiveValues.put(char.class, Character.valueOf('\u0000'));
+        primitiveValues.put(byte.class, Byte.valueOf((byte) 0));
+        primitiveValues.put(short.class, Short.valueOf((short) 0));
+        primitiveValues.put(int.class, Integer.valueOf(0));
+        primitiveValues.put(long.class, Long.valueOf(0L));
+        primitiveValues.put(float.class, Float.valueOf(0F));
+        primitiveValues.put(double.class, Double.valueOf(0D));
     }
 }
\ No newline at end of file
