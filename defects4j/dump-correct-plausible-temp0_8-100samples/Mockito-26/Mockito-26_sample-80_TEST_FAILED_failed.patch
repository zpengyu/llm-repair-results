diff --git a/src/org/mockito/internal/util/Primitives.java b/src/org/mockito/internal/util/Primitives.java
index b44b8253d..d606347f4 100644
--- a/src/org/mockito/internal/util/Primitives.java
+++ b/src/org/mockito/internal/util/Primitives.java
@@ -16,15 +15,12 @@ public class Primitives {
         }
         return (Class<T>) primitiveTypes.get(clazz);
     }
-
     public static boolean isPrimitiveWrapper(Class<?> type) {
-        return wrapperReturnValues.containsKey(type);
+        return wrapperTypes.containsKey(type);
     }
-
     public static <T> T primitiveWrapperOf(Class<T> type) {
-        return (T) wrapperReturnValues.get(type);
+        return (T) wrapperTypes.get(type);
     }
-
     public static <T> T primitiveValueOrNullFor(Class<T> primitiveType) {
         return (T) primitiveValues.get(primitiveType);
     }
@@ -43,18 +38,16 @@ public class Primitives {
         primitiveTypes.put(Float.class, Float.TYPE);
         primitiveTypes.put(Double.class, Double.TYPE);
     }
-
     static {
-        wrapperReturnValues.put(Boolean.class, false);
-        wrapperReturnValues.put(Character.class, '\u0000');
-        wrapperReturnValues.put(Byte.class, (byte) 0);
-        wrapperReturnValues.put(Short.class, (short) 0);
-        wrapperReturnValues.put(Integer.class, 0);
-        wrapperReturnValues.put(Long.class, 0L);
-        wrapperReturnValues.put(Float.class, 0F);
-        wrapperReturnValues.put(Double.class, 0D);
+        wrapperTypes.put(Boolean.class, Boolean.TYPE);
+        wrapperTypes.put(Character.class, Character.TYPE);
+        wrapperTypes.put(Byte.class, Byte.TYPE);
+        wrapperTypes.put(Short.class, Short.TYPE);
+        wrapperTypes.put(Integer.class, Integer.TYPE);
+        wrapperTypes.put(Long.class, Long.TYPE);
+        wrapperTypes.put(Float.class, Float.TYPE);
+        wrapperTypes.put(Double.class, Double.TYPE);
     }
-
     static {
         primitiveValues.put(boolean.class, false);
         primitiveValues.put(char.class, '\u0000');
