diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
index e2ded558e..0e137734d 100644
--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
@@ -65,14 +59,11 @@ public class ReturnsDeepStubs implements Answer<Object>, Serializable {
                 return stubbedInvocationMatcher.answer(invocation);
             }
         }
-
         // record deep stub answer
-        return recordDeepStubAnswer(
-                newDeepStubMock(returnTypeGenericMetadata),
-                container
-        );
+        Object mock = newDeepStubMock(returnTypeGenericMetadata);
+        container.addAnswer(new DeeplyStubbedAnswer(mock), false);
+        return mock;
     }
-
     /**
      * Creates a mock using the Generics Metadata.
      *
@@ -104,12 +91,6 @@ public class ReturnsDeepStubs implements Answer<Object>, Serializable {
     private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {
         return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);
     }
-
-    private Object recordDeepStubAnswer(final Object mock, InvocationContainerImpl container) throws Throwable {
-        container.addAnswer(new DeeplyStubbedAnswer(mock), false);
-        return mock;
-    }
-
     protected GenericMetadataSupport actualParameterizedType(Object mock) {
         CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();
         return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());
