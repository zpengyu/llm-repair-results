diff --git a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
index 9eaf0837..b2522000 100644
--- a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
+++ b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
@@ -2168,15 +2149,11 @@ abstract class AbstractPatriciaTrie<K, V> extends AbstractBitwiseTrie<K, V> {
             } else {
                 e = higherEntry(fromKey);
             }
-
-            final K first = e != null ? e.getKey() : null;
-            if (e == null || !getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, first)) {
+            if (e == null || !getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, e.getKey())) {
                 throw new NoSuchElementException();
             }
-
-            return first;
+            return e.getKey();
         }
-
         @Override
         public K lastKey() {
             fixup();
@@ -2187,15 +2163,11 @@ abstract class AbstractPatriciaTrie<K, V> extends AbstractBitwiseTrie<K, V> {
             } else {
                 e = lowerEntry(toKey);
             }
-
-            final K last = e != null ? e.getKey() : null;
-            if (e == null || !getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, last)) {
+            if (e == null || !getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, e.getKey())) {
                 throw new NoSuchElementException();
             }
-
-            return last;
+            return e.getKey();
         }
-
         /**
          * Returns true if this {@link PrefixRangeMap}'s key is a prefix of the provided key.
          */
