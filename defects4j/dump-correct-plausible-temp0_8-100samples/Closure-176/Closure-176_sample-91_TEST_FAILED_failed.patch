diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 53e8cb48..4e335f1f 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -570,6 +564,34 @@ class TypeInference
               resultType : oldType.getLeastSupertype(resultType));
         }
         break;
+      case Token.GETELEM:
+        /** *
+         * * @bug This case has been modified and the bug has been fixed *
+         */
+        // 
+        // /*
+        //  * if (left.getFirstChild().isQualifiedName() &&
+        //  * left.getLastChild().isString()) { String qualifiedName =
+        //  * left.getFirstChild().getQualifiedName(); if (qualifiedName != null) {
+        //  * scope.inferQualifiedSlot(left, qualifiedName, leftType == null ?
+        //  * unknownType : leftType, resultType); }
+        //  * 
+        //  * left.setJSType(resultType); ensurePropertyDefined(left, resultType);
+        //  * }
+        //  */
+        // 
+        // 
+        // 
+        // if (left.getFirstChild().isGetProp() &&
+        // left.getLastChild().isString()) { String qualifiedName =
+        // left.getFirstChild().getQualifiedName(); if (qualifiedName != null) {
+        // scope.inferQualifiedSlot(left, qualifiedName, leftType == null ?
+        // unknownType : leftType, resultType); }
+        // 
+        // left.setJSType(resultType); ensurePropertyDefined(left, resultType);
+        // }
+        // break;
+        break;
       case Token.GETPROP:
         String qualifiedName = left.getQualifiedName();
         if (qualifiedName != null) {
