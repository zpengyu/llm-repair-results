diff --git a/src/main/java/org/jsoup/nodes/LeafNode.java b/src/main/java/org/jsoup/nodes/LeafNode.java
index 0e068b5..23971bb 100644
--- a/src/main/java/org/jsoup/nodes/LeafNode.java
+++ b/src/main/java/org/jsoup/nodes/LeafNode.java
@@ -5,29 +5,19 @@ import org.jsoup.helper.Validate;
 import java.util.List;
 
 abstract class LeafNode extends Node {
-
-    Object value; // either a string value, or an attribute map (in the rare case multiple attributes are set)
-
+    Attributes attributes; // either an attribute map (in the rare case multiple attributes are set)
     protected final boolean hasAttributes() {
-        return value instanceof Attributes;
+        return attributes != null;
     }
-
     @Override
     public final Attributes attributes() {
-        ensureAttributes();
-        return (Attributes) value;
-    }
-
-    private void ensureAttributes() {
         if (!hasAttributes()) {
-            Object coreValue = value;
-            Attributes attributes = new Attributes();
-            value = attributes;
-            if (coreValue != null)
-                attributes.put(nodeName(), (String) coreValue);
+            attributes = new Attributes();
+            if (value != null)
+                attributes.put(nodeName(), (String) value);
         }
+        return attributes;
     }
-
     String coreValue() {
         return attr(nodeName());
     }
@@ -50,24 +37,22 @@ abstract class LeafNode extends Node {
         if (!hasAttributes() && key.equals(nodeName())) {
             this.value = value;
         } else {
-            ensureAttributes();
-            super.attr(key, value);
+            attributes().put(key, value);
         }
         return this;
     }
-
     @Override
     public boolean hasAttr(String key) {
-        ensureAttributes();
+        if (!hasAttributes()) {
+            return key.equals(nodeName()) && value != null;
+        }
         return super.hasAttr(key);
     }
-
     @Override
     public Node removeAttr(String key) {
-        ensureAttributes();
-        return super.removeAttr(key);
+        attributes().remove(key);
+        return this;
     }
-
     @Override
     public String absUrl(String key) {
         ensureAttributes();
