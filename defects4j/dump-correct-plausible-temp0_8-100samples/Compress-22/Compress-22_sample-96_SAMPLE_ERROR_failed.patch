diff --git a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
index bfedfd0b..7bcc56c4 100644
--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
@@ -195,43 +195,19 @@ public class BZip2CompressorInputStream extends CompressorInputStream implements
         this.nInUse = nInUseShadow;
     }
 
-    private int read0() throws IOException {
-        final int retChar = this.currentChar;
-        switch (currentState) {
-        case EOF:
-            return -1;
-
-        case START_BLOCK_STATE:
-            throw new IllegalStateException();
-
-        case RAND_PART_A_STATE:
-            throw new IllegalStateException();
-
-        case RAND_PART_B_STATE:
-            setupRandPartB();
-            break;
-
-        case RAND_PART_C_STATE:
-            setupRandPartC();
-            break;
-
-        case NO_RAND_PART_A_STATE:
-            throw new IllegalStateException();
-
-        case NO_RAND_PART_B_STATE:
-            setupNoRandPartB();
-            break;
-
-        case NO_RAND_PART_C_STATE:
-            setupNoRandPartC();
-            break;
-
-        default:
-            throw new IllegalStateException();
-        }
-        return retChar;
-    }
-
+	protected void setName(String name) {
+		if (name != null && getPlatform() == PLATFORM_FAT
+				&& name.indexOf("/") == -1) {
+			name = name.replace('\\', '/');
+		}
+		if (name == null) {
+			throw new NullPointerException();
+		}
+		if (name.length() == 0) {
+			throw new IllegalArgumentException("name length is 0.");
+		}
+		this.name = name;
+	}
     private boolean init(boolean isFirstStream) throws IOException {
         if (null == in) {
             throw new IOException("No InputStream");
