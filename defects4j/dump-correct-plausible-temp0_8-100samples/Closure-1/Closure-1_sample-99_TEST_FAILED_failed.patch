diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
index 41175cf3..d1903f85 100644
--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
@@ -384,24 +382,21 @@ class RemoveUnusedVars
       // The parameters object literal setters can not be removed.
       return;
     }
-
     Node argList = getFunctionArgList(function);
-    boolean modifyCallers = modifyCallSites
-        && callSiteOptimizer.canModifyCallers(function);
-    if (!modifyCallers) {
-      // Strip unreferenced args off the end of the function declaration.
-      Node lastArg;
-      while ((lastArg = argList.getLastChild()) != null) {
-        Var var = fnScope.getVar(lastArg.getString());
-        if (!referenced.contains(var)) {
-          argList.removeChild(lastArg);
-          compiler.reportCodeChange();
-        } else {
-          break;
-        }
-      }
-    } else {
+    if (modifyCallSites && callSiteOptimizer.canModifyCallers(function)) {
       callSiteOptimizer.optimize(fnScope, referenced);
+      return;
+    }
+    // Strip unreferenced args off the end of the function declaration.
+    Node lastArg;
+    while ((lastArg = argList.getLastChild()) != null) {
+      Var var = fnScope.getVar(lastArg.getString());
+      if (!referenced.contains(var)) {
+        argList.removeChild(lastArg);
+        compiler.reportCodeChange();
+      } else {
+        break;
+      }
     }
   }
 
