diff --git a/src/java/org/apache/commons/cli2/builder/PatternBuilder.java b/src/java/org/apache/commons/cli2/builder/PatternBuilder.java
index f02601e..962b820 100644
--- a/src/java/org/apache/commons/cli2/builder/PatternBuilder.java
+++ b/src/java/org/apache/commons/cli2/builder/PatternBuilder.java
@@ -38,41 +37,23 @@ public class PatternBuilder {
     private final GroupBuilder gbuilder;
     private final DefaultOptionBuilder obuilder;
     private final ArgumentBuilder abuilder;
-
-    /**
-     * Creates a new PatternBuilder
-     */
     public PatternBuilder() {
         this(
-            new GroupBuilder(),
-            new DefaultOptionBuilder(),
-            new ArgumentBuilder());
+                new GroupBuilder(),
+                new DefaultOptionBuilder(),
+                new ArgumentBuilder());
     }
-
-    /**
-     * Creates a new PatternBuilder
-     * @param gbuilder the GroupBuilder to use
-     * @param obuilder the DefaultOptionBuilder to use
-     * @param abuilder the ArgumentBuilder to use
-     */
     public PatternBuilder(
-        final GroupBuilder gbuilder,
-        final DefaultOptionBuilder obuilder,
-        final ArgumentBuilder abuilder) {
+            final GroupBuilder gbuilder,
+            final DefaultOptionBuilder obuilder,
+            final ArgumentBuilder abuilder) {
         this.gbuilder = gbuilder;
         this.obuilder = obuilder;
         this.abuilder = abuilder;
     }
-
     private final Set options = new HashSet();
-
-    /**
-     * Creates a new Option instance.
-     * @return a new Option instance
-     */
     public Option create() {
         final Option option;
-
         if (options.size() == 1) {
             option = (Option)options.iterator().next();
         }
@@ -83,24 +64,17 @@ public class PatternBuilder {
             }
             option = gbuilder.create();
         }
-
         reset();
-
         return option;
     }
-
-    /**
-     * Resets this builder
-     */
     public PatternBuilder reset() {
         options.clear();
         return this;
     }
-
     private void createOption(
-        final char type,
-        final boolean required,
-        final char opt) {
+            final char type,
+            final boolean required,
+            final char opt) {
         final Argument argument;
         if (type != ' ') {
             abuilder.reset();
@@ -121,17 +94,10 @@ public class PatternBuilder {
         obuilder.withArgument(argument);
         obuilder.withShortName(String.valueOf(opt));
         obuilder.withRequired(required);
-
         options.add(obuilder.create());
     }
-
-    /**
-     * Builds an Option using a pattern string.
-     * @param pattern the pattern to build from
-     */
     public void withPattern(final String pattern) {
         int sz = pattern.length();
-
         char opt = ' ';
         char ch = ' ';
         char type = ' ';
