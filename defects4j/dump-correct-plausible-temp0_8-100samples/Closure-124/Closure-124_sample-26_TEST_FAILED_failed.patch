diff --git a/src/com/google/javascript/jscomp/ExploitAssigns.java b/src/com/google/javascript/jscomp/ExploitAssigns.java
index 196b710d..1878420b 100644
--- a/src/com/google/javascript/jscomp/ExploitAssigns.java
+++ b/src/com/google/javascript/jscomp/ExploitAssigns.java
@@ -204,21 +204,13 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
-    // No checks are needed for simple names.
-    if (node.isName()) {
-      return true;
-    }
     Preconditions.checkArgument(node.isGetProp());
-
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    // No checks are needed for simple names.
+    if (isNameAssignedTo(node.getFirstChild().getString(), replacement)) {
       return false;
     }
-
     return true;
   }
-
   /**
    * @return Whether name is assigned in the expression rooted at node.
    */
