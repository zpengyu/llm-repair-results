diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java
index 8fce39c6..e6c89aba 100644
--- a/src/main/java/org/joda/time/Period.java
+++ b/src/main/java/org/joda/time/Period.java
@@ -1616,11 +1616,11 @@ public final class Period
     public Period normalizedStandard(PeriodType type) {
         type = DateTimeUtils.getPeriodType(type);
         long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs
-        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));
-        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));
-        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));
-        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));
-        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));
+        millis += (getSeconds() * DateTimeConstants.MILLIS_PER_SECOND);
+        millis += (getMinutes() * DateTimeConstants.MILLIS_PER_MINUTE);
+        millis += (getHours() * DateTimeConstants.MILLIS_PER_HOUR);
+        millis += (getDays() * DateTimeConstants.MILLIS_PER_DAY);
+        millis += (getWeeks() * DateTimeConstants.MILLIS_PER_WEEK);
         Period result = new Period(millis, type, ISOChronology.getInstanceUTC());
         int years = getYears();
         int months = getMonths();
@@ -1636,5 +1636,11 @@ public final class Period
         }
         return result;
     }
-
+1. Fork it (https://github.com/BugBusterSWE/stackoverflow_Fixed_Code/fork)
+2. Create your feature branch (`git checkout -b my-new-feature`)
+3. Commit your changes (`git commit -am 'Add some feature'`)
+4. Push to the branch (`git push origin my-new-feature`)
+5. Create a new Pull Request
+- [BugBusterSWE](https://github.com/BugBusterSWE) BugBusterSWE - creator, maintainer
+- [overflow](https://github.com/overflow) overflow - contributor
 }
