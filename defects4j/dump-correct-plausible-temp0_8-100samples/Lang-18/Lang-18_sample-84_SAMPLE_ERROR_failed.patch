diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
index 0c2e4a7b..d9080baa 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
@@ -463,17 +463,14 @@ public class FastDateFormat extends Format {
     protected List<Rule> parsePattern() {
         DateFormatSymbols symbols = new DateFormatSymbols(mLocale);
         List<Rule> rules = new ArrayList<Rule>();
-
-        String[] ERAs = symbols.getEras();
+        String[] eras = symbols.getEras();
         String[] months = symbols.getMonths();
         String[] shortMonths = symbols.getShortMonths();
         String[] weekdays = symbols.getWeekdays();
         String[] shortWeekdays = symbols.getShortWeekdays();
-        String[] AmPmStrings = symbols.getAmPmStrings();
-
+        String[] amPmStrings = symbols.getAmPmStrings();
         int length = mPattern.length();
         int[] indexRef = new int[1];
-
         for (int i = 0; i < length; i++) {
             indexRef[0] = i;
             String token = parseToken(mPattern, indexRef);
@@ -483,13 +479,11 @@ public class FastDateFormat extends Format {
             if (tokenLen == 0) {
                 break;
             }
-
             Rule rule;
             char c = token.charAt(0);
-
             switch (c) {
             case 'G': // era designator (text)
-                rule = new TextField(Calendar.ERA, ERAs);
+                rule = new TextField(Calendar.ERA, eras);
                 break;
             case 'y': // year (number)
                 if (tokenLen >= 4) {
@@ -543,7 +537,7 @@ public class FastDateFormat extends Format {
                 rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);
                 break;
             case 'a': // am/pm marker (text)
-                rule = new TextField(Calendar.AM_PM, AmPmStrings);
+                rule = new TextField(Calendar.AM_PM, amPmStrings);
                 break;
             case 'k': // hour in day (1..24)
                 rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));
@@ -576,13 +570,11 @@ public class FastDateFormat extends Format {
             default:
                 throw new IllegalArgumentException("Illegal pattern component: " + token);
             }
-
             rules.add(rule);
         }
-
         return rules;
     }
-
+```
     /**
      * <p>Performs the parsing of tokens.</p>
      *
