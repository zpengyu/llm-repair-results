diff --git a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
index 173598a1..4149bc73 100644
--- a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
@@ -333,12 +333,19 @@ public final class $Gson$Types {
     return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
   }
 
-  private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
+private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
                               Collection<TypeVariable> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
     while (true) {
       if (toResolve instanceof TypeVariable) {
         TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;
+        if (visitedTypeVariables == null) {
+          visitedTypeVariables = new HashSet<TypeVariable>();
+        }
+        if (visitedTypeVariables.contains(typeVariable)) {
+          return toResolve;
+        }
+        visitedTypeVariables.add(typeVariable);
           // cannot reduce due to infinite recursion
         toResolve = resolveTypeVariable(context, contextRawType, typeVariable);
         if (toResolve == typeVariable) {
