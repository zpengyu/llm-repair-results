diff --git a/src/main/java/org/jsoup/helper/DataUtil.java b/src/main/java/org/jsoup/helper/DataUtil.java
index bbbd8fb..2a44449 100644
--- a/src/main/java/org/jsoup/helper/DataUtil.java
+++ b/src/main/java/org/jsoup/helper/DataUtil.java
@@ -90,7 +90,7 @@ public final class DataUtil {
         }
     }
 
-    static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException  {
+    static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException {
         if (input == null) // empty body
             return new Document(baseUri);
         input = ConstrainableInputStream.wrap(input, bufferSize, 0);
@@ -148,8 +142,25 @@ public final class DataUtil {
             if (charsetName == null)
                 charsetName = defaultCharset;
             BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);
+            if (baseUri != null) {
+                try {
+                    doc = parser.parseInput(reader, baseUri);
+                } catch (MalformedInputException e) {
+                    //try another encoding
+                    if (charsetName.equalsIgnoreCase("UTF-8")) {
+                        charsetName = "windows-1251";
+                        reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);
+                        doc = parser.parseInput(reader, baseUri);
+                    } else if (charsetName.equalsIgnoreCase("windows-1251")) {
+                        charsetName = "UTF-8";
+                        reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);
+                        doc = parser.parseInput(reader, baseUri);
+                    }
+                }
+            } else {
                 doc = parser.parseInput(reader, baseUri);
-                // io exception when parsing (not seen before because reading the stream as we go)
+            }
+            // io exception when parsing (not seen before because reading the stream as we go)
             doc.outputSettings().charset(charsetName);
         }
         input.close();
