diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java
index 8f9d3948..3a09ec03 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java
@@ -720,13 +718,19 @@ public class DateTimeFormatter {
         } else if (bucket.getZone() != null) {
             chrono = chrono.withZone(bucket.getZone());
         }
-        instant.setChronology(chrono);
-        if (iZone != null) {
-            instant.setZone(iZone);
+        if(iZone != null) {
+            instant.setMillis(bucket.computeMillis(true, text));
+            instant.setChronology(chrono.withZone(iZone));
+        }
+        else {
+            instant.setChronology(chrono);
         }
         return newPos;
     }
-
+In this project, we will implement an automated program repair. 
+We will use Synoptic's specification and [defects4j](https://github.com/rjust/defects4j) data set to do the experiment.
+If you want to know more about Synoptic, you can check the [paper](https://www.cs.purdue.edu/homes/xyzhang/publications/TR2013-841.pdf) and [source code](https://github.com/bcteam/synoptic/tree/master/synoptic).
+If you are interested in our project, you are welcome to play with this repository.
     /**
      * Parses a datetime from the given text, returning the number of
      * milliseconds since the epoch, 1970-01-01T00:00:00Z.
