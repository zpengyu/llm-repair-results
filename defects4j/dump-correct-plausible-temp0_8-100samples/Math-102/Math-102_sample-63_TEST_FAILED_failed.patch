diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java
index 73503abfc..2dbf7ab72 100644
--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java
+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java
@@ -61,21 +61,23 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {
      * @throws IllegalArgumentException if preconditions are not met
      * or length is less than 2
      */
-    public double chiSquare(double[] expected, long[] observed)
+   public double chiSquare(double[] expected, long[] observed)
         throws IllegalArgumentException {
-        if ((expected.length < 2) || (expected.length != observed.length)) {
+        if (expected.length < 2 || expected.length != observed.length) {
             throw new IllegalArgumentException(
                     "observed, expected array lengths incorrect");
         }
         if (!isPositive(expected) || !isNonNegative(observed)) {
             throw new IllegalArgumentException(
-                "observed counts must be non-negative and expected counts must be postive");
+                "observed counts must be non-negative and expected counts must be positive");
         }
         double sumSq = 0.0d;
         double dev = 0.0d;
         for (int i = 0; i < observed.length; i++) {
+            if (expected[i] != 0.0d) {
                 dev = ((double) observed[i] - expected[i]);
                 sumSq += dev * dev / expected[i];
+            }
         }
         return sumSq;
     }
