diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 87ff4aab..cd5beb91 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -478,45 +478,46 @@ public class TarArchiveInputStream extends ArchiveInputStream {
         return headers;
     }
 
-    private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
-        /*
-         * The following headers are defined for Pax.
-         * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
-         * mtime
-         * comment
-         * gid, gname
-         * linkpath
-         * size
-         * uid,uname
-         * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
-         */
-        for (Entry<String, String> ent : headers.entrySet()){
-            String key = ent.getKey();
-            String val = ent.getValue();
-            if ("path".equals(key)){
-                currEntry.setName(val);
-            } else if ("linkpath".equals(key)){
-                currEntry.setLinkName(val);
-            } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
-            } else if ("gname".equals(key)){
-                currEntry.setGroupName(val);
-            } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
-            } else if ("uname".equals(key)){
-                currEntry.setUserName(val);
-            } else if ("size".equals(key)){
+private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
+    /*
+     * The following headers are defined for Pax.
+     * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
+     * mtime
+     * comment
+     * gid, gname
+     * linkpath
+     * size
+     * uid,uname
+     * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
+     */
+    for (Entry<String, String> ent : headers.entrySet()){
+        String key = ent.getKey();
+        String val = ent.getValue();
+        if ("path".equals(key)){
+            currEntry.setName(val);
+        } else if ("linkpath".equals(key)){
+            currEntry.setLinkName(val);
+        } else if ("gid".equals(key)){
+            currEntry.setGroupId(Integer.parseInt(val));
+        } else if ("gname".equals(key)){
+            currEntry.setGroupName(val);
+        } else if ("uid".equals(key)){
+            currEntry.setUserId(Integer.parseInt(val));
+        } else if ("uname".equals(key)){
+            currEntry.setUserName(val);
+        } else if ("size".equals(key)){
+            if(Long.parseLong(val) != -1)
                 currEntry.setSize(Long.parseLong(val));
-            } else if ("mtime".equals(key)){
+        } else if ("mtime".equals(key)){
+            if(Long.parseLong(val) != -1)
                 currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
-            } else if ("SCHILY.devminor".equals(key)){
-                currEntry.setDevMinor(Integer.parseInt(val));
-            } else if ("SCHILY.devmajor".equals(key)){
-                currEntry.setDevMajor(Integer.parseInt(val));
-            }
+        } else if ("SCHILY.devminor".equals(key)){
+            currEntry.setDevMinor(Integer.parseInt(val));
+        } else if ("SCHILY.devmajor".equals(key)){
+            currEntry.setDevMajor(Integer.parseInt(val));
         }
     }
-
+}
     /**
      * Adds the sparse chunks from the current entry to the sparse chunks,
      * including any additional sparse entries following the current entry.
