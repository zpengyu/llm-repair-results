diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
index 73531dc5..72ddb284 100644
--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -476,27 +475,27 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
       numUsesWithinCfgNode = 0;
       AbstractCfgNodeTraversalCallback gatherCb =
           new AbstractCfgNodeTraversalCallback() {
-
         @Override
         public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
+          if (n.isName() && n.getString().equals(varName)) {
+            if (NodeUtil.isLhs(n, parent)
+                // We make a special exception when the entire cfgNode is a chain
+                // of assignments, since in that case the assignment statements
+                // will happen after the inlining of the right hand side.
+                // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
+                //   and remove this special case.
+                && (parent.isAssign() &&
+                    (parent.getFirstChild() == n))) {
               // Don't count lhs of top-level assignment chain
+            } else {
               numUsesWithinCfgNode++;
+            }
           }
         }
-
       };
-
       NodeTraversal.traverse(compiler, cfgNode, gatherCb);
     }
-  }
+  }  }
 
   /**
    * Given an expression by its root and sub-expression n, return true if there
