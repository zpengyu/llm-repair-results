    public void captureArgumentsFrom(Invocation invocation) {
        if (invocation.getMethod().isVarArgs()) {
            int indexOfVararg = invocation.getRawArguments().length - 1;
            if(matchers.get(indexOfVararg) instanceof CapturesArguments) {
                Object array = invocation.getRawArguments()[indexOfVararg];
                for (int i = 0; i < Array.getLength(array); i++) {
                    ((CapturesArguments) matchers.get(indexOfVararg)).captureFrom(Array.get(array, i));
                }
            } else {
                throw new UnsupportedOperationException();
            }
        } else {
            for (int position = 0; position < matchers.size(); position++) {
                Matcher m = matchers.get(position);
                if (m instanceof CapturesArguments) {
                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
                }
            }
        }
    }
    private boolean isVariableArgument(Invocation invocation, int position) {
        return invocation.getMethod().isVarArgs() && position == invocation.getRawArguments().length - 1;
    }
    private boolean isVarargMatcher(Matcher m) {
        return m.getClass().isArray();
    }