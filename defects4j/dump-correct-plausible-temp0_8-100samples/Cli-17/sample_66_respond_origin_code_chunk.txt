    protected void burstToken(String token, boolean stopAtNonOption)
    {
        String ch;
        String arg;
        StringTokenizer st;
        int i;
        int j;

        for (i = 1; i < token.length(); i++)
        {
            ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                tokens.add("-" + ch);
                currentOption = options.getOption(ch);

                if (currentOption.hasArg() && (token.length() != (i + 1)))
                {
                    tokens.add(token.substring(i + 1));

                    break;
                }

                st = new StringTokenizer(token.substring(i + 1));

                while (st.hasMoreTokens())
                {
                    arg = st.nextToken();

                    if (arg.startsWith("-"))
                    {
                        i += (arg.length() - 1);

                        process(arg);

                        break;
                    }

                    tokens.add(arg);
                    i += arg.length();
                }
            }
            else if (stopAtNonOption)
            {
                process(token.substring(i));
            }
            else
            {
                tokens.add(token);
                break;
            }
        }
    }

