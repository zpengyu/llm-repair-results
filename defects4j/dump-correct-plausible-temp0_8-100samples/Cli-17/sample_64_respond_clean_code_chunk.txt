	protected void burstToken(String token, boolean stopAtNonOption) {
        for (int i = 1; i < token.length(); i++) {
            String ch = String.valueOf(token.charAt(i));
            if (options.hasOption(ch)) {
                tokens.add("-" + ch);
                currentOption = options.getOption(ch);
                if (currentOption.hasArg()) {
                    // the last argument may contain an embedded option
                    String arg;
                    int lastIndex = token.length();
                    if (i < (lastIndex - 1)) {
                        arg = token.substring(i + 1, lastIndex);
                        tokens.add(arg);
                        i = lastIndex;
                    } else {
                        arg = token;
                        tokens.add(arg);
                        i = lastIndex + 1;
                    }
                }
            } else if (stopAtNonOption) {
                process(token.substring(i));
            } else {
                tokens.add(token);
                break;
            }
        }
    }