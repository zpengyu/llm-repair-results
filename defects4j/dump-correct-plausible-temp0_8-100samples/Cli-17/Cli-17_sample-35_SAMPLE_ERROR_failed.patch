diff --git a/src/java/org/apache/commons/cli/PosixParser.java b/src/java/org/apache/commons/cli/PosixParser.java
index 8c84520..dd1616c 100644
--- a/src/java/org/apache/commons/cli/PosixParser.java
+++ b/src/java/org/apache/commons/cli/PosixParser.java
@@ -279,33 +279,44 @@ public class PosixParser extends Parser {
      * @param stopAtNonOption Specifies whether to stop processing
      * at the first non-Option encountered.
      */
-    protected void burstToken(String token, boolean stopAtNonOption)
-    {
-        for (int i = 1; i < token.length(); i++)
+        protected void burstToken(String token, boolean stopAtNonOption)
         {
-            String ch = String.valueOf(token.charAt(i));
-
-            if (options.hasOption(ch))
+            if (token.startsWith("--"))
             {
-                tokens.add("-" + ch);
-                currentOption = options.getOption(ch);
-
-                if (currentOption.hasArg() && (token.length() != (i + 1)))
-                {
-                    tokens.add(token.substring(i + 1));
-
-                    break;
-                }
+                process(token, stopAtNonOption);
             }
-            else if (stopAtNonOption)
+            else if (token.startsWith("-"))
             {
-                process(token.substring(i));
+                burstSingleDash(token, stopAtNonOption);
             }
             else
             {
                 tokens.add(token);
-                break;
             }
         }
-    }
-}
+        private void burstSingleDash(String token, boolean stopAtNonOption)
+        {
+            for (int i = 1; i < token.length(); i++)
+            {
+                String ch = String.valueOf(token.charAt(i));
+                if (options.hasOption(ch))
+                {
+                    tokens.add("-" + ch);
+                    currentOption = options.getOption(ch);
+                    if (currentOption.hasArg() && (token.length() != (i + 1)))
+                    {
+                        tokens.add(token.substring(i + 1));
+                        break;
+                    }
+                }
+                else if (stopAtNonOption)
+                {
+                    process(token.substring(i));
+                }
+                else
+                {
+                    tokens.add(token);
+                    break;
+                }
+            }
+        }}
