diff --git a/src/org/mockito/internal/MockHandler.java b/src/org/mockito/internal/MockHandler.java
index 9452f1664..7d9888d47 100644
--- a/src/org/mockito/internal/MockHandler.java
+++ b/src/org/mockito/internal/MockHandler.java
@@ -94,17 +88,17 @@ public class MockHandler<T> implements MockitoInvocationHandler, MockHandlerInte
             return stubbedInvocation.answer(invocation);
         } else {
             Object ret = mockSettings.getDefaultAnswer().answer(invocation);
-
-            // redo setting invocation for potential stubbing in case of partial
+			// redo setting invocation for potential stubbing in case of partial
             // mocks / spies.
             // Without it, the real method inside 'when' might have delegated
             // to other self method and overwrite the intended stubbed method
             // with a different one. The reset is required to avoid runtime exception that validates return type with stubbed method signature.
-            invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);
-            return ret;
+			if (!(mockSettings.isUsingConstructor() && Mockito.RETURNS_DEFAULTS.equals(mockSettings.getDefaultAnswer()))) {
+				invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);
+			}
+			return ret;
         }
     }
-
     public VoidMethodStubbable<T> voidMethodStubbable(T mock) {
         return new VoidMethodStubbableImpl<T>(mock, invocationContainerImpl);
     }
