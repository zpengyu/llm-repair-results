diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
index 8dea7b284..adbb99a3a 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
@@ -127,10 +127,8 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {
 
     /** {@inheritDoc} */
     @Override
-    protected void computeGeometricalProperties() {
-
+public void computeGeometricalProperties() {
         final Vector2D[][] v = getVertices();
-
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
             if ((Boolean) tree.getAttribute()) {
@@ -160,26 +156,22 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {
                     final double y0 = y1;
                     x1 = point.getX();
                     y1 = point.getY();
-                    final double factor = x0 * y1 - y0 * x1;
+                    final double factor = (x0 * y1 - y0 * x1)/2.0;
                     sum  += factor;
-                    sumX += factor * (x0 + x1);
-                    sumY += factor * (y0 + y1);
+                    sumX += (x0 + x1)*factor;
+                    sumY += (y0 + y1)*factor;
                 }
             }
-
             if (sum < 0) {
                 // the polygon as a finite outside surrounded by an infinite inside
                 setSize(Double.POSITIVE_INFINITY);
                 setBarycenter(Vector2D.NaN);
             } else {
-                setSize(sum / 2);
+                setSize(sum);
                 setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum)));
             }
-
         }
-
     }
-
     /** Get the vertices of the polygon.
      * <p>The polygon boundary can be represented as an array of loops,
      * each loop being itself an array of vertices.</p>
