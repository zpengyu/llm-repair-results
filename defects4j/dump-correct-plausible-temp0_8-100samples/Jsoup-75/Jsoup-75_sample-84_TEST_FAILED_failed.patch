diff --git a/src/main/java/org/jsoup/nodes/Attributes.java b/src/main/java/org/jsoup/nodes/Attributes.java
index 1a2e840..2b2d780 100644
--- a/src/main/java/org/jsoup/nodes/Attributes.java
+++ b/src/main/java/org/jsoup/nodes/Attributes.java
@@ -307,24 +307,22 @@ public class Attributes implements Iterable<Attribute>, Cloneable {
         return accum.toString();
     }
 
-    final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
-        final int sz = size;
-        for (int i = 0; i < sz; i++) {
-            // inlined from Attribute.html()
-            final String key = keys[i];
-            final String val = vals[i];
-            accum.append(' ').append(key);
-
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
-                accum.append("=\"");
-                Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
-                accum.append('"');
-            }
+void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
+    final int sz = size;
+    for (int i = 0; i < sz; i++) {
+        // inlined from Attribute.html()
+        final String key = keys[i];
+        final String val = vals[i];
+        accum.append(' ').append(key);
+        // collapse checked=null, checked="", checked=checked; write out others
+        if (!(out.syntax() == Document.OutputSettings.Syntax.html
+            && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            accum.append("=\"");
+            Entities.escape(accum, val == null ? EmptyString : val, out, false, false, true);
+            accum.append('"');
         }
     }
-
+}
     @Override
     public String toString() {
         return html();
