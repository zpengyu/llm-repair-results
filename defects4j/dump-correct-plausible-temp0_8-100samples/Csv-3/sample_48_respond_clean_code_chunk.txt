    int readEscape() throws IOException {
        // the escape char has just been read (normally a backslash)
        final int c = in.read();
        switch (c) {
        case 'r':
            return CR;
        case 'n':
            return LF;
        case 't':
            return TAB;
        case 'b':
            return BACKSPACE;
        case 'f':
            return FF;
        case CR:
        case LF:
        case FF: // TODO is this correct?
        case TAB: // TODO is this correct? Do tabs need to be escaped?
        case BACKSPACE: // TODO is this correct?
            return c;
        case END_OF_STREAM:
            throw new IOException("EOF whilst processing escape sequence");
        default:
            if(c == 'u') {
                // Now check for unicode
                // \\u should be followed by 4 hex chars
                int count = 0;
                int ch = 0;
                while (count < 4) {
                    ch = in.read();
                    if (!isHex(ch)) {
                        throw new IOException("non-hex character after \\u");
                    }
                    ch = Character.digit((char) ch, 16);
                    ch <<= 4;
                    ch = Character.digit((char) ch, 16);
                    ch <<= 4;
                    ch = Character.digit((char) ch, 16);
                    ch <<= 4;
                    ch = Character.digit((char) ch, 16);
                    count++;
                }
                return ch;
            } else {
                // Now check for meta-characters
                return c;
                // indicate unexpected char - available from in.getLastChar()
            }
        }
    }