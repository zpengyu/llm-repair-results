    int readEscape() throws IOException {
        // the escape char has just been read (normally a backslash)
        final int c = in.read();
        switch (c) {
        case 'r':
            return CR;
        case 'n':
            return LF;
        case 't':
            return TAB;
        case 'b':
            return BACKSPACE;
        case 'f':
            return FF;
        case CR:
        case LF:
        case FF: // TODO is this correct?
        case TAB: // TODO is this correct? Do tabs need to be escaped?
        case BACKSPACE: // TODO is this correct?
            return c;
        case END_OF_STREAM:
            throw new IOException("EOF whilst processing escape sequence");
        default:
            // Now check for meta-characters
            if (c > 0x2f && c < 0x3a) { // 0..9
                return readMetaChar(c, in.read());
            } else if (c == 'u' || c == 'U') {
                return readUnicode(c, in.read(), in.read(), in.read(), in.read());
            } else if (c > 0x40 && c < 0x5b) { // A..Z
                return readMetaChar(c, in.read());
            } else if (c == 'x' || c == 'X') {
                return readHexEscape(in.read(), in.read());
            } else {
                // indicate unexpected char - available from in.getLastChar()
                return c;
            }
        }
    }

