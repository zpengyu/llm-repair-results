public class AttributeContext extends EvalContext {
    private NodeTest nodeTest;
    private NodeIterator iterator;
    private NodePointer currentNodePointer;
    /**
     * @param parentContext represents the previous step on the path
     * @param nodeTest is the name of the attribute we are looking for
     */
    public AttributeContext(EvalContext parentContext, NodeTest nodeTest) {
        super(parentContext);
        this.nodeTest = nodeTest;
        reset();
    }
    public NodePointer getCurrentNodePointer() {
        return currentNodePointer;
    }
    public void reset() {
        if (!(nodeTest instanceof NodeNameTest)) {
            return;
        }
        QName name = ((NodeNameTest) nodeTest).getNodeName();
        iterator = parentContext.getCurrentNodePointer().attributeIterator(name);
        setCurrentPosition(0);
        nextNode();
    }
    public boolean setPosition(int position) {
        if (position < getCurrentPosition()) {
            reset();
        }
        while (getCurrentPosition() < position) {
            if (!nextNode()) {
                return false;
            }
        }
        return true;
    }
    public boolean nextNode() {
        setCurrentPosition(getCurrentPosition() + 1);
        if (iterator == null) {
            return false;
        }
        if (!iterator.setPosition(getCurrentPosition())) {
            return false;
        }
        currentNodePointer = iterator.getNodePointer();
        return true;
    }
}