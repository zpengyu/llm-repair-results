diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
index 5217ace34..10befb19d 100644
--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
@@ -148,6 +144,18 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+                if (minRow == null) {
+                    // 2. apply Bland's rule to prevent cycling:
+                    //    take the row for which the corresponding basic variable has the smallest index
+                    //
+                    // see http://www.stanford.edu/class/msande310/blandrule.pdf
+                    // see http://en.wikipedia.org/wiki/Bland%27s_rule (not equivalent to the above paper)
+                    //
+                    // Additional heuristic: if we did not get a solution after half of maxIterations
+                    //                       revert to the simple case of just returning the top-most row
+                    // This heuristic is based on empirical data gathered while investigating MATH-828.
+                    minRow = minRatioPositions.get(0);
+                }
                 return minRow;
         }
         return minRatioPositions.get(0);
