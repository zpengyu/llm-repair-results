diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index 34d6109a..d3b0b2b9 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -34,35 +34,37 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
-            int start = index + 2;
-            boolean isHex = false;
-
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
-                start++;
-                isHex = true;
-            }
-
-            int end = start;
-            while(input.charAt(end) != ';') {
-                end++;
+        if(index + 1 >= input.length() || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {
+            return 0;
+        }
+        int start = index + 2;
+        boolean isHex = false;
+        char firstChar = input.charAt(start);
+        if(firstChar == 'x' || firstChar == 'X') {
+            start++;
+            isHex = true;
+        }
+        int end = start;
+        while(end < input.length()) {
+            char c = input.charAt(end);
+            if(c == ';') {
+                break;
             }
-
-            int entityValue;
-            try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
-            } catch(NumberFormatException nfe) {
-                return 0;
+            end++;
+        }
+        if(end == input.length()) {
+            return 0;
+        }
+        int entityValue;
+        try {
+            if(isHex) {
+                entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+            } else {
+                entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
-
-                out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+        } catch(NumberFormatException nfe) {
+            return 0;
         }
-        return 0;
-    }
-}
+        out.write(entityValue);
+        return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+    }}
