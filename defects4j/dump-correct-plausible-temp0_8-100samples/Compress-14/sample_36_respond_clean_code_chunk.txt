    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
        if (length < 0) {
            throw new IllegalArgumentException("Negative length: " + length);
        }
        if (length > buffer.length) {
            throw new IllegalArgumentException(
                    "Length " + length + " exceeds buffer size of " + buffer.length);
        }
        if (offset < 0) {
            throw new IllegalArgumentException("Negative offset: " + offset);
        }
        if (offset > buffer.length) {
            throw new IllegalArgumentException(
                    "Offset " + offset + " exceeds buffer size of " + buffer.length);
        }
        if (offset + length > buffer.length) {
            throw new IllegalArgumentException(
                    "Offset + length " + offset + " + " + length
                    + " exceeds buffer size of " + buffer.length);
        }
        long result = 0;
        final int end = offset + length;
        if (length == 0) {
            return 0;
        }
        if (length < 0) {
            throw new IllegalArgumentException(
                    "Invalid length " + length);
        }
        int i = offset;
        while (i < end && Character.isWhitespace(buffer[i])) {
            i++;
        }
        if (i == end) {
            throw new IllegalArgumentException(
                    "No digits found in \"" + new String(buffer, offset, length) + "\"");
        }
        for (; i < end; i++) {
            final byte currentByte = buffer[i];
            if (currentByte >= '0' && currentByte <= '7') {
                // CheckStyle:MagicNumber OFF
                result = (result << 3) + (currentByte - '0'); // convert from ASCII
                // CheckStyle:MagicNumber ON
            } else {
                throw new IllegalArgumentException(
                        "Invalid character '" + ((char) currentByte) + "' at position " + i
                        + " in \"" + new String(buffer, offset, length) + "\"");
            }
        }
        return result;
    }