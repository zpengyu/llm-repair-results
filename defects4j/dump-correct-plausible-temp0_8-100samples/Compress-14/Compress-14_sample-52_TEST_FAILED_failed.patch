diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 121012d0..4a5ee3a1 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -57,26 +57,14 @@ public class TarUtils {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
+        int     pos = start;
         if (length < 2){
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
-        boolean allNUL = true;
-        for (int i = start; i < end; i++){
-            if (buffer[i] != 0){
-                allNUL = false;
-                break;
-            }
-        }
-        if (allNUL) {
-            return 0L;
-        }
-
         // Skip leading spaces
-        while (start < end){
-            if (buffer[start] == ' '){
-                start++;
+        while (pos < end){
+            if (buffer[pos] == ' '){
+                pos++;
             } else {
                 break;
             }
@@ -96,13 +83,12 @@ public class TarUtils {
         if (trailer == 0 || trailer == ' '){
             end--;
         }
-
-        for ( ;start < end; start++) {
-            final byte currentByte = buffer[start];
+        for (;pos < end; pos++) {
+            final byte currentByte = buffer[pos];
             // CheckStyle:MagicNumber OFF
             if (currentByte < '0' || currentByte > '7'){
                 throw new IllegalArgumentException(
-                        exceptionMessage(buffer, offset, length, start, currentByte));
+                        exceptionMessage(buffer, offset, length, pos, currentByte));
             }
             result = (result << 3) + (currentByte - '0'); // convert from ASCII
             // CheckStyle:MagicNumber ON
