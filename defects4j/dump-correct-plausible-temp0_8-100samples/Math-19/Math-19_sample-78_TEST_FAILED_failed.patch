diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..271e4ab40 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,17 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                // Commented out the following, because it was too strict:
+                // at least one boundary difference needs to be large, but the others
+                // can be small.
+                //isActiveCMA = false;
+                //for (int i = 0; i < init.length; i++) {
+                //    if (uB[i] - lB[i] > 2 * Double.MAX_VALUE) {
+                //        isActiveCMA = true;
+                //        break;
+                //    }
+                //}
             }
         } else {
             // Convert API to internal handling of boundaries.
