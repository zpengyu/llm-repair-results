diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..977308716 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,16 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                double max = Double.NEGATIVE_INFINITY;
+                for (int i = 0; i < boundaries[1].length; i++) {
+                    if (Math.abs(boundaries[1][i]) > max) {
+                        max = Math.abs(boundaries[1][i]);
+                    }
+                }
+                if (Double.isInfinite(max)) {
+                    throw new MathUnsupportedOperationException();
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
