    static void escape(StringBuilder accum, String string, Document.OutputSettings out,
                       boolean inAttribute, boolean normaliseWhite, boolean stripLeadingWhite) {
        boolean lastWasWhite = false;
        boolean reachedNonWhite = false;
        final EscapeMode escapeMode = out.escapeMode();
        final CharsetEncoder encoder = out.encoder();
        final CoreCharset coreCharset = CoreCharset.byName(encoder.charset().name());
        final Map<Character, String> map = escapeMode.getMap();
        final int length = string.length();
        int codePoint;
        for (int offset = 0; offset < length; offset += Character.charCount(codePoint)) {
            codePoint = string.codePointAt(offset);
            if (normaliseWhite) {
                if (StringUtil.isWhitespace(codePoint)) {
                    if ((stripLeadingWhite && !reachedNonWhite) || lastWasWhite)
                        continue;
                    accum.append(' ');
                    lastWasWhite = true;
                    continue;
                } else {
                    lastWasWhite = false;
                    reachedNonWhite = true;
                }
            }
            // surrogate pairs, split implementation for efficiency on single char common case (saves creating strings, char[]):
            if (codePoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
                final char c = (char) codePoint;
                // html specific and required escapes:
                switch (c) {
                    case '&':
                        accum.append("&amp;");
                        break;
                    case 0xA0:
                        if (escapeMode != EscapeMode.xhtml)
                            accum.append("&nbsp;");
                        else
                            accum.append("&#xa0;");
                        break;
                    case '<':
                        // escape when in character data or when in a xml attribue val; not needed in html attr val
                        if (!inAttribute)
                            accum.append("&lt;");
                        else
                            accum.append(c);
                        break;
                    case '>':
                        if (!inAttribute)
                            accum.append("&gt;");
                        else
                            accum.append(c);
                        break;
                    case '"':
                        if (inAttribute)
                            accum.append("&quot;");
                        else
                            accum.append(c);
                        break;
                    case '\'':
                        if (inAttribute)
                            accum.append("&#x27;");
                        else
                            accum.append(c);
                        break;
                    default:
                        if (canEncode(coreCharset, c, encoder))
                            accum.append(c);
                        else if (map.containsKey(c))
                            accum.append('&').append(map.get(c)).append(';');
                        else
                            accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
                }
            } else {
                final String c = new String(Character.toChars(codePoint));
                if (encoder.canEncode(c)) // uses fallback encoder for simplicity
                    accum.append(c);
                else
                    accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
            }
        }
    }
- Eclipse is suitable for large code bases and multi-language project
- Suitable for a project that has a large number of tests
- Can be used for a small bug fix of a large project such as [Jsoup](https://github.com/jhy/jsoup)
1. [Eclipse website](https://www.eclipse.org/eclipseide/)
2. [Eclipse Git tutorial](https://www.vogella.com/tutorials/EclipseGit/article.html)
3. [PyDev website](http://www.pydev.org/)
4. [Eclipse Debugging website](https://www.tutorialspoint.com/eclipse/eclipse_debugging.htm)
5. [Software Testing Help](https://www.softwaretestinghelp.com/unit-testing-vs-integration-testing-vs-system-testing/)
- Maybe consider Python IDE such as PyCharm (used by some Python developers)
- Maybe consider Visual Studio Code (used by some developers)
- Maybe consider C++ IDE such as CLion (used by some C++ developers)
- Maybe consider Github in addition to Eclipse
I would like to thank 
- Dr Jano van Hemert, G40 
- Dr Fabio Mazza, G40
- My supervisor Dr Mohammad Mahmudul Hasan, G40 
for giving me this opportunity to learn about the Eclipse IDE and for the constant support and guidance.