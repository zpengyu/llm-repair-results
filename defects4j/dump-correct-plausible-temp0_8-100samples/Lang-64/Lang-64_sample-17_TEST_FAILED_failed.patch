diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
index 0823e77d..d4b8e81f 100644
--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -139,7 +135,7 @@ public abstract class ValuedEnum extends Enum {
      * @return the enum object, or null if the enum does not exist
      * @throws IllegalArgumentException if the enum class is <code>null</code>
      */
-    protected static Enum getEnum(Class enumClass, int value) {
+    protected static ValuedEnum getEnum(Class enumClass, int value) {
         if (enumClass == null) {
             throw new IllegalArgumentException("The Enum Class must not be null");
         }
@@ -189,10 +182,22 @@ public abstract class ValuedEnum extends Enum {
      * @param other  the object to determine the value for
      * @return the value
      */
-            // ignore - should never happen
-            // ignore - should never happen
-            // ignore - should never happen
-
+    private int getValue(Object other) {
+        if (other.getClass().getName().equals(getEnumClass().getName())) {
+            try {
+                Method method = other.getClass().getMethod("getValue", new Class[0]);
+                Integer value = (Integer) method.invoke(other, new Object[0]);
+                return value.intValue();
+            } catch (NoSuchMethodException e) {
+                // ignore - should never happen
+            } catch (IllegalAccessException e) {
+                // ignore - should never happen
+            } catch (InvocationTargetException e) {
+                // ignore - should never happen
+            }
+        }
+        return 0;
+    }
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
      *
