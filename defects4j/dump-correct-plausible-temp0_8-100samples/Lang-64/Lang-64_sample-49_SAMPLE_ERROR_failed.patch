diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
index 0823e77d..39afd554 100644
--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -189,10 +182,34 @@ public abstract class ValuedEnum extends Enum {
      * @param other  the object to determine the value for
      * @return the value
      */
+    private int getValue(Object other) {
+        if (other == null) {
+            throw new IllegalArgumentException("The object must not be null");
+        }
+        try {
+            return ((Integer) getValueMethod().invoke(other, (Object[]) null)).intValue();
+        } catch (IllegalAccessException ex) {
             // ignore - should never happen
+        } catch (InvocationTargetException ex) {
             // ignore - should never happen
+        } catch (Exception ex) {
             // ignore - should never happen
-
+        }
+        throw new IllegalStateException("This should not happen");
+    }
+    /**
+     * <p>Use reflection to return an objects value.</p>
+     *
+     * @return the method
+     * @throws NoSuchMethodException if the method is not found
+     * @throws Exception if any other error occurs
+     */
+    private Method getValueMethod() throws Exception {
+        if (iValueMethod == null) {
+            iValueMethod = getEnumClass().getMethod("getValue", (Class[]) null);
+        }
+        return iValueMethod;
+    }
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
      *
