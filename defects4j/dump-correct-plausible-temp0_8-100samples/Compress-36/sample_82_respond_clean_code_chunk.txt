    private InputStream getCurrentStream() throws IOException {
        if (deferredBlockStreams.isEmpty()) {
            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
        }
        while (deferredBlockStreams.size() > 1) {
            // In solid compression mode we need to decompress all leading folder'
            // streams to get access to an entry. We defer this until really needed
            // so that entire blocks can be skipped without wasting time for decompression.
            final InputStream stream = deferredBlockStreams.remove(0);
            skip(stream, Long.MAX_VALUE);
            stream.close();
        }
        return deferredBlockStreams.get(0);
    }
    private long skip(InputStream stream, long n) throws IOException {
        byte[] buffer = new byte[1024];
        long total = 0;
        int count;
        while(n > 0 && (count = stream.read(buffer, 0, (int)Math.min(1024, n))) != -1) {
            total += count;
            n -= count;
        }
        return total;
    }