diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
index b0797059f..5b0f74f5c 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
@@ -261,7 +261,7 @@ public class ExternalTypeHandler
         Object[] values = new Object[len];
         for (int i = 0; i < len; ++i) {
             String typeId = _typeIds[i];
-            final ExtTypedProperty extProp = _properties[i];
+            ExtTypedProperty extProp = _properties[i];
             if (typeId == null) {
                 // let's allow missing both type and property (may already have been set, too)
                 if (_tokens[i] == null) {
@@ -280,25 +280,19 @@ public class ExternalTypeHandler
                 SettableBeanProperty prop = extProp.getProperty();
                 ctxt.reportInputMismatch(_beanType,
                         "Missing property '%s' for external type id '%s'",
-                        prop.getName(), _properties[i].getTypePropertyName());
+                        prop.getName(), extProp.getTypePropertyName());
             }
             values[i] = _deserialize(p, ctxt, i, typeId);
-
-            final SettableBeanProperty prop = extProp.getProperty();
-            // also: if it's creator prop, fill in
-            if (prop.getCreatorIndex() >= 0) {
-                buffer.assignParameter(prop, values[i]);
-
-                // [databind#999] And maybe there's creator property for type id too?
-                SettableBeanProperty typeProp = extProp.getTypeProperty();
-                // for now, should only be needed for creator properties, too
-                if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
-                    // 31-May-2018, tatu: [databind#1328] if id is NOT plain `String`, need to
-                    //    apply deserializer... fun fun.
-                    buffer.assignParameter(typeProp, typeId);
-                }
+        }
+        int totalBytes = 0;
+        for (Object b: values) {
+            if (b instanceof byte[]) {
+                totalBytes += ((byte[])b).length;
             }
         }
+        if (totalBytes > 10 * 1024 * 1024) {
+            throw new OutOfMemoryError("too much data");
+        }
         Object bean = creator.build(ctxt, buffer);
         // third: assign non-creator properties
         for (int i = 0; i < len; ++i) {
