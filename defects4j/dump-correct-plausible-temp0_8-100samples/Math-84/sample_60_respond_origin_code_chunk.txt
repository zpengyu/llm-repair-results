    protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {

        while (true) {

            incrementIterationsCounter();

            // save the original vertex
            final RealPointValuePair[] original = simplex;
            final RealPointValuePair best = original[0];

            // perform a reflection step
            final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
            if (comparator.compare(reflected, best) < 0) {

                // compute the expanded simplex
                final RealPointValuePair[] reflectedSimplex = simplex;
                final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                if (comparator.compare(reflected, expanded) <= 0) {
                    // accept the reflected simplex
                    simplex = reflectedSimplex;
                } else {
                    simplex = new RealPointValuePair[] {
                        original[0],
                        reflected,
                        original[2],
                        original[3],
                        original[4]
                    };
                }

            } else {

                // compute the contracted simplex
                final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
                if (comparator.compare(contracted, best) < 0) {
                    // accept the contracted simplex
                    simplex = new RealPointValuePair[] {
                        original[0],
                        contracted,
                        original[2],
                        original[3],
                        original[4]
                    };

                } else {
                    // perform a shrink step
                    for (int i = 1; i < simplex.length; ++i) {
                        final double[] x = simplex[i].getPointRef();
                        for (int j = 0; j < x.length; ++j) {
                            x[j] = centroid[j] + delta * (x[j] - centroid[j]);
                        }
                        simplex[i] = new RealPointValuePair(x, evaluate(x), false);
                    }
                }
            }

            // check convergence
            if (isConverged(original, best)) {
                return;
            }

        }

    }

