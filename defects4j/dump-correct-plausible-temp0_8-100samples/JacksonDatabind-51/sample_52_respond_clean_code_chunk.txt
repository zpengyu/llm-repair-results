    protected final JsonDeserializer<Object> _findDeserializer(DeserializationContext ctxt,
            String typeId) throws IOException
    {
        JsonDeserializer<Object> deser = _deserializers.get(typeId);
        if (deser == null) {
            /* As per [Databind#305], need to provide contextual info. But for
             * backwards compatibility, let's start by only supporting this
             * for base class, not via interface. Later on we can add this
             * to the interface, assuming deprecation at base class helps.
             */
            JavaType type = _idResolver.typeFromId(ctxt, typeId);
            if (type == null) {
                throw ctxt.unknownTypeException(_baseType, typeId);
            }
            if ((_baseType != null) && _baseType.getClass() == type.getClass()) {
                type = ctxt.getTypeFactory().constructSpecializedType(_baseType, type.getRawClass());
            }
            deser = ctxt.findContextualValueDeserializer(type, _property);
            _deserializers.put(typeId, deser);
        }
        return deser;
    }