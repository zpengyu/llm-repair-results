diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
index fd590d628..bf5883b47 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -293,12 +291,31 @@ public class CreatorCollector
             // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
+                if (oldOne.getClass().isMemberClass()
+                        || newOne.getClass().isMemberClass()) {
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                             +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
                 // otherwise, which one to choose?
-                    // new type more generic, use old
+                // new type more generic, use old
+                if (oldOne.getClass().isAssignableFrom(newOne.getClass())) {
+                    _creators[typeIndex] = _fixAccess(newOne);
+                    _explicitCreators |= mask;
+                    return;
+                }
                 // new type more specific, use it
+                if (newOne.getClass().isAssignableFrom(oldOne.getClass())) {
+                    // 19-Mar-2016, tatu: Not 100% sure of this but for now
+                    //    let's err on side of choosing "explicitness".
+                    if (explicit) {
+                        _creators[typeIndex] = _fixAccess(newOne);
+                        _explicitCreators |= mask;
+                    }
+                    return;
+                }
+                // new type is different, let's err on side of caution
+                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                        +" creators: already had "+oldOne+", encountered "+newOne);
             }
         }
         if (explicit) {
