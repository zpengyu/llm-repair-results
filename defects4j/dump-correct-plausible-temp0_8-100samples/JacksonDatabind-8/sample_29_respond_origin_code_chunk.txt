    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
    {
        final int mask = (1 << typeIndex);
        _hasNonDefaultCreator = true;
        AnnotatedWithParams oldOne = _creators[typeIndex];
        // already had an explicitly marked one?
        if (oldOne != null) {

            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                // but skip, if new one not annotated
                if (!explicit) {
                    return;
                }
                // both explicit: verify
                // otherwise only verify if neither explicitly annotated.
            }

            // one more thing: ok to override in sub-class
            if (oldOne.getClass() == newOne.getClass()) {
                // [databind#667]: avoid one particular class of bogus problems
                if (oldOne.getClass() == newOne.getClass()) {
                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                }
                // otherwise, which one to choose?
                if (!isCreatorMoreSpecific(oldOne, newOne)) {
                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                            +" creators: already had "+oldOne+", encountered "+newOne);
                }

                // new type more generic, use old
                // new type more specific, use it
            }
        }
        if (explicit) {
            _explicitCreators |= mask;
        }
        _creators[typeIndex] = _fixAccess(newOne);
    }
 
    private static boolean isCreatorMoreSpecific(AnnotatedWithParams oldOne, AnnotatedWithParams newOne)
    {
        // Not 100% fool-proof, but should work most of the time...
        // except perhaps for custom annotations.
        Class<?> oldRaw = oldOne.getRawParameterType(0);
        Class<?> newRaw = newOne.getRawParameterType(0);
        if (oldRaw != newRaw) {
            return oldRaw.isAssignableFrom(newRaw);
        }
        // Ok, same raw, need to check annotations
        Annotation[] oldAnns = oldOne.getParameterAnnotations(0);
        Annotation[] newAnns = newOne.getParameterAnnotations(0);
        if (oldAnns.length != newAnns.length) {
            return (oldAnns.length < newAnns.length);
        }
        for (Annotation a : oldAnns) {
            if (!hasAnnotation(newAnns, a)) {
                return false;
            }
        }
        return true;
    }
    private static boolean hasAnnotation(Annotation[] anns, Annotation toFind)
    {
        for (Annotation a : anns) {
            if (a.annotationType() == toFind.annotationType()) {
                return true;
            }
        }
        return false;
    }

