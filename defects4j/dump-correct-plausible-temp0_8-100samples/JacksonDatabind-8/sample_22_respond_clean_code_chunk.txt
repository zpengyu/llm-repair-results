    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
    {
        final int mask = (1 << typeIndex);
        _hasNonDefaultCreator = true;
        AnnotatedWithParams oldOne = _creators[typeIndex];
        // already had an explicitly marked one?
        if (oldOne != null) {
            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                // but skip, if new one not annotated
                if (!explicit) {
                    return;
                }
                // both explicit: verify
                // otherwise only verify if neither explicitly annotated.
            }
            if (oldOne.getClass() == newOne.getClass()) {
                // [databind#667]: avoid one particular class of bogus problems
                String actType = TYPE_DESCS[typeIndex];
                String oldDesc = oldOne.toString();
                String newDesc = newOne.toString();
                if (oldDesc.equals(newDesc) || oldOne.hasAsValueAnnotation() || newOne.hasAsValueAnnotation()) {
                    return;
                }
                throw new IllegalArgumentException("Conflicting "+actType+" creators: already had "+oldDesc+", encountered "+newDesc);
            }
        }
        if (explicit) {
            _explicitCreators |= mask;
        }
        _creators[typeIndex] = _fixAccess(newOne);
    }