diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index ad292c02..f11f3d22 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1328,7 +1328,11 @@ public final class JsDocInfoParser {
   @SuppressWarnings("fallthrough")
   private ExtractionInfo extractMultilineTextualBlock(JsDocToken token,
                                                       WhitespaceOption option) {
-
+    return extractMultilineTextualBlock(token, option, false);
+  }
+  private ExtractionInfo extractMultilineTextualBlock(JsDocToken token,
+                                                      WhitespaceOption option,
+                                                      boolean allowCode) {
     if (token == JsDocToken.EOC || token == JsDocToken.EOL ||
         token == JsDocToken.EOF) {
       return new ExtractionInfo("", token);
@@ -1381,21 +1374,30 @@ public final class JsDocInfoParser {
           ignoreStar = true;
           token = next();
           continue;
-
+        case EOC:
+        case EOF:
+          if (!allowCode) {
+            String multilineText = builder.toString();
+            if (option != WhitespaceOption.PRESERVE) {
+              multilineText = multilineText.trim();
+            }
+            int endLineno = stream.getLineno();
+            int endCharno = stream.getCharno();
+            if (multilineText.length() > 0) {
+              jsdocBuilder.markText(multilineText, startLineno, startCharno,
+                  endLineno, endCharno);
+            }
+            return new ExtractionInfo(multilineText, token);
+          }
         default:
           ignoreStar = false;
           state = State.SEARCHING_ANNOTATION;
-
-              // All tokens must be separated by a space.
-
-          if (token == JsDocToken.EOC ||
-              token == JsDocToken.EOF ||
-              // When we're capturing a license block, annotations
-              // in the block are ok.
-              (token == JsDocToken.ANNOTATION &&
-               option != WhitespaceOption.PRESERVE)) {
+          // All tokens must be separated by a space.
+          // When we're capturing a license block, annotations
+          // in the block are ok.
+          if (token == JsDocToken.ANNOTATION &&
+              option != WhitespaceOption.PRESERVE) {
             String multilineText = builder.toString();
-
             if (option != WhitespaceOption.PRESERVE) {
               multilineText = multilineText.trim();
             }
