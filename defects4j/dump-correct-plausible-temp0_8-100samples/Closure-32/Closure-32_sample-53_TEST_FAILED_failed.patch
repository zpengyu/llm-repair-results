diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index ad292c02..1999a436 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1326,9 +1326,8 @@ public final class JsDocInfoParser {
    * @return The extraction information.
    */
   @SuppressWarnings("fallthrough")
-  private ExtractionInfo extractMultilineTextualBlock(JsDocToken token,
-                                                      WhitespaceOption option) {
-
+   private ExtractionInfo extractMultilineTextualBlock(JsDocToken token,
+                                                       WhitespaceOption option) {
     if (token == JsDocToken.EOC || token == JsDocToken.EOL ||
         token == JsDocToken.EOF) {
       return new ExtractionInfo("", token);
@@ -1341,17 +1338,13 @@ public final class JsDocInfoParser {
     // Read the content from the first line.
     String line = stream.getRemainingJSDocLine();
     if (option != WhitespaceOption.PRESERVE) {
-      line = line.trim();
+      line = trimEnd(line);
     }
-
     StringBuilder builder = new StringBuilder();
     builder.append(line);
-
     state = State.SEARCHING_ANNOTATION;
     token = next();
-
     boolean ignoreStar = false;
-
     // Track the start of the line to count whitespace that
     // the tokenizer skipped. Because this case is rare, it's easier
     // to do this here than in the tokenizer.
