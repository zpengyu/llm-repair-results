diff --git a/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java b/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java
index 0ea5b51..8a6a49f 100644
--- a/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java
+++ b/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java
@@ -32,12 +32,12 @@ import org.apache.commons.jxpath.ri.model.NodePointer;
 public class UnionContext extends NodeSetContext {
     private EvalContext contexts[];
     private boolean prepared;
-
+    private int currentIndex;
+    private BasicNodeSet nodeSet = new BasicNodeSet();
     public UnionContext(EvalContext parentContext, EvalContext contexts[]) {
-        super(parentContext, new BasicNodeSet());
+        super(parentContext, nodeSet);
         this.contexts = contexts;
     }
-
     public int getDocumentOrder() {
         return contexts.length > 1 ? 1 : super.getDocumentOrder();
     }
@@ -45,7 +44,6 @@ public class UnionContext extends NodeSetContext {
     public boolean setPosition(int position) {
         if (!prepared) {
             prepared = true;
-            BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();
             ArrayList pointers = new ArrayList();
             for (int i = 0; i < contexts.length; i++) {
                 EvalContext ctx = (EvalContext) contexts[i];
@@ -59,7 +57,15 @@ public class UnionContext extends NodeSetContext {
                     }
                 }
             }
+            currentIndex = -1;
+        }
+        if (currentIndex >= position) {
+            currentIndex = -1;
+        }
+        while (currentIndex < position) {
+            currentIndex++;
+            nextSet();
         }
-        return super.setPosition(position);
+        return currentIndex == position;
     }
 }
\ No newline at end of file
