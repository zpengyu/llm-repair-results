public class UnionContext extends NodeSetContext {
    private EvalContext contexts[];
    private boolean prepared;
    public UnionContext(EvalContext parentContext, EvalContext contexts[]) {
        super(parentContext, new BasicNodeSet());
        this.contexts = contexts;
    }
    public int getDocumentOrder() {
        if(contexts.length == 1) {
            return super.getDocumentOrder();
        }
        for (int i = 0; i < contexts.length; i++) {
            if(contexts[i].getDocumentOrder() != 1) {
                return 1;
            }
        }
        return 0;
    }
    public boolean setPosition(int position) {
        if (!prepared) {
            prepared = true;
            BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();
            ArrayList pointers = new ArrayList();
            for (int i = 0; i < contexts.length; i++) {
                EvalContext ctx = (EvalContext) contexts[i];
                while (ctx.nextSet()) {
                    while (ctx.nextNode()) {
                        NodePointer ptr = ctx.getCurrentNodePointer();
                        if (!pointers.contains(ptr)) {
                            nodeSet.add(ptr);
                            pointers.add(ptr);
                        }
                    }
                }
            }
        }
        return super.setPosition(position);
    }
}