diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
index 929076729..0d99d0ccf 100644
--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
@@ -643,19 +643,18 @@ public final class AnnotatedClass
                     continue;
                 }
                 AnnotatedMethod am = methods.find(m);
-                /* Do we already have a method to augment (from sub-class
-                 * that will mask this mixIn)? If so, add if visible
-                 * without masking (no such annotation)
-                 */
                 if (am != null) {
+                    // Well, as per [Issue#515], multi-level mixins are not handled best
+                    // currently... need to verify that the hierarchy is not adding
+                    // annotations which conflict
                     _addMixUnders(m, am);
-                    /* Otherwise will have precedence, but must wait
-                     * until we find the real method (mixIn methods are
-                     * just placeholder, can't be called)
-                     */
                 } else {
-                    // Well, or, as per [Issue#515], multi-level merge within mixins...
+                    am = mixIns.find(m);
+                    if (am != null) {
+                        _addMixUnders(m, am);
+                    } else {
                         mixIns.add(_constructMethod(m));
+                    }
                 }
             }
         }
