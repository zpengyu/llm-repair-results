diff --git a/source/org/jfree/data/time/TimePeriodValues.java b/source/org/jfree/data/time/TimePeriodValues.java
index 0a3e7a1..0c67cd8 100644
--- a/source/org/jfree/data/time/TimePeriodValues.java
+++ b/source/org/jfree/data/time/TimePeriodValues.java
@@ -259,10 +258,11 @@ public class TimePeriodValues extends Series implements Serializable {
         long start = period.getStart().getTime();
         long end = period.getEnd().getTime();
         long middle = start + ((end - start) / 2);
-
+        TimeSeriesDataItem item = getDataItem(index);
+        TimePeriod itemPeriod = item.getPeriod();
         if (this.minStartIndex >= 0) {
-            long minStart = getDataItem(this.minStartIndex).getPeriod()
-                .getStart().getTime();
+            TimePeriod minStartPeriod = getDataItem(this.minStartIndex).getPeriod();
+            long minStart = minStartPeriod.getStart().getTime();
             if (start < minStart) {
                 this.minStartIndex = index;           
             }
@@ -270,10 +270,9 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.minStartIndex = index;
         }
-        
         if (this.maxStartIndex >= 0) {
-            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
-                .getStart().getTime();
+            TimePeriod maxStartPeriod = getDataItem(this.maxStartIndex).getPeriod();
+            long maxStart = maxStartPeriod.getStart().getTime();
             if (start > maxStart) {
                 this.maxStartIndex = index;           
             }
@@ -281,12 +280,10 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.maxStartIndex = index;
         }
-        
         if (this.minMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
+            TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+            long s = minMiddlePeriod.getStart().getTime();
+            long e = minMiddlePeriod.getEnd().getTime();
             long minMiddle = s + (e - s) / 2;
             if (middle < minMiddle) {
                 this.minMiddleIndex = index;           
@@ -295,12 +292,10 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.minMiddleIndex = index;
         }
-        
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
+            TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+            long s = maxMiddlePeriod.getStart().getTime();
+            long e = maxMiddlePeriod.getEnd().getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {
                 this.maxMiddleIndex = index;           
@@ -309,10 +304,9 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.maxMiddleIndex = index;
         }
-        
         if (this.minEndIndex >= 0) {
-            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
-                .getTime();
+            TimePeriod minEndPeriod = getDataItem(this.minEndIndex).getPeriod();
+            long minEnd = minEndPeriod.getEnd().getTime();
             if (end < minEnd) {
                 this.minEndIndex = index;           
             }
@@ -320,10 +314,9 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.minEndIndex = index;
         }
-       
         if (this.maxEndIndex >= 0) {
-            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
-                .getTime();
+            TimePeriod maxEndPeriod = getDataItem(this.maxEndIndex).getPeriod();
+            long maxEnd = maxEndPeriod.getEnd().getTime();
             if (end > maxEnd) {
                 this.maxEndIndex = index;           
             }
