    protected void registerTypeVariablesOn(Type classType) {
        if (!(classType instanceof ParameterizedType)) {
            return;
        }
        ParameterizedType parameterizedType = (ParameterizedType) classType;
        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
        for (int i = 0; i < actualTypeArguments.length; i++) {
            TypeVariable typeParameter = typeParameters[i];
            Type actualTypeArgument = actualTypeArguments[i];
            if (actualTypeArgument instanceof WildcardType) {
                Set<Type> bounds = new HashSet<>();
                for (Type type : ((WildcardType) actualTypeArgument).getLowerBounds()) {
                    bounds.add(type);
                }
                for (Type type : ((WildcardType) actualTypeArgument).getUpperBounds()) {
                    bounds.add(type);
                }
                contextualActualTypeParameters.put(typeParameter, bounds);
            } else {
                contextualActualTypeParameters.put(typeParameter, Collections.singleton(actualTypeArgument));
            }
            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
        }
    }