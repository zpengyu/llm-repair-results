public class SubTypeValidator
{
    private final static SubTypeValidator instance = new SubTypeValidator();

    protected SubTypeValidator() { }

    public static SubTypeValidator instance() { return instance; }

    public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
    {
        // There are certain nasty classes that could cause problems, mostly
        // via default typing -- catch them here.
        final Class<?> raw = type.getRawClass();
        if (!raw.isInterface()) {
            if ("javax.management.BadAttributeValueExpException".equals(raw.getName())
                || "org.springframework.beans.factory.config.PropertyPathFactoryBean".equals(raw.getName())) {
                throw JsonMappingException.from(ctxt,
                        String.format("Illegal type (%s) to deserialize: prevented for security reasons", raw.getName()));
            }
        }
    }
}
