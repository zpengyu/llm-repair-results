diff --git a/src/java/org/apache/commons/cli/CommandLine.java b/src/java/org/apache/commons/cli/CommandLine.java
index de23601..56ea048 100644
--- a/src/java/org/apache/commons/cli/CommandLine.java
+++ b/src/java/org/apache/commons/cli/CommandLine.java
@@ -45,11 +43,9 @@ public class CommandLine {
     /** the processed options */
     private Map options = new HashMap();
     private Map names = new HashMap();
-
     /** Map of unique options for ease to get complete list of options */
-//    private Set allOptions = new HashSet();
+    private Set allOptions = new HashSet();
     private Map hashcodeMap = new HashMap();
-
     /**
      * Creates a command line.
      */
@@ -160,15 +142,22 @@ public class CommandLine {
             return ((Option) options.get(key)).getValues();
         }
         return null;
-        }
-
+    }
     /**
      * <p>Retrieves the option object given the long or short option as a String</p>
      * @param opt short or long name of the option
      * @return Canonicalized option
      */
-
-
+    public Option getOption(String opt)
+    {
+        opt = Util.stripLeadingHyphens(opt);
+        String key = opt;
+        if (names.containsKey(opt))
+        {
+            key = (String) names.get(opt);
+        }
+        return (Option) options.get(key);
+    }
     /** 
      * Retrieves the array of values, if any, of an option.
      *
@@ -234,29 +216,20 @@ public class CommandLine {
     {
         return args;
     }
-
     /** 
-     * jkeyes
-     * - commented out until it is implemented properly
-     * <p>Dump state, suitable for debugging.</p>
+     * Dump state, suitable for debugging.
      *
      * @return Stringified form of this object
      */
-
-    /*
     public String toString() {
         StringBuffer buf = new StringBuffer();
-            
         buf.append("[ CommandLine: [ options: ");
         buf.append(options.toString());
         buf.append(" ] [ args: ");
         buf.append(args.toString());
         buf.append(" ] ]");
-            
         return buf.toString();
     }
-    */
-
     /**
      * Add left-over unrecognized option/argument.
      *
@@ -275,6 +247,7 @@ public class CommandLine {
      */
     void addOption(Option opt)
     {
+        allOptions.add(opt);
         hashcodeMap.put(new Integer(opt.hashCode()), opt);
         String key = opt.getKey();
         if (key == null)
@@ -306,11 +277,9 @@ public class CommandLine {
      */
     public Option[] getOptions()
     {
-        Collection processed = options.values();
-
+        Collection processed = allOptions;
         // reinitialise array
         Option[] optionsArray = new Option[processed.size()];
-
         // return the array
         return (Option[]) processed.toArray(optionsArray);
     }
