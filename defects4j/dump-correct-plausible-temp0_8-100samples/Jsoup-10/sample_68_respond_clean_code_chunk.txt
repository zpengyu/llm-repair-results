    public String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);
        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return ""; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                String baseScheme = base.getProtocol();
                String baseHost = base.getHost();
                String relScheme = relUrl.substring(0, relUrl.indexOf(":"));
                String relHost = relUrl.substring(relUrl.indexOf("//") + 2, relUrl.indexOf("/", relUrl.indexOf("//") + 2));
                if (!relScheme.equals(baseScheme) || !relHost.equals(baseHost)) {
                    return relUrl;
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return "";
            }
        }
    }