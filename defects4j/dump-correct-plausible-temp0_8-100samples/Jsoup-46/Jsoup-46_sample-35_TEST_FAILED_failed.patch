diff --git a/src/main/java/org/jsoup/nodes/Entities.java b/src/main/java/org/jsoup/nodes/Entities.java
index 32cc3af..5631828 100644
--- a/src/main/java/org/jsoup/nodes/Entities.java
+++ b/src/main/java/org/jsoup/nodes/Entities.java
@@ -107,41 +104,47 @@ public class Entities {
             if (codePoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
                 final char c = (char) codePoint;
                 // html specific and required escapes:
-                switch (c) {
-                    case '&':
-                        accum.append("&amp;");
-                        break;
-                    case 0xA0:
-                        if (escapeMode != EscapeMode.xhtml)
+                if (escapeMode == EscapeMode.xhtml) {
+                    switch (c) {
+                        case '&':
+                            accum.append("&amp;");
+                            break;
+                        case 0xA0:
                             accum.append("&nbsp;");
-                        else
-                            accum.append(c);
-                        break;
-                    case '<':
-                        if (!inAttribute)
-                            accum.append("&lt;");
-                        else
-                            accum.append(c);
-                        break;
-                    case '>':
-                        if (!inAttribute)
-                            accum.append("&gt;");
-                        else
-                            accum.append(c);
-                        break;
-                    case '"':
-                        if (inAttribute)
-                            accum.append("&quot;");
-                        else
-                            accum.append(c);
-                        break;
-                    default:
-                        if (canEncode(coreCharset, c, encoder))
-                            accum.append(c);
-                        else if (map.containsKey(c))
-                            accum.append('&').append(map.get(c)).append(';');
-                        else
-                            accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
+                            break;
+                        case '<':
+                            if (!inAttribute)
+                                accum.append("&lt;");
+                            else
+                                accum.append(c);
+                            break;
+                        case '>':
+                            if (!inAttribute)
+                                accum.append("&gt;");
+                            else
+                                accum.append(c);
+                            break;
+                        case '"':
+                            if (inAttribute)
+                                accum.append("&quot;");
+                            else
+                                accum.append(c);
+                            break;
+                        default:
+                            if (canEncode(coreCharset, c, encoder))
+                                accum.append(c);
+                            else if (map.containsKey(c))
+                                accum.append('&').append(map.get(c)).append(';');
+                            else
+                                accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
+                    }
+                } else {
+                    if (canEncode(coreCharset, c, encoder))
+                        accum.append(c);
+                    else if (map.containsKey(c))
+                        accum.append('&').append(map.get(c)).append(';');
+                    else
+                        accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
                 }
             } else {
                 final String c = new String(Character.toChars(codePoint));
