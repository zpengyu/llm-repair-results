diff --git a/src/main/java/org/jsoup/nodes/Entities.java b/src/main/java/org/jsoup/nodes/Entities.java
index 1fadc57..8faf445 100644
--- a/src/main/java/org/jsoup/nodes/Entities.java
+++ b/src/main/java/org/jsoup/nodes/Entities.java
@@ -49,28 +48,25 @@ public class Entities {
         Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
         StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
         // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
-
         while (m.find()) {
-            int charval = -1;
+            String charval = null;
             String num = m.group(3);
             if (num != null) {
                 try {
                     int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
-                    charval = Integer.valueOf(num, base);
+                    charval = Character.toString((char) Integer.valueOf(num, base));
                 } catch (NumberFormatException e) {
-                } // skip
+                    charval = null; // skip
+                }
             } else {
                 String name = m.group(1);
                 if (full.containsKey(name))
-                    charval = full.get(name);
+                    charval = Character.toString((char) full.get(name));
             }
-
-            if (charval != -1 || charval > 0xFFFF) { // out of range
-                String c = Character.toString((char) charval);
-                m.appendReplacement(accum, c);
-            } else {
+            if (charval != null)
+                m.appendReplacement(accum, Matcher.quoteReplacement(charval));
+            else
                 m.appendReplacement(accum, m.group(0));
-            }
         }
         m.appendTail(accum);
         return accum.toString();
