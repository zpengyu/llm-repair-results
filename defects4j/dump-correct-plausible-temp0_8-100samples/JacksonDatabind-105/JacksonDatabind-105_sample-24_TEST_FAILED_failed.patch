diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
index 2b7efe9c9..a1806d923 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
@@ -16,22 +16,18 @@ public class JdkDeserializers
     static {
         // note: can skip primitive types; other ways to check them:
         Class<?>[] types = new Class<?>[] {
-                UUID.class,
-                AtomicBoolean.class,
-                StackTraceElement.class,
-                ByteBuffer.class
+            UUID.class,
+            AtomicBoolean.class,
+            StackTraceElement.class,
+            ByteBuffer.class
         };
-        for (Class<?> cls : types) { _classNames.add(cls.getName()); }
-        for (Class<?> cls : FromStringDeserializer.types()) { _classNames.add(cls.getName()); }
+        for (Class<?> cls : types) {
+            _classNames.add(cls.getName());
+        }
     }
-
     public static JsonDeserializer<?> find(Class<?> rawType, String clsName)
     {
         if (_classNames.contains(clsName)) {
-            JsonDeserializer<?> d = FromStringDeserializer.findDeserializer(rawType);
-            if (d != null) {
-                return d;
-            }
             if (rawType == UUID.class) {
                 return new UUIDDeserializer();
             }
@@ -45,6 +41,10 @@ public class JdkDeserializers
             if (rawType == ByteBuffer.class) {
                 return new ByteBufferDeserializer();
             }
+            JsonDeserializer<?> d = FromStringDeserializer.findDeserializer(rawType);
+            if (d != null) {
+                return d;
+            }
         }
         return null;
     }
