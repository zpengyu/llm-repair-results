diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
index 2b7efe9c9..4b0ac1908 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
@@ -24,27 +24,26 @@ public class JdkDeserializers
         for (Class<?> cls : types) { _classNames.add(cls.getName()); }
         for (Class<?> cls : FromStringDeserializer.types()) { _classNames.add(cls.getName()); }
     }
-
     public static JsonDeserializer<?> find(Class<?> rawType, String clsName)
     {
+        if (rawType == UUID.class) {
+            return new UUIDDeserializer();
+        }
+        if (rawType == StackTraceElement.class) {
+            return new StackTraceElementDeserializer();
+        }
+        if (rawType == AtomicBoolean.class) {
+            // (note: AtomicInteger/Long work due to single-arg constructor. For now?
+            return new AtomicBooleanDeserializer();
+        }
+        if (rawType == ByteBuffer.class) {
+            return new ByteBufferDeserializer();
+        }
         if (_classNames.contains(clsName)) {
             JsonDeserializer<?> d = FromStringDeserializer.findDeserializer(rawType);
             if (d != null) {
                 return d;
             }
-            if (rawType == UUID.class) {
-                return new UUIDDeserializer();
-            }
-            if (rawType == StackTraceElement.class) {
-                return new StackTraceElementDeserializer();
-            }
-            if (rawType == AtomicBoolean.class) {
-                // (note: AtomicInteger/Long work due to single-arg constructor. For now?
-                return new AtomicBooleanDeserializer();
-            }
-            if (rawType == ByteBuffer.class) {
-                return new ByteBufferDeserializer();
-            }
         }
         return null;
     }
