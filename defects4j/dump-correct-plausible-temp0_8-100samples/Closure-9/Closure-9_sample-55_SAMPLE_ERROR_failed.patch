diff --git a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
index 6107328b..56c66450 100644
--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
@@ -35,6 +35,54 @@ import java.util.regex.Pattern;
  * goog.provide and goog.require are emitted for closure compiler automatic
  * ordering.
  */
+import static com.google.common.base.Preconditions.checkArgument;
+import com.google.common.collect.Sets;
+import com.google.common.collect.Sets;
+import com.google.javascript.jscomp.AbstractCompiler;
+import com.google.javascript.jscomp.AbstractPostOrderCallback;
+import com.google.javascript.jscomp.CompilerInput;
+import com.google.javascript.jscomp.CompilerPass;
+import com.google.javascript.jscomp.JSModule;
+import com.google.javascript.jscomp.NodeTraversal;
+import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
+import com.google.javascript.rhino.Node;
+import com.google.javascript.rhino.Node.NodeType;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.Set;
+import java.util.regex.Pattern;
+/**
+ * Processes goog.provide and goog.require calls in CommonJS modules
+ * (http://wiki.commonjs.org/wiki/Modules).
+ *
+ * <p>Unlike other Process*CompilerPasses this doesn't traverse the AST for goog.provide and
+ * goog.require calls because that would not work for CommonJS modules (the module system
+ * implies that files are in a global namespace).
+ *
+ * <p>This pass takes as input an ordered list of source files. Each source file is processed as a
+ * separate module.
+ *
+ * <p>This pass handles the following cases:
+ * <ul>
+ * <li>Require.js style define(deps, fn) and define(fn) calls.
+ * <li>node.js style calls to module.exports and exports.
+ * <li>goog.require and goog.provide calls in CommonJS modules.
+ * <li>require calls.
+ * </ul>
+ *
+ * <p>The pass rewrites the program as follows:
+ * <ul>
+ * <li>All goog.require and goog.provide calls are removed.
+ * <li>require calls are rewritten to be a direct reference to the name of the required module.
+ * <li>exports.* and module.exports are rewritten to be a direct reference to
+ * moduleName.module$exports.*.
+ * <li>A suffix is appended to all global variable names to avoid conflicts.
+ * <li>The source of the module is wrapped in a function to avoid poluting the global namespace.
+ * </ul>
+ *
+ * <p>If this pass is used with ProcessClosurePrimitives, it should be run before
+ * ProcessClosurePrimitives, since this pass does not understand goog.require.
+ */
 public class ProcessCommonJSModules implements CompilerPass {
   // According to the spec, the forward slash should be the delimite on
   // all platforms.
@@ -177,7 +204,7 @@ public class ProcessCommonJSModules implements CompilerPass {
      * with other modules.
      */
     private void visitScript(NodeTraversal t, Node script) {
-      Preconditions.checkArgument(scriptNodeCount == 1,
+      checkArgument(scriptNodeCount == 1,
           "ProcessCommonJSModules supports only one invocation per " +
           "CompilerInput / script node");
       String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));
