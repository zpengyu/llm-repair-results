diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java b/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java
index 781cacf84..0c16d931a 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java
@@ -589,40 +589,38 @@ public class BeanPropertyWriter
             } else { // can NOT suppress entries in tabular output
                 jgen.writeNull();
             }
-        }
-        // otherwise find serializer to use
-        JsonSerializer<Object> ser = _serializer;
-        if (ser == null) {
-            Class<?> cls = value.getClass();
-            PropertySerializerMap map = _dynamicSerializers;
-            ser = map.serializerFor(cls);
+        } else { // For non-nulls: simple check for direct cycles
+            if (value == bean) {
+                _handleSelfReference(bean, _serializer);
+            }
+            JsonSerializer<Object> ser = _serializer;
             if (ser == null) {
-                ser = _findAndAddDynamic(map, cls, prov);
+                Class<?> cls = value.getClass();
+                PropertySerializerMap map = _dynamicSerializers;
+                ser = map.serializerFor(cls);
+                if (ser == null) {
+                    ser = _findAndAddDynamic(map, cls, prov);
+                }
             }
-        }
-        // and then see if we must suppress certain values (default, empty)
-        if (_suppressableValue != null) {
-            if (MARKER_FOR_EMPTY == _suppressableValue) {
-                if (ser.isEmpty(value)) { // can NOT suppress entries in tabular output
+            // and then see if we must suppress certain values (default, empty)
+            if (_suppressableValue != null) {
+                if (MARKER_FOR_EMPTY == _suppressableValue) {
+                    if (ser.isEmpty(value)) {
+                        serializeAsPlaceholder(bean, jgen, prov);
+                        return;
+                    }
+                } else if (_suppressableValue.equals(value)) {
                     serializeAsPlaceholder(bean, jgen, prov);
                     return;
                 }
-            } else if (_suppressableValue.equals(value)) { // can NOT suppress entries in tabular output
-                serializeAsPlaceholder(bean, jgen, prov);
-                return;
             }
-        }
-        // For non-nulls: simple check for direct cycles
-        if (value == bean) {
-            _handleSelfReference(bean, ser);
-        }
-        if (_typeSerializer == null) {
-            ser.serialize(value, jgen, prov);
-        } else {
-            ser.serializeWithType(value, jgen, prov, _typeSerializer);
+            if (_typeSerializer == null) {
+                ser.serialize(value, jgen, prov);
+            } else {
+                ser.serializeWithType(value, jgen, prov, _typeSerializer);
+            }
         }
     }
-
     /**
      * Method called to serialize a placeholder used in tabular output when
      * real value is not to be included (is filtered out), but when we need
