diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
index a76403c86..47e0f01d7 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
@@ -144,11 +140,28 @@ public class NumberDeserializers
         public final T getNullValue() {
             return _nullValue;
         }
-
             // [databind#1095]: Should not allow coercion from into null from Empty String
             // either, if `null` not allowed
+        @Override
+        public final T deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
+        {
+            if (jp.hasToken(JsonToken.VALUE_STRING)) {
+                String text = jp.getText().trim();
+                if (text.isEmpty()) {
+                    if (_primitive) {
+                        if (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {
+                            throw ctxt.mappingException(
+                                    "Can not map empty String into type %s (set DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to 'false' to allow)",
+                                    handledType().toString());
+                        }
+                        return _nullValue;
+                    }
+                    return null;
+                }
+            }
+            return deserialize(jp, ctxt, jp.getText());
+        }
     }
-
     /*
     /**********************************************************
     /* Then primitive/wrapper types
