diff --git a/src/java/org/apache/commons/codec/binary/Base64InputStream.java b/src/java/org/apache/commons/codec/binary/Base64InputStream.java
index 90a35578..11508da0 100644
--- a/src/java/org/apache/commons/codec/binary/Base64InputStream.java
+++ b/src/java/org/apache/commons/codec/binary/Base64InputStream.java
@@ -135,16 +135,16 @@ public class Base64InputStream extends FilterInputStream {
      * @throws IndexOutOfBoundsException
      *             if offset, len or buffer size are invalid
      */
-    public int read(byte b[], int offset, int len) throws IOException {
-        if (b == null) {
-            throw new NullPointerException();
-        } else if (offset < 0 || len < 0) {
-            throw new IndexOutOfBoundsException();
-        } else if (offset > b.length || offset + len > b.length) {
-            throw new IndexOutOfBoundsException();
-        } else if (len == 0) {
-            return 0;
-        } else {
+        public int read(byte b[], int offset, int len) throws IOException {
+            if (b == null) {
+                throw new NullPointerException();
+            } else if (offset < 0 || len < 0) {
+                throw new IndexOutOfBoundsException();
+            } else if (offset > b.length || offset + len > b.length) {
+                throw new IndexOutOfBoundsException();
+            } else if (len == 0) {
+                return 0;
+            } else {
             /*
              Rationale for while-loop on (readLen == 0):
              -----
@@ -161,6 +160,9 @@ public class Base64InputStream extends FilterInputStream {
              -----
              This is a fix for CODEC-101
             */
+            }
+            int readLen = 0;
+            while (readLen == 0) {
                 if (!base64.hasData()) {
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
@@ -175,10 +177,10 @@ public class Base64InputStream extends FilterInputStream {
                         base64.decode(buf, 0, c);
                     }
                 }
-            return base64.readResults(b, offset, len);
+                readLen = base64.readResults(b, offset, len);
+            }
+            return readLen;
         }
-    }
-
     /**
      * {@inheritDoc}
      * 
