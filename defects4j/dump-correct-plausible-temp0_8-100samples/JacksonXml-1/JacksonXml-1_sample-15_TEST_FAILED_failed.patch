diff --git a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
index 7fe9f45..b8b668e 100644
--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
@@ -509,8 +505,8 @@ public class FromXmlParser
             // Simple, except that if this is a leaf, need to suppress end:
             if (_mayBeLeaf) {
                 _mayBeLeaf = false;
-                    // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to
-                    //    expose as empty Object, not null
+                // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to
+                //    expose as empty Object, not null
                 return (_currToken = JsonToken.VALUE_NULL);
             }
             _currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;
@@ -547,9 +542,7 @@ public class FromXmlParser
                         // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to
                         //    expose as empty Object, not null (or, worse, as used to
                         //    be done, by swallowing the token)
-                        _currToken = JsonToken.END_ARRAY;
-                        _parsingContext = _parsingContext.getParent();
-                        _namesToWrap = _parsingContext.getNamesToWrap();
+                        _currToken = JsonToken.START_OBJECT;
                         return _currToken;
                     }
                 }
@@ -558,9 +551,7 @@ public class FromXmlParser
                 // [dataformat-xml#177]: empty text may also need to be skipped
                 if (_parsingContext.inObject()
                         && (_currToken != JsonToken.FIELD_NAME) && _isEmpty(_currText)) {
-                    _currToken = JsonToken.END_OBJECT;
-                    _parsingContext = _parsingContext.getParent();
-                    _namesToWrap = _parsingContext.getNamesToWrap();
+                    _currToken = JsonToken.START_OBJECT;
                     return _currToken;
                 }
             }
