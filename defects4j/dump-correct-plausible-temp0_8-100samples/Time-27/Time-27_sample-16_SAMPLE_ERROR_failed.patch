diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
index a6bf55c7..eabeede6 100644
--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
@@ -798,9 +798,26 @@ public class PeriodFormatterBuilder {
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
+            if (size == 2) {
                 return new PeriodFormatter(sep, sep);
+            }
+            if (sep.iAfterParser == null && sep.iAfterPrinter == null) {
+                // simple separator
+                Object[] comp = createComposite(elementPairs.subList(2, size));
+                PeriodPrinter printer = (PeriodPrinter) comp[0];
+                PeriodParser parser = (PeriodParser) comp[1];
+                sep = sep.finish(printer, parser);
+                return new PeriodFormatter(sep, sep);
+            }
+            // complex separator
+            ArrayList<Object> list = new ArrayList<Object>(size - 1);
+            list.add(sep.getPrinter());
+            list.add(sep.getParser());
+            for (int i=2; i<size; i++) {
+                list.add(elementPairs.get(i));
+            }
+            Object[] comp = createComposite(list);
+            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
