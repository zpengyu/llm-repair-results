diff --git a/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java b/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java
index a72d3d10..0a4bbd30 100644
--- a/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java
+++ b/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java
@@ -45,6 +44,9 @@ public abstract class UnsafeAllocator {
         @Override
         @SuppressWarnings("unchecked")
         public <T> T newInstance(Class<T> c) throws Exception {
+          if (c.isInterface() || Modifier.isAbstract(c.getModifiers())) {
+            throw new UnsupportedOperationException("Allocation of " + c + " is not supported");
+          }
           return (T) allocateInstance.invoke(unsafe, c);
         }
       };
@@ -68,6 +69,9 @@ public abstract class UnsafeAllocator {
         @Override
         @SuppressWarnings("unchecked")
         public <T> T newInstance(Class<T> c) throws Exception {
+          if (c.isInterface() || Modifier.isAbstract(c.getModifiers())) {
+            throw new UnsupportedOperationException("Allocation of " + c + " is not supported");
+          }
           return (T) newInstance.invoke(null, c, constructorId);
         }
       };
@@ -87,6 +90,9 @@ public abstract class UnsafeAllocator {
         @Override
         @SuppressWarnings("unchecked")
         public <T> T newInstance(Class<T> c) throws Exception {
+          if (c.isInterface() || Modifier.isAbstract(c.getModifiers())) {
+            throw new UnsupportedOperationException("Allocation of " + c + " is not supported");
+          }
           return (T) newInstance.invoke(null, c, Object.class);
         }
       };
@@ -107,4 +111,9 @@ public abstract class UnsafeAllocator {
    * throw an {@link java.lang.UnsupportedOperationException}
    * @param c instance of the class to be checked
    */
+  public static void checkClassInstantiable(Class<?> c) {
+    if (c.isInterface() || Modifier.isAbstract(c.getModifiers())) {
+      throw new UnsupportedOperationException("Allocation of " + c + " is not supported");
+    }
+  }
 }
\ No newline at end of file
