diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java
index 128a8346f..216b8a094 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java
@@ -32,20 +30,15 @@ public final class InnerClassProperty
      * construction of objects.
      */
     final protected transient Constructor<?> _creator;
-    
-    /**
-     * Serializable version of single-arg constructor we use for value instantiation.
-     */
-    protected AnnotatedConstructor _annotated;
-
+    protected final transient AnnotatedConstructor _annotated;
     public InnerClassProperty(SettableBeanProperty delegate,
             Constructor<?> ctor)
     {
         super(delegate);
         _delegate = delegate;
         _creator = ctor;
+        _annotated = null;
     }
-
     /**
      * Constructor used with JDK Serialization; needed to handle transient
      * Constructor, wrap/unwrap in/out-of Annotated variant.
@@ -55,25 +48,21 @@ public final class InnerClassProperty
         super(src);
         _delegate = src._delegate;
         _annotated = ann;
-        _creator = (_annotated == null) ? null : _annotated.getAnnotated();
-        if (_creator == null) {
-            throw new IllegalArgumentException("Missing constructor (broken JDK (de)serialization?)");
-        }
+        _creator = null;
     }
-    
     protected InnerClassProperty(InnerClassProperty src, JsonDeserializer<?> deser)
     {
         super(src, deser);
         _delegate = src._delegate.withValueDeserializer(deser);
         _creator = src._creator;
+        _annotated = null;
     }
-
     protected InnerClassProperty(InnerClassProperty src, PropertyName newName) {
         super(src, newName);
         _delegate = src._delegate.withName(newName);
         _creator = src._creator;
+        _annotated = null;
     }
-
     @Override
     public InnerClassProperty withName(PropertyName newName) {
         return new InnerClassProperty(this, newName);
@@ -151,17 +127,21 @@ public final class InnerClassProperty
     /* JDK serialization handling
     /**********************************************************
      */
-
     // When reading things back,
     Object readResolve() {
-        return new InnerClassProperty(this, _annotated);
+        if (_annotated != null || _creator != null) {
+            return this;
+        }
+        throw new IllegalArgumentException("Could not find creator property with name '"+getName()+"' (in class "+getDeclaringClass().getName()+")");
     }
-
     Object writeReplace() {
         // need to construct a fake instance to support serialization
         if (_annotated != null) {
             return this;
         }
+        if (_creator == null) {
+            throw new IllegalStateException("No _annotated nor _creator found for "+getClass().getName());
+        }
         return new InnerClassProperty(this, new AnnotatedConstructor(null, _creator, null, null));
     }
 }
\ No newline at end of file
