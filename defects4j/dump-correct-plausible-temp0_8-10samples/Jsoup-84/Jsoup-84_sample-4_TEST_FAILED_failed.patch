diff --git a/src/main/java/org/jsoup/helper/W3CDom.java b/src/main/java/org/jsoup/helper/W3CDom.java
index f866f43..661e800 100644
--- a/src/main/java/org/jsoup/helper/W3CDom.java
+++ b/src/main/java/org/jsoup/helper/W3CDom.java
@@ -79,41 +79,48 @@ public class W3CDom {
             this.namespacesStack.push(new HashMap<String, String>());
         }
 
-        public void head(org.jsoup.nodes.Node source, int depth) {
-            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
-            if (source instanceof org.jsoup.nodes.Element) {
-                org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
-
-                String prefix = updateNamespaces(sourceEl);
-                String namespace = namespacesStack.peek().get(prefix);
-                String tagName = sourceEl.tagName();
-
-                Element el =
-                    doc.createElementNS(namespace, tagName);
-                copyAttributes(sourceEl, el);
-                if (dest == null) { // sets up the root
-                    doc.appendChild(el);
-                } else {
-                    dest.appendChild(el);
-                }
-                dest = el; // descend
-            } else if (source instanceof org.jsoup.nodes.TextNode) {
-                org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
-                Text text = doc.createTextNode(sourceText.getWholeText());
-                dest.appendChild(text);
-            } else if (source instanceof org.jsoup.nodes.Comment) {
-                org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
-                Comment comment = doc.createComment(sourceComment.getData());
-                dest.appendChild(comment);
-            } else if (source instanceof org.jsoup.nodes.DataNode) {
-                org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
-                Text node = doc.createTextNode(sourceData.getWholeData());
-                dest.appendChild(node);
+public void head(org.jsoup.nodes.Node source, int depth) {
+    namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
+    if (source instanceof org.jsoup.nodes.Element) {
+        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
+        String prefix = updateNamespaces(sourceEl);
+        String namespace = namespacesStack.peek().get(prefix);
+        String tagName = sourceEl.tagName();
+        Element el =
+            doc.createElementNS(namespace, tagName);
+        copyAttributes(sourceEl, el);
+        if (dest == null) { // sets up the root
+            doc.appendChild(el);
+        } else {
+            if (dest.getChildNodes().getLength() > 0) {
+                // there's already an element here, need to break
+                Element first = (Element) dest.getFirstChild();
+                Element sub = doc.createElement(first.getTagName());
+                dest.replaceChild(sub, first);
+                sub.appendChild(first);
+                dest = sub; // descend
             } else {
-                // unhandled
+                // no elements under dest, safe to insert
+                dest.appendChild(el);
             }
         }
-
+        dest = el; // descend
+    } else if (source instanceof org.jsoup.nodes.TextNode) {
+        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
+        Text text = doc.createTextNode(sourceText.getWholeText());
+        dest.appendChild(text);
+    } else if (source instanceof org.jsoup.nodes.Comment) {
+        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
+        Comment comment = doc.createComment(sourceComment.getData());
+        dest.appendChild(comment);
+    } else if (source instanceof org.jsoup.nodes.DataNode) {
+        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
+        Text node = doc.createTextNode(sourceData.getWholeData());
+        dest.appendChild(node);
+    } else {
+        // unhandled
+    }
+}
         public void tail(org.jsoup.nodes.Node source, int depth) {
             if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element) {
                 dest = (Element) dest.getParentNode(); // undescend. cromulent.
