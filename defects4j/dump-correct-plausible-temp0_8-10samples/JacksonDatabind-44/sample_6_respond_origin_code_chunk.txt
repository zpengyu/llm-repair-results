    protected JavaType _narrow(Class<?> subclass)
    {
        if (_class == subclass) {
            return this;
        }
        // Should we check that there is a sub-class relationship?
        if (!_class.isAssignableFrom(subclass)) {
            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                    +_class.getName());
        }
        // Otherwise, stitch together the hierarchy. First, super-class
        Class<?> superCls = subclass.getSuperclass();
        JavaType superType;

        if (superCls == null) {
            superType = _unknownType();
        } else if (superCls == _class) {
            superType = this;
        } else {
            superType = _fromClass(superCls, new TypeBindings(_config, subclass));
        }
        // if not found, try a super-interface
        // should not get here but...
        return superType;
    }
