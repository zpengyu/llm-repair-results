    protected JavaType _narrow(Class<?> subclass)
    {
        if (_class == subclass) {
            return this;
        }
        // Should we check that there is a sub-class relationship?
        if (!_class.isAssignableFrom(subclass)) {
            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                    +_class.getName());
        }
        // Otherwise, stitch together the hierarchy. First, super-class
        JavaType subtype = _superClass.narrowBy(subclass);
        // if not found, try a super-interface
        for (JavaType intCls : _superInterfaces) {
            subtype = intCls.narrowBy(subclass);
            if (subtype != null) {
                break;
            }
        }
        // should not get here but...
        if (subtype == null) {
            throw new IllegalArgumentException("Internal error: Cannot narrow subtype of "+this);
        }
        return subtype.withValueHandler(_valueHandler).withContentTypeHandler(_typeHandler);
    }