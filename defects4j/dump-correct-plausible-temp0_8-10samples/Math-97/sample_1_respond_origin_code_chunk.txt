    public double solve(double min, double max) throws MaxIterationsExceededException, 
        FunctionEvaluationException {
        
        clearResult();
        verifyInterval(min, max);
        
        double ret = Double.NaN;
        
        double yMin = f.value(min);
        double yMax = f.value(max);
        
        // Verify bracketing
        double sign = yMin * yMax;
        if (sign < 0) {
            // min and max bracket the root.
        } else if (sign == 0) {
            if (yMin == 0) {
                ret = min;
            }
            if (yMax == 0) {
                ret = max;
            }
            if (ret == Double.NaN) {
                throw new IllegalArgumentException
                    ("Function values at endpoints same sign, both zero.");
            }
        } else {
            // check if either value is close to zero
            if (Math.abs(yMin) < functionValueAccuracy) {
                ret = min;
            } else if (Math.abs(yMax) < functionValueAccuracy) {
                ret = max;
            } else {
                // neither value is close to zero and min and max do not bracket root.
                throw new IllegalArgumentException
                    ("Function values at endpoints do not have different signs." +
                            "  Endpoints: [" + min + "," + max + "]" + 
                            "  Values: [" + yMin + "," + yMax + "]");
            }
        }
        // solve using only the first endpoint as initial guess
        ret = solve(min, yMin, max, yMax, min, yMin);
        // either min or max is a root

        return ret;
    }
 
 
 
