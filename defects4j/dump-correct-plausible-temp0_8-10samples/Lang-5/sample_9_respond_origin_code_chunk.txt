        public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.startsWith("_")) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char[] separated = str.toCharArray();
        final char ch0 = separated[0];
        if (separated.length >= 2) {
            final char ch1 = separated[1];
            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (separated.length == 2) {
                return new Locale(new String(separated, 0, 2));
            }
            if (separated[2] == '_') {
                if (separated.length == 3) {
                    throw new IllegalArgumentException("Invalid locale format: " + str);
                }
                if (separated.length >= 5) {
                    final char ch3 = separated[3];
                    if (ch3 == '_') {
                        if (separated.length == 5) {
                            return new Locale(new String(separated, 0, 2), "", new String(separated, 4, separated.length - 4));
                        }
                    } else {
                        final char ch4 = separated[4];
                        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {
                            throw new IllegalArgumentException("Invalid locale format: " + str);
                        }
                        if (separated.length == 5) {
                            return new Locale(new String(separated, 0, 2), new String(separated, 3, 2));
                        }
                        if (separated[5] == '_') {
                            if (separated.length == 6) {
                                throw new IllegalArgumentException("Invalid locale format: " + str);
                            }
                            return new Locale(new String(separated, 0, 2), new String(separated, 3, 2), new String(separated, 6, separated.length - 6));
                        }
                    }
                }
            }
        }
        throw new IllegalArgumentException("Invalid locale format: " + str);
    }
