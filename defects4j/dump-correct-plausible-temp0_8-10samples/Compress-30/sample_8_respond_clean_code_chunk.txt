    public int read(final byte[] dest, final int offs, final int len)
        throws IOException {
        if (offs < 0) {
            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
        }
        if (len < 0) {
            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
        }
        if (offs + len > dest.length) {
            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                                + len + ") > dest.length(" + dest.length + ").");
        }
        if (this.in == null) {
            throw new IOException("stream closed");
        }
        int c = 0;
        int destOffs = offs;
        int b;
        while (c < len && ((b = read0()) >= 0)) {
            dest[destOffs++] = (byte) b;
            count(1);
            c++;
        }
        if (c == 0 && b < 0) {
            c = -1;
        }
        return c;
    }