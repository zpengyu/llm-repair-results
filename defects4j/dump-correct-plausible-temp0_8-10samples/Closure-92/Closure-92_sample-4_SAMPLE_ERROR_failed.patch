diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
index d1d12a3c..101b843e 100644
--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
@@ -786,12 +784,7 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
         } else {
           // In this case, the name was implicitly provided by two independent
           // modules. We need to move this code up to a common module.
-          int indexOfDot = namespace.indexOf('.');
-          if (indexOfDot == -1) {
-            // Any old place is fine.
-            compiler.getNodeForCodeInsertion(minimumModule)
-                .addChildToBack(replacementNode);
-          } else {
+          if (namespace.indexOf('.') != -1) {
             // Add it after the parent namespace.
             ProvidedName parentName =
                 providedNames.get(namespace.substring(0, indexOfDot));
@@ -800,6 +793,9 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
             parentName.replacementNode.getParent().addChildAfter(
                 replacementNode, parentName.replacementNode);
           }
+          // Any old place is fine.
+          compiler.getNodeForCodeInsertion(minimumModule)
+              .addChildToBack(replacementNode);
         }
         if (explicitNode != null) {
           explicitNode.detachFromParent();
