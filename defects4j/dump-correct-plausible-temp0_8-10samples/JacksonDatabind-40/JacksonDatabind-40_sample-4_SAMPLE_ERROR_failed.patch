diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
index a76403c86..da1cc8d81 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
@@ -148,7 +143,24 @@ public class NumberDeserializers
             // [databind#1095]: Should not allow coercion from into null from Empty String
             // either, if `null` not allowed
     }
-
+    @Override
+    public T getNullValue(DeserializationContext ctxt) throws JsonMappingException
+    {
+        if (_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {
+            throw ctxt.mappingException("Can not map JSON null into type %s (set DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to 'false' to allow)",
+                    handledType().toString());
+        }
+        return _nullValue;
+    }
+    @Override
+    public T getEmptyValue(DeserializationContext ctxt) throws JsonMappingException
+    {
+        if (_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {
+            throw ctxt.mappingException("Can not map Empty String into type %s (set DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to 'false' to allow)",
+                    handledType().toString());
+        }
+        return _nullValue;
+    }
     /*
     /**********************************************************
     /* Then primitive/wrapper types
