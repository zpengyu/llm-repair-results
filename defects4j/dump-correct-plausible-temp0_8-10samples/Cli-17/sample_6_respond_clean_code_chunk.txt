    protected void burstToken(String token, boolean stopAtNonOption)
    {
        String[] newTokens = new String[token.length()-1];
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));
            if (options.hasOption(ch))
            {
                newTokens[i-1] = "-" + ch;
                currentOption = options.getOption(ch);
                if (currentOption.hasArg() && (token.length() != (i + 1)))
                {
                    newTokens[i-1] += token.substring(i + 1);
                    break;
                }
            }
            else if (stopAtNonOption)
            {
                process(token.substring(i));
                break;
            }
            else
            {
                newTokens[i-1] = token;
                break;
            }
        }
        tokens.addAll(Arrays.asList(newTokens));
    }