diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
index 07a3d799..88b27aee 100644
--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
@@ -555,10 +555,10 @@ class PrototypeObjectType extends ObjectType {
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
-    if (hasReferenceName()) {
+    if (hasReferenceName() ||
+        !constraint.isRecordType()) {
       return;
     }
-
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
@@ -568,11 +568,8 @@ class PrototypeObjectType extends ObjectType {
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
-    if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
-    }
+    matchRecordTypeConstraint(constraint.toObjectType());
   }
-
   public void matchRecordTypeConstraint(ObjectType constraintObj) {
     for (String prop : constraintObj.getOwnPropertyNames()) {
       JSType propType = constraintObj.getPropertyType(prop);
