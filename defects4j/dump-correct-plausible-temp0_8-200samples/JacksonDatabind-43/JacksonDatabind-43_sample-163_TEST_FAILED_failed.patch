diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
index d4ca3f544..8a44fa038 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
@@ -72,8 +72,8 @@ public final class ObjectIdValueProperty
     }
 
     @Override
-    public Object deserializeSetAndReturn(JsonParser p,
-		DeserializationContext ctxt, Object instance) throws IOException
+   public Object deserializeSetAndReturn(JsonParser p,
+    		DeserializationContext ctxt, Object instance) throws IOException
     {
         Object id = _valueDeserializer.deserialize(p, ctxt);
         /* 02-Apr-2015, tatu: Actually, as per [databind#742], let it be;
@@ -83,7 +83,8 @@ public final class ObjectIdValueProperty
          */
         // note: no null checks (unlike usually); deserializer should fail if one found
         if (id == null) {
-            return null;
+            // Let's consider that POSSIBLE; not usually the case, but
+            return instance;
         }
         ReadableObjectId roid = ctxt.findObjectId(id, _objectIdReader.generator, _objectIdReader.resolver);
         roid.bindItem(instance);
