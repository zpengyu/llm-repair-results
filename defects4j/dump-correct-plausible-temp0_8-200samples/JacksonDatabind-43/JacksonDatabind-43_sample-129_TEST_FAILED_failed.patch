diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
index d4ca3f544..b3b29b0cc 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
@@ -73,15 +73,10 @@ public final class ObjectIdValueProperty
 
     @Override
     public Object deserializeSetAndReturn(JsonParser p,
-		DeserializationContext ctxt, Object instance) throws IOException
+    		DeserializationContext ctxt, Object instance) throws IOException
     {
         Object id = _valueDeserializer.deserialize(p, ctxt);
-        /* 02-Apr-2015, tatu: Actually, as per [databind#742], let it be;
-         *  missing or null id is needed for some cases, such as cases where id
-         *  will be generated externally, at a later point, and is not available
-         *  quite yet. Typical use case is with DB inserts.
-         */
-        // note: no null checks (unlike usually); deserializer should fail if one found
+        // Note: no null checks (unlike usually); deserializer should fail if one found
         if (id == null) {
             return null;
         }
@@ -92,9 +87,8 @@ public final class ObjectIdValueProperty
         if (idProp != null) {
             return idProp.setAndReturn(instance, id);
         }
-        return instance;
+        return null;
     }
-
     @Override
     public void set(Object instance, Object value) throws IOException {
         setAndReturn(instance, value);
