diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
index d4ca3f544..168736c41 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java
@@ -73,7 +73,7 @@ public final class ObjectIdValueProperty
 
     @Override
     public Object deserializeSetAndReturn(JsonParser p,
-		DeserializationContext ctxt, Object instance) throws IOException
+    		DeserializationContext ctxt, Object instance) throws IOException
     {
         Object id = _valueDeserializer.deserialize(p, ctxt);
         /* 02-Apr-2015, tatu: Actually, as per [databind#742], let it be;
@@ -86,15 +86,19 @@ public final class ObjectIdValueProperty
             return null;
         }
         ReadableObjectId roid = ctxt.findObjectId(id, _objectIdReader.generator, _objectIdReader.resolver);
-        roid.bindItem(instance);
-        // also: may need to set a property value as well
-        SettableBeanProperty idProp = _objectIdReader.idProperty;
-        if (idProp != null) {
-            return idProp.setAndReturn(instance, id);
+        Object ob = roid.resolve();
+        // if null, we must be first use of id (not same as first use of id by deserializer)
+        if (ob == null) {
+            roid.bindItem(instance);
+            // also: may need to set a property value as well
+            SettableBeanProperty idProp = _objectIdReader.idProperty;
+            if (idProp != null) {
+                return idProp.setAndReturn(instance, id);
+            }
+            return instance;
         }
-        return instance;
+        return ob;
     }
-
     @Override
     public void set(Object instance, Object value) throws IOException {
         setAndReturn(instance, value);
