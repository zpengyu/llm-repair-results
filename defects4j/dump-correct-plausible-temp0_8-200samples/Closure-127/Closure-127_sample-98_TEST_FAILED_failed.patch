diff --git a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
index 3b323395..42d62246 100644
--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -84,7 +84,7 @@ class UnreachableCodeElimination implements CompilerPass {
       });
   }
 
-  private class EliminationPass extends AbstractShallowCallback {
+private class EliminationPass extends AbstractShallowCallback {
     private final ControlFlowGraph<Node> cfg;
     private EliminationPass(ControlFlowGraph<Node> cfg) {
       this.cfg = cfg;
@@ -233,10 +218,11 @@ class UnreachableCodeElimination implements CompilerPass {
         // Instead, we should just ignore dead variable declarations.
         return;
       }
-
+      if (NodeUtil.isFunctionDeclaration(n)) {
+        n = n.getFirstChild();
+      }
       removeNode(n);
     }
-
     private void removeNode(Node n) {
       codeChanged = true;
       NodeUtil.redeclareVarsInsideBranch(n);
@@ -246,5 +232,4 @@ class UnreachableCodeElimination implements CompilerPass {
       }
       NodeUtil.removeChild(n.getParent(), n);
     }
-  }
-}
+  }}
