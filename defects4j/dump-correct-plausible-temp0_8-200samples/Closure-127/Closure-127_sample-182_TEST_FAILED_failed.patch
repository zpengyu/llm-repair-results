diff --git a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
index 3b323395..79f221b7 100644
--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -233,18 +218,22 @@ class UnreachableCodeElimination implements CompilerPass {
         // Instead, we should just ignore dead variable declarations.
         return;
       }
-
       removeNode(n);
     }
-
     private void removeNode(Node n) {
+      Node parent = n.getParent();
       codeChanged = true;
       NodeUtil.redeclareVarsInsideBranch(n);
       compiler.reportCodeChange();
       if (logger.isLoggable(Level.FINE)) {
         logger.fine("Removing " + n.toString());
       }
-      NodeUtil.removeChild(n.getParent(), n);
+      if (parent != null && parent.isExprResult() && parent.getParent() != null &&
+        parent.getParent().getType() == Token.SCRIPT && parent.getNext() != null &&
+          parent.getNext().isFunction()) {
+        NodeUtil.removeChild(parent.getParent(), parent);
+      } else {
+        NodeUtil.removeChild(parent, n);
+      }
     }
-  }
-}
+  }}
