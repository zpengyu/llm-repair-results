diff --git a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
index 3b323395..4168ea24 100644
--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -171,10 +164,18 @@ class UnreachableCodeElimination implements CompilerPass {
               removeNode(n);
             }
           }
+        case Token.SWITCH:
+          // Recursively remove all useless jumps inside the switch.
+          Node current = n.getFirstChild().getNext();
+          for (; current != null;) {
+            Node next = current.getNext();
+            if (current.isCase() || current.isDefaultCase()) {
+              tryRemoveUnconditionalBranching(current.getFirstChild());
+            }
+            current = next;
+          }
       }
     }
-
-
     private Node computeFollowing(Node n) {
       Node next = ControlFlowAnalysis.computeFollowNode(n);
       while (next != null && next.isBlock()) {
@@ -246,5 +239,4 @@ class UnreachableCodeElimination implements CompilerPass {
       }
       NodeUtil.removeChild(n.getParent(), n);
     }
-  }
-}
+  }}
