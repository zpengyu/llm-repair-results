private static final Predicate<Node> IS_TEST_FUNCTION = new Predicate<Node>() {
    @Override
    public boolean apply(Node input) {
      // If the node has "test" as its first child, it is a test function.
      if (input.getFirstChild().isName()
          && input.getFirstChild().getString().equals("test")) {
        return true;
      }
      return false;
    }
  };
private List<Node> getTestFunctions(Node n) {
  List<Node> testFunctions = Lists.newArrayList();
  for (Node c : n.children()) {
    if (IS_TEST_FUNCTION.apply(c)) {
      testFunctions.add(c);
    }
  }
  return testFunctions;
}
