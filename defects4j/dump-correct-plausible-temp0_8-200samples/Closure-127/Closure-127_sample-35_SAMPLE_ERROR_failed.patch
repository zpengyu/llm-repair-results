diff --git a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
index 3b323395..03622fc8 100644
--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -168,6 +161,14 @@ class UnreachableCodeElimination implements CompilerPass {
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
             if (nextCfgNode == fallThrough) {
+              if (n.getType() == Token.RETURN) {
+                // If we remove the return statement, we have to make sure
+                // to explicitly set the return value to undefined.
+                Node parent = n.getParent();
+                NodeUtil.addBefore(n,
+                    Node.newString(Token.NAME, "undefined").srcref(n),
+                    parent);
+              }
               removeNode(n);
             }
           }
@@ -246,5 +237,4 @@ class UnreachableCodeElimination implements CompilerPass {
       }
       NodeUtil.removeChild(n.getParent(), n);
     }
-  }
-}
+  }}
