diff --git a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
index 3b323395..eb171d0d 100644
--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -233,12 +218,24 @@ class UnreachableCodeElimination implements CompilerPass {
         // Instead, we should just ignore dead variable declarations.
         return;
       }
-
       removeNode(n);
     }
-
     private void removeNode(Node n) {
       codeChanged = true;
+      if (n.getType() == Token.VAR) {
+        for (Node var = n.getFirstChild(); var != null; var = var.getNext()) {
+          Node name = var.getFirstChild();
+          if (name.getNext() == null) {
+            NodeUtil.removeChild(n, var);
+            NodeUtil.redeclareVarsInsideBranch(n);
+            compiler.reportCodeChange();
+            if (logger.isLoggable(Level.FINE)) {
+              logger.fine("Removing " + n.toString());
+            }
+            return;
+          }
+        }
+      }
       NodeUtil.redeclareVarsInsideBranch(n);
       compiler.reportCodeChange();
       if (logger.isLoggable(Level.FINE)) {
@@ -246,5 +243,4 @@ class UnreachableCodeElimination implements CompilerPass {
       }
       NodeUtil.removeChild(n.getParent(), n);
     }
-  }
-}
+  }}
