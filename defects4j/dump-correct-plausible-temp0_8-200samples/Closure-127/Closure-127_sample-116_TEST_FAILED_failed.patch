diff --git a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
index 3b323395..749da4a4 100644
--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -136,14 +134,11 @@ class UnreachableCodeElimination implements CompilerPass {
        * if-else conversion but it handles more complicated switch statements
        * much more nicely.
        */
-
       // If n is null the target is the end of the function, nothing to do.
       if (n == null) {
-         return;
+        return;
       }
-
       DiGraphNode<Node, Branch> gNode = cfg.getDirectedGraphNode(n);
-
       if (gNode == null) {
         return;
       }
@@ -171,10 +164,9 @@ class UnreachableCodeElimination implements CompilerPass {
               removeNode(n);
             }
           }
+          return;
       }
     }
-
-
     private Node computeFollowing(Node n) {
       Node next = ControlFlowAnalysis.computeFollowNode(n);
       while (next != null && next.isBlock()) {
@@ -246,5 +230,4 @@ class UnreachableCodeElimination implements CompilerPass {
       }
       NodeUtil.removeChild(n.getParent(), n);
     }
-  }
-}
+  }}
