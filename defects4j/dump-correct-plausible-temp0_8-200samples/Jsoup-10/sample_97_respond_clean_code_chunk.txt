    public String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);
        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return ""; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                URL abs = new URL(base, relUrl);
                if (!abs.toExternalForm().equals(relUrl)) {
                    return abs.toExternalForm();
                }
                // if the URL is already absolute, we continue to resolve it as usual. This is because there are cases
                // where the base is unsuitable (i.e not actually base URI (for example a data: URI)), but the URL
                // is absolute, so we need to re-resolve.
                else {
                    return abs.toExternalForm();
                }
            } catch (MalformedURLException e) {
                return "";
            }
        }
    }