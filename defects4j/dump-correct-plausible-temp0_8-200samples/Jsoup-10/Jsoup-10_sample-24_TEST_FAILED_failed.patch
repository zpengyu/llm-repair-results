diff --git a/src/main/java/org/jsoup/nodes/Node.java b/src/main/java/org/jsoup/nodes/Node.java
index 0d0f9d4..4e39379 100644
--- a/src/main/java/org/jsoup/nodes/Node.java
+++ b/src/main/java/org/jsoup/nodes/Node.java
@@ -153,27 +153,30 @@ public abstract class Node implements Cloneable {
      * @see #attr
      * @see java.net.URL#URL(java.net.URL, String)
      */
-    public String absUrl(String attributeKey) {
+public String absUrl(String attributeKey) {
         Validate.notEmpty(attributeKey);
-
-        String relUrl = attr(attributeKey);
         if (!hasAttr(attributeKey)) {
             return ""; // nothing to make absolute with
         } else {
-            URL base;
-            try {
+            boolean isAbsolute = attr(attributeKey).startsWith("http://") || attr(attributeKey).startsWith("https://");
+            if (isAbsolute) {
+                return attr(attributeKey);
+            } else {
+                URL base;
                 try {
-                    base = new URL(baseUri);
-                } catch (MalformedURLException e) {
-                    // the base is unsuitable, but the attribute may be abs on its own, so try that
-                    URL abs = new URL(relUrl);
+                    try {
+                        base = new URL(baseUri);
+                    } catch (MalformedURLException e) {
+                        // the base is unsuitable, but the attribute may be abs on its own, so try that
+                        URL abs = new URL(attr(attributeKey));
+                        return abs.toExternalForm();
+                    }
+                    // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
+                    URL abs = new URL(base, attr(attributeKey));
                     return abs.toExternalForm();
+                } catch (MalformedURLException e) {
+                    return "";
                 }
-                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
-                URL abs = new URL(base, relUrl);
-                return abs.toExternalForm();
-            } catch (MalformedURLException e) {
-                return "";
             }
         }
     }
