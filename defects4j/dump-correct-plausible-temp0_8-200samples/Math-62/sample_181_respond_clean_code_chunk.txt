/**
 * Create a multi-start optimizer from a single-start optimizer.
 *
 * @param optimizer Single-start optimizer to wrap.
 * @param starts Number of starts to perform (including the
 * first one), multi-start is disabled if value is less than or
 * equal to 1.
 * @param generator Random generator to use for restarts.
 */
public MultiStartUnivariateRealOptimizer(final BaseUnivariateRealOptimizer<FUNC> optimizer,
                                         final int starts,
                                         final RandomGenerator generator) {
    this.optimizer = optimizer;
    this.starts = starts;
    this.generator = generator;
}