diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java
index 25e2b5d4..a19ce8bb 100644
--- a/src/com/google/javascript/jscomp/NameAnalyzer.java
+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java
@@ -869,17 +863,7 @@ final class NameAnalyzer implements CompilerPass {
                       ? referring.prototypeClass
                       : referring.name;
       }
-
       String name = nameInfo.name;
-
-      // A value whose result is the return value of a function call
-      // can be an alias to global object.
-      // Here we add a alias to the general "global" object
-      // to act as a placeholder for the actual (unnamed) value.
-      if (maybeHiddenAlias(name, n)) {
-        recordAlias(name, WINDOW);
-      }
-
       // An externally referenceable name must always be defined, so we add a
       // reference to it from the global scope (a.k.a. window).
       if (nameInfo.isExternallyReferenceable) {
