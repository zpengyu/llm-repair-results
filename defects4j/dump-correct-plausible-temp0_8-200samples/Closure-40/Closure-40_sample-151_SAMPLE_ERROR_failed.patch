diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java
index 25e2b5d4..e3e49158 100644
--- a/src/com/google/javascript/jscomp/NameAnalyzer.java
+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java
@@ -910,6 +899,16 @@ final class NameAnalyzer implements CompilerPass {
               RefType.INHERITANCE : RefType.REGULAR;
           recordReference(referringName, name, depType);
         }
+      } else if (parent.isGetProp()
+          && parent.getParent().isAssign()
+          && parent.getNext() == null
+          && !parent.getParent().getFirstChild().isGetProp()
+          && n.isThis()
+          && isPrototypePropertyDeclaration(parent)) {
+        NameInformation ref = getEnclosingClassOrPrototypeDependencyScope(t, n);
+        if (ref != null) {
+          recordReference(ref.name, name, RefType.REGULAR);
+        }
       } else {
         // No named dependency scope found.  Unfortunately that might
         // mean that the expression is a child of an function expression
