diff --git a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
index 9112fa85..b521b9c4 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
@@ -63,9 +59,14 @@ public class ArArchiveInputStream extends ArchiveInputStream {
         if (offset == 0) {
             final byte[] expected = ArArchiveEntry.HEADER.getBytes();
             final byte[] realized = new byte[expected.length]; 
-            final int read = read(realized);
-            if (read != expected.length) {
-                throw new IOException("failed to read header");
+            int read = 0;
+            for (int i = 0; i < expected.length; i++) {
+                final int r = read();
+                if (r == -1) {
+                    throw new IOException("failed to read header");
+                }
+                realized[i] = (byte) r;
+                read++;
             }
             for (int i = 0; i < expected.length; i++) {
                 if (expected[i] != realized[i]) {
@@ -100,9 +96,14 @@ public class ArArchiveInputStream extends ArchiveInputStream {
         {
             final byte[] expected = ArArchiveEntry.TRAILER.getBytes();
             final byte[] realized = new byte[expected.length]; 
-            final int read = read(realized);
-            if (read != expected.length) {
-                throw new IOException("failed to read entry header");
+            int read = 0;
+            for (int i = 0; i < expected.length; i++) {
+                final int r = read();
+                if (r == -1) {
+                    throw new IOException("failed to read entry header");
+                }
+                realized[i] = (byte) r;
+                read++;
             }
             for (int i = 0; i < expected.length; i++) {
                 if (expected[i] != realized[i]) {
@@ -110,13 +111,10 @@ public class ArArchiveInputStream extends ArchiveInputStream {
                 }
             }
         }
-
         return new ArArchiveEntry(new String(name).trim(),
-                                          Long.parseLong(new String(length)
-                                                         .trim()));
+                                    Long.parseLong(new String(length)
+                                                                 .trim()));
     }
-
-
     public ArchiveEntry getNextEntry() throws IOException {
         return getNextArEntry();
     }
