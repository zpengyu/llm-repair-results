diff --git a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
index f776072cc..19ce59769 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
@@ -164,34 +164,32 @@ public class ObjectMapper
          * and since actual serializers and deserializers will also ignore any
          * attempts to enforce typing.
          */
-        public boolean useForType(JavaType t)
-        {
-            switch (_appliesFor) {
-            case NON_CONCRETE_AND_ARRAYS:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // fall through
-            case OBJECT_AND_NON_CONCRETE:
+	public boolean useForType(JavaType t)
+	{
+		switch (_appliesFor) {
+		case NON_CONCRETE_AND_ARRAYS:
+			while (t.isArrayType()) {
+				t = t.getContentType();
+			}
+			// fall through
+		case OBJECT_AND_NON_CONCRETE:
 //                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
-            case NON_FINAL:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
+			return (t.getRawClass() == Object.class)
+					|| (!t.isConcrete()
+							// [databind#88] Should not apply to JSON tree models:
+							&& !TreeNode.class.isAssignableFrom(t.getRawClass()));
+		case NON_FINAL:
+			while (t.isArrayType()) {
+				t = t.getContentType();
+			}
+			// [Issue#88] Should not apply to JSON tree models:
+			return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+		default:
+//			case JAVA_LANG_OBJECT:
 //                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
-            }
-        }
-    }
+			return (t.getRawClass() == Object.class);
+		}
+	}    }
 
     /*
     /**********************************************************
