        public boolean useForType(JavaType t)
        {
            switch (_appliesFor) {
            case NON_CONCRETE_AND_ARRAYS:
                while (t.isArrayType()) {
                    t = t.getContentType();
                }
                // fall through
            case OBJECT_AND_NON_CONCRETE:
//                return t.isJavaLangObject() || 
                return (t.getRawClass() == Object.class)
                        || (!t.isConcrete()
                                // [databind#88] Should not apply to JSON tree models:
                        || TreeNode.class.isAssignableFrom(t.getRawClass()));

            case NON_FINAL:
                while (t.isArrayType()) {
                    t = t.getContentType();
                }
                // [Issue#88] Should not apply to JSON tree models:
                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass()) && !t.isEnumType();
            default:
            //case JAVA_LANG_OBJECT:
//                return t.isJavaLangObject();
                return (t.getRawClass() == Object.class);
            }
        }
## 2.1.3. Representations of Program Entities

* ...

## 2.1.4. The GZoltar Bug Fixing Tool

* ...
