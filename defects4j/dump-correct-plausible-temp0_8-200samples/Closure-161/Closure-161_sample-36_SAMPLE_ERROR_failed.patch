diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 42875ffc..ccdd319d 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -1280,7 +1280,19 @@ class PeepholeFoldConstants extends AbstractPeepholeOptimization {
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
-
+    if (parent.isAssign()) {
+      Node grandparent = parent.getParent();
+      if (grandparent != null &&
+          grandparent.isExpression() &&
+          (grandparent.getParent().isCall() ||
+           grandparent.getParent().isNew())) {
+        // An assignment to a result of a call or new expression is legal,
+        // but has no effect.
+        n.getParent().detachFromParent();
+        reportCodeChange();
+        return null;
+      }
+    }
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
