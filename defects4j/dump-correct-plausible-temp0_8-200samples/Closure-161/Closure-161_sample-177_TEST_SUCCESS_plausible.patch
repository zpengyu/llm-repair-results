diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 42875ffc..d04b0ec8 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -1280,7 +1280,22 @@ class PeepholeFoldConstants extends AbstractPeepholeOptimization {
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
-
+    if (parent != null
+        && (parent.getType() == Token.ASSIGN
+            || parent.getType() == Token.ASSIGN_BITOR
+            || parent.getType() == Token.ASSIGN_BITXOR
+            || parent.getType() == Token.ASSIGN_BITAND
+            || parent.getType() == Token.ASSIGN_LSH
+            || parent.getType() == Token.ASSIGN_RSH
+            || parent.getType() == Token.ASSIGN_URSH
+            || parent.getType() == Token.ASSIGN_ADD
+            || parent.getType() == Token.ASSIGN_SUB
+            || parent.getType() == Token.ASSIGN_MUL
+            || parent.getType() == Token.ASSIGN_DIV
+            || parent.getType() == Token.ASSIGN_MOD)
+        && parent.getFirstChild() == n) {
+      return n;
+    }
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
