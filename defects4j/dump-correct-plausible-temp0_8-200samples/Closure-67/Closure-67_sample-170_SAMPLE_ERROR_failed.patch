diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
index 17ab404c..220905de 100644
--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
@@ -312,17 +312,12 @@ class AnalyzePrototypeProperties implements CompilerPass {
     }
 
     private boolean isPrototypePropertyAssign(Node assign) {
-      Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      Node lhs = NodeUtil.getAssignmentLhs(assign);
+      if (lhs != null && NodeUtil.isGet(lhs)) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
+        boolean isChainedProperty = NodeUtil.isGet(lhs.getFirstChild());
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
+          Node child = lhs.getFirstChild().getFirstChild().getNext();
           if (child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
