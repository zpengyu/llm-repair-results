    private boolean isPrototypePropertyAssign(Node assign) {
      Node n = assign.getFirstChild();
      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
          && n.getType() == Token.GETPROP
          ) {
        // We want to exclude the assignment itself from the usage list
        boolean isChainedProperty =
            n.getFirstChild().getType() == Token.GETPROP;
        if (isChainedProperty) {
          Node child = n.getFirstChild().getFirstChild();
          if (child.getType() == Token.STRING &&
              child.getString().equals("prototype")) {
            return true;
          }
        }
      }
      return false;
    }
* Fork the repository.
* Clone the repository.
* To add or update a new bug, create a new markdown file or update the existing one.
* Push your changes and create a pull request.