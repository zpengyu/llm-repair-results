diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
index 17ab404c..3150caa5 100644
--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
@@ -312,27 +312,13 @@ class AnalyzePrototypeProperties implements CompilerPass {
     }
 
     private boolean isPrototypePropertyAssign(Node assign) {
-      Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
-            return true;
-          }
-        }
-      }
-
-      return false;
+      Node lhs = assign.getFirstChild();
+      return lhs != null && NodeUtil.isVarOrSimpleAssignLhs(lhs, assign)
+          && lhs.getType() == Token.GETPROP
+          && lhs.getFirstChild().getType() == Token.GETPROP
+          && lhs.getFirstChild().getFirstChild().getNext().getType() == Token.STRING
+          && lhs.getFirstChild().getFirstChild().getNext().getString().equals("prototype");
     }
-
     /**
      * Processes a NAME node to see if it's a global function declaration.
      * If it is, record it and return true. Otherwise, return false.
