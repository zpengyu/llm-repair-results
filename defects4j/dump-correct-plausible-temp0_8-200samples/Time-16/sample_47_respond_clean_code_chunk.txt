    public int parseInto(ReadWritableInstant instant, String text, int position) {
        DateTimeParser parser = requireParser();
        if (instant == null) {
            throw new IllegalArgumentException("Instant must not be null");
        }
        long instantMillis = instant.getMillis();
        Chronology chrono = instant.getChronology();
        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
        chrono = selectChronology(chrono);
        DateTimeParserBucket bucket = new DateTimeParserBucket(
            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);
        int newPos = parser.parseInto(bucket, text, position);
        if (bucket.getZone() != null) {
            chrono = chrono.withZone(bucket.getZone());
        }
        // bug [2566217] patch by Chris Povirk
        if (bucket.getOffsetInteger() != null) {
            if (instant.isSupported(DurationFieldType.millis())) {
                instant.add(bucket.getOffsetInteger());
            }
            // Update chronology with offset.
            chrono = chrono.withZone(DateTimeZone.forOffsetMillis(bucket.getOffsetInteger()));
        }
        instant.setChronology(chrono);
        if (iZone != null) {
            instant.setZone(iZone);
        }
        return newPos;
    }