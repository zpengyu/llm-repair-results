diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
index 7b8c69af7..825bf9dce 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
@@ -7,12 +7,10 @@ import com.fasterxml.jackson.databind.JavaType;
  *
  * @since 2.7
  */
-public class ResolvedRecursiveType extends TypeBase
+class ResolvedRecursiveType extends TypeBase
 {
     private static final long serialVersionUID = 1L;
-
     protected JavaType _referencedType;
-
     public ResolvedRecursiveType(Class<?> erasedType, TypeBindings bindings) {
         super(erasedType, bindings, null, null, 0, null, null, false);
     }
@@ -104,11 +86,9 @@ public class ResolvedRecursiveType extends TypeBase
     public boolean equals(Object o) {
         if (o == this) return true;
         if (o == null) return false;
-        // Do NOT ever match unresolved references
-        if (_referencedType == null) {
-            return false;
-        }
-        return (o.getClass() == getClass()
-                && _referencedType.equals(((ResolvedRecursiveType) o).getSelfReferencedType()));
+        if (o.getClass() != getClass()) return false;
+        ResolvedRecursiveType other = (ResolvedRecursiveType) o;
+        // Important: match even UNRESOLVED references (unlike `hashCode`)
+        return other._referencedType == _referencedType;
     }
 }
\ No newline at end of file
