diff --git a/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java b/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
index 70c30e14..7ebe157a 100644
--- a/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
+++ b/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
@@ -95,7 +95,7 @@ final class DefaultDateTypeAdapter extends TypeAdapter<Date> {
   }
 
   @Override
-  public Date read(JsonReader in) throws IOException {
+    public Date read(JsonReader in) throws IOException {
     if (in.peek() != JsonToken.STRING) {
       throw new JsonParseException("The date should be a string value");
     }
@@ -106,6 +106,11 @@ final class DefaultDateTypeAdapter extends TypeAdapter<Date> {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
+    } else if (dateType == Calendar.class) {
+      // We can't set the time zone on the installed Calendar, so we'll create a new one
+      Calendar calendar = Calendar.getInstance();
+      calendar.setTime(date);
+      return calendar;
     } else {
       // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
