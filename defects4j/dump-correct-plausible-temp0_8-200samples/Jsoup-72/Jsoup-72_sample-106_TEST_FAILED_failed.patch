diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index c5d91e0..677546c 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -420,7 +420,7 @@ public final class CharacterReader {
      * That saves both having to create objects as hash keys, and running through the entry list, at the expense of
      * some more duplicates.
      */
-    private static String cacheString(final char[] charBuf, final String[] stringCache, final int start, final int count) {
+	private static String cacheString(final char[] charBuf, final String[] stringCache, final int start, final int count) {
         // limit (no cache):
         if (count > maxStringCacheLen)
             return new String(charBuf, start, count);
@@ -443,6 +440,7 @@ public final class CharacterReader {
             if (rangeEquals(charBuf, start, count, cached)) { // hit
                 return cached;
             } else { // hashcode conflict
+                if(!cached.substring(start, start + count).equals(new String(charBuf, start, count)))
                 cached = new String(charBuf, start, count);
                 stringCache[index] = cached; // update the cache, as recently used strings are more likely to show up again
             }
