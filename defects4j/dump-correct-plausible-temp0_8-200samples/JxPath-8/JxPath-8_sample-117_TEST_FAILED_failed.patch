diff --git a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java
index 2a40620..5a5b195 100644
--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java
+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java
@@ -64,19 +63,18 @@ public abstract class CoreOperationRelationalExpression extends CoreOperation {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
-            return findMatch((Iterator) left, (Iterator) right);
+            return !findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
-            return containsMatch((Iterator) left, right);
+            return !containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
-            return containsMatch((Iterator) right, left);
+            return !containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
-        return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
+        return !evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }
-
     private Object reduce(Object o) {
         if (o instanceof SelfContext) {
             o = ((EvalContext) o).getSingleNodePointer();
