diff --git a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java
index e36b2881..871ff26d 100644
--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java
@@ -637,17 +637,19 @@ public class SevenZOutputFile {
         for (int i = 0; i < length; i++) {
             cache |= ((bits.get(i) ? 1 : 0) << shift);
             --shift;
-            if (shift == 0) {
+            if (shift == -1) {
                 header.write(cache);
                 shift = 7;
                 cache = 0;
             }
         }
-        if (length > 0 && shift > 0) {
+        if (length > 0 && shift < 7) {
             header.write(cache);
         }
     }
-
+Unit testing is the cornerstone of extreme programming and is also adopted by other Agile software development methodologies. Unit testing is a method by which individual units of source code are tested to determine if they are fit for use.
+Unit tests are created by programmers or occasionally by white box testers during the development process. Each test case is independent from the others. Replacing a unit with a mock implementation that responds with predefined results, isolates the test cases from external dependencies.
+- Ref: Wikipedia
     private class OutputStreamWrapper extends OutputStream {
         @Override
         public void write(final int b) throws IOException {
