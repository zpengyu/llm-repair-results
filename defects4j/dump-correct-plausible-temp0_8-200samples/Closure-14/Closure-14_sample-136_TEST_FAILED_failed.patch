diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 0f5c5421..416f6574 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -735,7 +734,6 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
         } else {
           return computeFollowNode(fromNode, parent, cfa);
         }
-        break;
       case Token.FOR:
         if (NodeUtil.isForIn(parent)) {
           return parent;
@@ -754,14 +752,14 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
             return computeFollowNode(fromNode, parent, cfa);
           }
         // CATCH block.
-        } else if (NodeUtil.getCatchBlock(parent) == node){
+        } else if (NodeUtil.getCatchBlock(parent) == node) {
           if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.
             return computeFallThrough(node.getNext());
           } else {
             return computeFollowNode(fromNode, parent, cfa);
           }
         // If we are coming out of the FINALLY block...
-        } else if (parent.getLastChild() == node){
+        } else if (parent.getLastChild() == node) {
           if (cfa != null) {
             for (Node finallyNode : cfa.finallyMap.get(parent)) {
               cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);
