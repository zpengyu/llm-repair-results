diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 0f5c5421..0c6abb10 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -787,7 +783,20 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
       return computeFollowNode(fromNode, parent, cfa);
     }
   }
-
+  /**
+   * Finds the first child node of the given node and returns it's fall through
+   * node.
+   *
+   * @param n
+   */
+  private static Node computeFallThrough(Node n) {
+    Node firstChild = NodeUtil.getFirstChild(n);
+    if (firstChild != null) {
+      return firstChild;
+    } else {
+      return computeFollowNode(n, n, null);
+    }
+  }
   /**
    * Computes the destination node of n when we want to fallthrough into the
    * subtree of n. We don't always create a CFG edge into n itself because of
