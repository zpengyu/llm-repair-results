diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index cfa8f73c..92dffe2a 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -48,12 +48,15 @@ public class TarUtils {
      * @return The long value of the octal string.
      * @throws IllegalArgumentException if the trailing space/NUL is missing or if a invalid byte is detected.
      */
-    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
+public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
         boolean stillPadding = true;
         int     end = offset + length;
         int     start = offset;
-
+        if (length < 1) {
+            throw new IllegalArgumentException(
+                    "Length must be greater than 0: " + length);
+        }
         for (int i = start; i < end; i++){
             final byte currentByte = buffer[i];
             if (currentByte == 0) {
@@ -63,16 +65,14 @@ public class TarUtils {
         // Skip leading spaces
             if (currentByte == (byte) ' ' || currentByte == '0') {
                 if (stillPadding) {
-                   continue;
+                    if (currentByte == (byte) ' ') {
+                        break;
+                    }
+                    continue;
             }
-                if (currentByte == (byte) ' ') {
-                break;
-                }
             }
-
         // Must have trailing NUL or space
         // May have additional NUL or space
-
             stillPadding = false;
             // CheckStyle:MagicNumber OFF
             if (currentByte < '0' || currentByte > '7'){
