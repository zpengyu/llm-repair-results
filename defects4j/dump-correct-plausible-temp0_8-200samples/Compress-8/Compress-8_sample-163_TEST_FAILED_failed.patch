diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index cfa8f73c..0d213cc2 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -50,42 +50,32 @@ public class TarUtils {
      */
     public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
-        boolean stillPadding = true;
         int     end = offset + length;
         int     start = offset;
-
-        for (int i = start; i < end; i++){
-            final byte currentByte = buffer[i];
-            if (currentByte == 0) {
-                break;
-            }
-
-        // Skip leading spaces
-            if (currentByte == (byte) ' ' || currentByte == '0') {
-                if (stillPadding) {
-                   continue;
-            }
-                if (currentByte == (byte) ' ') {
-                break;
-                }
+        if (length < 0) {
+            throw new NumberFormatException("Length " + length + " is less than zero");
+        }
+        if (start < 0 || start >= buffer.length) {
+            throw new NumberFormatException("Offset " + offset + " is out of range 0 to " + (buffer.length - 1));
+        }
+        for (int i = start; i < end; i++) {
+            if (i >= buffer.length) {
+                throw new NumberFormatException("Offset " + i + " is out of range 0 to " + (buffer.length - 1));
             }
-
-        // Must have trailing NUL or space
-        // May have additional NUL or space
-
-            stillPadding = false;
+            final byte currentByte = buffer[i];
             // CheckStyle:MagicNumber OFF
-            if (currentByte < '0' || currentByte > '7'){
-                throw new IllegalArgumentException(
+            if (currentByte < '0' || currentByte > '7') {
+                if (currentByte == 0) {
+                    return result;
+                }
+                throw new NumberFormatException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
             // CheckStyle:MagicNumber ON
+            result = (result << 3) + (currentByte - '0'); // convert from ASCII
         }
-
         return result;
     }
-
     // Helper method to generate the exception message
     private static String exceptionMessage(byte[] buffer, final int offset,
             final int length, int current, final byte currentByte) {
