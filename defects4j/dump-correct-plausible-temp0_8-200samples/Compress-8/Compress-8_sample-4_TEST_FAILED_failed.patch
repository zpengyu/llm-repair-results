diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index cfa8f73c..10a2e147 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -49,33 +49,30 @@ public class TarUtils {
      * @throws IllegalArgumentException if the trailing space/NUL is missing or if a invalid byte is detected.
      */
     public static long parseOctal(final byte[] buffer, final int offset, final int length) {
-        long    result = 0;
+        long result = 0;
         boolean stillPadding = true;
-        int     end = offset + length;
-        int     start = offset;
-
-        for (int i = start; i < end; i++){
+        int end = offset + length;
+        int start = offset;
+        if (length < 1) {
+            throw new IllegalArgumentException("Length must be greater than 0");
+        }
+        for (int i = start; i < end; i++) {
             final byte currentByte = buffer[i];
             if (currentByte == 0) {
                 break;
             }
-
-        // Skip leading spaces
+            // Skip leading spaces
             if (currentByte == (byte) ' ' || currentByte == '0') {
                 if (stillPadding) {
-                   continue;
-            }
+                    continue;
+                }
                 if (currentByte == (byte) ' ') {
-                break;
+                    break;
                 }
             }
-
-        // Must have trailing NUL or space
-        // May have additional NUL or space
-
             stillPadding = false;
             // CheckStyle:MagicNumber OFF
-            if (currentByte < '0' || currentByte > '7'){
+            if (currentByte < '0' || currentByte > '7') {
                 throw new IllegalArgumentException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
