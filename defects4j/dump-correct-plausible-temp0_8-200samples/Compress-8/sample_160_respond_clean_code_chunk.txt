    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
        long    result = 0;
        int     end = offset + length;
        int     start = offset;
        if (length == 0) {
            return 0;
        }
        byte currentByte;
        // Skip leading spaces
        while (start < end) {
            currentByte = buffer[start];
            if (currentByte != (byte) ' ' && currentByte != '0') {
                break;
            }
            start++;
        }
        for (int i = start; i < end; i++){
            currentByte = buffer[i];
            if (currentByte == 0) {
                break;
            }
            // Must have trailing NUL or space
            // May have additional NUL or space
            // CheckStyle:MagicNumber OFF
            if (currentByte < '0' || currentByte > '7'){
                throw new IllegalArgumentException(
                        exceptionMessage(buffer, offset, length, start, currentByte));
            }
            result = (result << 3) + (currentByte - '0'); // convert from ASCII
            // CheckStyle:MagicNumber ON
        }
        return result;
    }