diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java
index 75a54ad5..18fa8bd6 100644
--- a/src/com/google/javascript/jscomp/TypeCheck.java
+++ b/src/com/google/javascript/jscomp/TypeCheck.java
@@ -1655,21 +1655,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
    */
   private void visitNew(NodeTraversal t, Node n) {
     Node constructor = n.getFirstChild();
-    JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
-    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
-      FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
-        visitParameterList(t, n, fnType);
-        ensureTyped(t, n, fnType.getInstanceType());
-      } else {
-        ensureTyped(t, n);
-      }
-    } else {
+    JSType type = getJSType(constructor);
+    if (!type.isConstructor() && !type.isEmptyType() && !type.isUnknownType()) {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);
+      return;
+    }
+    type = type.restrictByNotNullOrUndefined();
+    FunctionType fnType = type.toMaybeFunctionType();
+    if (fnType != null) {
+      visitParameterList(t, n, fnType);
+      ensureTyped(t, n, fnType.getInstanceType());
+    } else {
+      ensureTyped(t, n);
     }
   }
-
   /**
    * Check whether there's any property conflict for for a particular super
    * interface
