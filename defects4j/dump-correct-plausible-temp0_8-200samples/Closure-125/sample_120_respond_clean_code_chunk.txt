  private void visitNew(NodeTraversal t, Node n) {
    Node constructor = n.getFirstChild();
    JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
      FunctionType fnType = type.toMaybeFunctionType();
      if (fnType != null) {
        visitParameterList(t, n, fnType);
        ObjectType objType = fnType.getInstanceType();
        if (objType.isUnknownType() && fnType.isConstructor()) {
          // constructor functions that are called but not constructed
          // should not be defaulted to an unknown type.
          objType = fnType.getPrototype().getImplicitPrototype();
        }
        ensureTyped(t, n, objType);
      } else {
        ensureTyped(t, n);
      }
    } else {
      report(t, n, NOT_A_CONSTRUCTOR);
      ensureTyped(t, n);
    }
  }