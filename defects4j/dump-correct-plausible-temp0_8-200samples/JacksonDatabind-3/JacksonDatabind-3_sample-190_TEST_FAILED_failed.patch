diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
index f8cb03e1c..42096898f 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
@@ -123,9 +110,10 @@ public final class StringArrayDeserializer
             }
             throw ctxt.mappingException(_valueClass);
         }
-        return new String[] { (jp.getCurrentToken() == JsonToken.VALUE_NULL) ? null : _parseString(jp, ctxt) };
+        String[] result = new String[1];
+        result[0] = (jp.getCurrentToken() == JsonToken.VALUE_NULL) ? null : _parseString(jp, ctxt);
+        return result;
     }
-
     /**
      * Contextualization is needed to see whether we can "inline" deserialization
      * of String values, or if we have to use separate value deserializer.
