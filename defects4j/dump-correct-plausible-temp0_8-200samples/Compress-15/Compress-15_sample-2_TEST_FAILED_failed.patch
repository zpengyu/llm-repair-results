diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
index 6e20d4e4..6df56d69 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
@@ -646,44 +646,43 @@ public class ZipArchiveEntry extends java.util.zip.ZipEntry
      * @see java.lang.Object#equals(java.lang.Object)
      */
     @Override
-    public boolean equals(Object obj) {
-        if (this == obj) {
-            return true;
-        }
-        if (obj == null || getClass() != obj.getClass()) {
-            return false;
-        }
-        ZipArchiveEntry other = (ZipArchiveEntry) obj;
-        String myName = getName();
-        String otherName = other.getName();
-        if (myName == null) {
-            if (otherName != null) {
-                return false;
-            }
-        } else if (!myName.equals(otherName)) {
+public boolean equals(Object obj) {
+    if (this == obj) {
+        return true;
+    }
+    if (obj == null || getClass() != obj.getClass()) {
+        return false;
+    }
+    ZipArchiveEntry other = (ZipArchiveEntry) obj;
+    String myName = getName();
+    String otherName = other.getName();
+    if (myName == null) {
+        if (otherName != null) {
             return false;
         }
-        String myComment = getComment();
-        String otherComment = other.getComment();
-        if (myComment == null) {
-            if (otherComment != null) {
-                return false;
-            }
-        } else if (!myComment.equals(otherComment)) {
+    } else if (!myName.equals(otherName)) {
+        return false;
+    }
+    String myComment = getComment();
+    String otherComment = other.getComment();
+    if (myComment == null) {
+        if (otherComment != null) {
             return false;
         }
-        return getTime() == other.getTime()
-            && getInternalAttributes() == other.getInternalAttributes()
-            && getPlatform() == other.getPlatform()
-            && getExternalAttributes() == other.getExternalAttributes()
-            && getMethod() == other.getMethod()
-            && getSize() == other.getSize()
-            && getCrc() == other.getCrc()
-            && getCompressedSize() == other.getCompressedSize()
-            && Arrays.equals(getCentralDirectoryExtra(),
-                             other.getCentralDirectoryExtra())
-            && Arrays.equals(getLocalFileDataExtra(),
-                             other.getLocalFileDataExtra())
-            && gpb.equals(other.gpb);
-    }
-}
+    } else if (!myComment.equals(otherComment)) {
+        return false;
+    }
+    return getTime() == other.getTime()
+        && getInternalAttributes() == other.getInternalAttributes()
+        && getPlatform() == other.getPlatform()
+        && getExternalAttributes() == other.getExternalAttributes()
+        && getMethod() == other.getMethod()
+        && getSize() == other.getSize()
+        && getCrc() == other.getCrc()
+        && getCompressedSize() == other.getCompressedSize()
+        && Arrays.equals(getCentralDirectoryExtra(),
+                         other.getCentralDirectoryExtra())
+        && Arrays.equals(getLocalFileDataExtra(),
+                         other.getLocalFileDataExtra())
+        && gpb.equals(other.gpb);
+}}
