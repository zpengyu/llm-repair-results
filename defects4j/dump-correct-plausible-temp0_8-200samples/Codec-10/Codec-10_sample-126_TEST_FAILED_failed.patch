diff --git a/src/java/org/apache/commons/codec/language/Caverphone.java b/src/java/org/apache/commons/codec/language/Caverphone.java
index 7b844167..16c02c41 100644
--- a/src/java/org/apache/commons/codec/language/Caverphone.java
+++ b/src/java/org/apache/commons/codec/language/Caverphone.java
@@ -71,10 +66,8 @@ public class Caverphone implements StringEncoder {
         txt = txt.replaceAll("^enough", "enou2f");  // 2.0 only
         txt = txt.replaceAll("^trough", "trou2f");  // 2.0 only - note the spec says ^enough here again, c+p error I assume
         txt = txt.replaceAll("^gn", "2n");
-
         // End 
-        txt = txt.replaceAll("^mb", "m2");
-
+        txt = txt.replaceAll("mb$", "m2");
         // 4. Handle replacements
         txt = txt.replaceAll("cq", "2q");
         txt = txt.replaceAll("ci", "si");
@@ -110,33 +103,30 @@ public class Caverphone implements StringEncoder {
         txt = txt.replaceAll("m+", "M");
         txt = txt.replaceAll("n+", "N");
         txt = txt.replaceAll("w3", "W3");
-        //txt = txt.replaceAll("wy", "Wy");    // 1.0 only
+        txt = txt.replaceAll("wy$", "Wy");    // 1.0 only
         txt = txt.replaceAll("wh3", "Wh3");
-        txt = txt.replaceAll("w$", "3");       // 2.0 only
-        //txt = txt.replaceAll("why", "Why");  // 1.0 only
+        //txt = txt.replaceAll("w$", "3");       // 2.0 only
+        txt = txt.replaceAll("why$", "Why");  // 1.0 only
         txt = txt.replaceAll("w", "2");
         txt = txt.replaceAll("^h", "A");
         txt = txt.replaceAll("h", "2");
         txt = txt.replaceAll("r3", "R3");
-        txt = txt.replaceAll("r$", "3");       // 2.0 only
-        //txt = txt.replaceAll("ry", "Ry");    // 1.0 only
+        //txt = txt.replaceAll("r$", "3");       // 2.0 only
+        txt = txt.replaceAll("ry$", "Ry");    // 1.0 only
         txt = txt.replaceAll("r", "2");
         txt = txt.replaceAll("l3", "L3");
-        txt = txt.replaceAll("l$", "3");       // 2.0 only
-        //txt = txt.replaceAll("ly", "Ly");    // 1.0 only
+        //txt = txt.replaceAll("l$", "3");       // 2.0 only
+        txt = txt.replaceAll("ly$", "Ly");    // 1.0 only
         txt = txt.replaceAll("l", "2");
-        //txt = txt.replaceAll("j", "y");      // 1.0 only
-        //txt = txt.replaceAll("y3", "Y3");    // 1.0 only
-        //txt = txt.replaceAll("y", "2");      // 1.0 only
-
+        txt = txt.replaceAll("j", "y");      // 1.0 only
+        txt = txt.replaceAll("y3", "Y3");    // 1.0 only
+        txt = txt.replaceAll("y", "2");      // 1.0 only
         // 5. Handle removals
         txt = txt.replaceAll("2", "");
-        txt = txt.replaceAll("3$", "A");       // 2.0 only
+        //txt = txt.replaceAll("3$", "A");       // 2.0 only
         txt = txt.replaceAll("3", "");
-
         // 6. put ten 1s on the end
         txt = txt + "111111" + "1111";        // 1.0 only has 6 1s
-
         // 7. take the first six characters as the code
         return txt.substring(0, 10);          // 1.0 truncates to 6
     }
