diff --git a/src/main/java/org/apache/commons/csv/Lexer.java b/src/main/java/org/apache/commons/csv/Lexer.java
index c161334..b5dd752 100644
--- a/src/main/java/org/apache/commons/csv/Lexer.java
+++ b/src/main/java/org/apache/commons/csv/Lexer.java
@@ -89,15 +89,28 @@ abstract class Lexer {
         final int c = in.read();
         switch (c) {
         case 'r':
-            return CR;
+            return '\r';
         case 'n':
-            return LF;
+            return '\n';
         case 't':
-            return TAB;
+            return '\t';
         case 'b':
-            return BACKSPACE;
+            return '\b';
         case 'f':
-            return FF;
+            return '\f';
+        case '\\':
+            return '\\';
+        case '\'':
+            return '\'';
+        case '\"':
+            return '\"';
+        case 'u':
+        case 'U':
+            StringBuilder sb = new StringBuilder();
+            for (int i = 0; i < 4; i++) {
+                sb.append(in.read());
+            }
+            return Integer.parseInt(sb.toString(), 16);
         case CR:
         case LF:
         case FF: // TODO is this correct?
@@ -108,11 +121,14 @@ abstract class Lexer {
             throw new IOException("EOF whilst processing escape sequence");
         default:
             // Now check for meta-characters
-                return c;
-            // indicate unexpected char - available from in.getLastChar()
+            if (!Character.isWhitespace(c)) {
+                in.unread(c);
+                // indicate unexpected char - available from in.getLastChar()
+                return LAST_CHAR_NOT_PART_OF_TOKEN;
+            }
+            return c;
         }
     }
-
     void trimTrailingSpaces(final StringBuilder buffer) {
         int length = buffer.length();
         while (length > 0 && Character.isWhitespace(buffer.charAt(length - 1))) {
