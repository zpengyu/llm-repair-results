diff --git a/src/main/java/org/apache/commons/csv/Lexer.java b/src/main/java/org/apache/commons/csv/Lexer.java
index c161334..e802ebe 100644
--- a/src/main/java/org/apache/commons/csv/Lexer.java
+++ b/src/main/java/org/apache/commons/csv/Lexer.java
@@ -108,11 +108,37 @@ abstract class Lexer {
             throw new IOException("EOF whilst processing escape sequence");
         default:
             // Now check for meta-characters
-                return c;
-            // indicate unexpected char - available from in.getLastChar()
+            if (c == 'u') {
+                // we've found a unicode character, so grab the next 4 digits
+                // and convert to an int
+                int i = 0;
+                for (int j = 0; j < 4; ++j) {
+                    final int d = in.read();
+                    if (d < '0' || d > '9') {
+                        throw new IOException("Invalid unicode escape sequence");
+                    }
+                    i = i * 16 + (d - '0');
+                }
+                return i;
+            } else {
+                // handle octal escapes
+                final int n = nextNonDigit(c);
+                if (n == c) {
+                    return c;
+                } else {
+                    int i = (n - '0');
+                    while (true) {
+                        final int d = in.read();
+                        if (d < '0' || d > '7') {
+                            break;
+                        }
+                        i = (i * 8) + (d - '0');
+                    }
+                    return i;
+                }
+            }
         }
     }
-
     void trimTrailingSpaces(final StringBuilder buffer) {
         int length = buffer.length();
         while (length > 0 && Character.isWhitespace(buffer.charAt(length - 1))) {
