diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..a5a3e33 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -80,23 +80,18 @@ class CharacterReader {
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
+        int start = pos;
+        while (true) {
+            int offset = indexIn(input, seq.toString(), start); // find the sequence
+            if (offset == -1)                              // if it's not there
+                return -1;
+            int offsetInToken = offset - pos;              // check if it's in the current token
+            if (offsetInToken >= 0 && offsetInToken < length()) {
+                return offsetInToken;
             }
+            start = offset+1;
         }
-        return -1;
     }
-
     String consumeTo(char c) {
         int offset = nextIndexOf(c);
         if (offset != -1) {
