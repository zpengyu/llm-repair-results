diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..e478be4 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -82,16 +82,25 @@ class CharacterReader {
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
+        boolean isTwoCharSeq = (seq.length() == 2);
+        char endChar = (isTwoCharSeq) ? seq.charAt(1) : ' '; // arbitrary char, just to stop compiler complaining about unitialised var
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
-            int last = i + seq.length()-1;
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
+                if (isTwoCharSeq) {
+                    if (i < length && endChar == input[i])
+                        return offset - pos;
+                } else {
+                    int last = i + seq.length()-1;
+                    if (last < length) {
+                        for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                        if (i == last) // found full sequence
+                            return offset - pos;
+                    }
+                }
             }
         }
         return -1;
