diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..30f6bed 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -80,19 +80,25 @@ class CharacterReader {
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+        char endChar = seq.charAt(seq.length()-1);
+        int offset = pos;
+        OUTER: while(offset < length) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
+            while(offset < length && startChar != input[offset]) offset++;
+            if (offset >= length) break;
+            int i = offset+1;
+            int last = i + seq.length()-2;
+            if (last <= length) {
+                // only scan to last-1 as we already know last matches. Scan starts at i
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                if (i == last && endChar == input[last]) // found full sequence
                     return offset - pos;
+                offset = i;
+            } else {
+                break OUTER;
             }
+            offset++;
         }
         return -1;
     }
