diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..a5cf5a5 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -80,16 +80,23 @@ class CharacterReader {
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+        int startChar = Character.codePointAt(seq, 0);
+        int length = seq.length();
+        for (int offset = pos; offset < this.length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            if (startChar != Character.codePointAt(input, offset)) {
+                while (offset < this.length && startChar != Character.codePointAt(input, offset)) {
+                    offset++;
+                }
+            }
+            if (offset + length > this.length) {
+                return -1;
+            }
             int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+            int last = i + length-1;
+            if (offset < this.length) {
+                for (int j = 1; i < last && Character.codePointAt(seq, j) == Character.codePointAt(input, i); i++, j++) {
+                }
                 if (i == last) // found full sequence
                     return offset - pos;
             }
