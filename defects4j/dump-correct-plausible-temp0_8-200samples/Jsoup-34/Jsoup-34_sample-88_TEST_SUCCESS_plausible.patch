diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index bcda218..3b1bbee 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -81,22 +81,29 @@ class CharacterReader {
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        if (seq.length() == 1) {
+            char startChar = seq.charAt(0);
+            for (int offset = pos; offset < length; offset++) {
+                if (startChar == input[offset])
                     return offset - pos;
             }
+            return -1;
+        } else {
+            for (int offset = pos; offset < length; offset++) {
+                // scan to first instance of startchar:
+                if (input[offset] == seq.charAt(0)) {
+                    int i = 1;
+                    while (++offset < length && i < seq.length() && input[offset] == seq.charAt(i)) {
+                        i++;
+                    }
+                    if (i == seq.length()) // found full sequence
+                        return offset - i - pos;
+                    offset -= i; // rewind offset
+                }
+            }
+            return -1;
         }
-        return -1;
     }
-
     String consumeTo(char c) {
         int offset = nextIndexOf(c);
         if (offset != -1) {
