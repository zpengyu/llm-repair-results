diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
index a6bf55c7..8708edac 100644
--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
@@ -798,9 +798,23 @@ public class PeriodFormatterBuilder {
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+            if (sep.iAfterParser == null && sep.iAfterPrinter == null) {
+                if (sep.iBeforeParser == null && sep.iBeforePrinter == null) {
+                    PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+                    sep = sep.finish(f.getPrinter(), f.getParser());
+                    return new PeriodFormatter(sep, sep);
+                }
+                if (sep.iBeforeParser == null) {
+                    PeriodFormatter f = toFormatter(elementPairs.subList(2, size), false, notParser);
+                    sep = sep.finish(null, f.getParser());
+                    return new PeriodFormatter(new Composite(sep, f.getPrinter()), sep);
+                }
+                if (sep.iBeforePrinter == null) {
+                    PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, false);
+                    sep = sep.finish(f.getPrinter(), null);
+                    return new PeriodFormatter(sep, new Composite(sep, f.getParser()));
+                }
+            }
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
