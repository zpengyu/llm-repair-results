public static long safeMultiply(long val1, int val2) {
    long j;
    if (val1 == 0 || val2 == 0) {
        return 0;
    }
    if (val2 == -1) {
        if (val1 == Long.MIN_VALUE) {
            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
        }
        return -val1;
    }
    if (val1 == 1) {
        return val2;
    }
    if (val1 == -1) {
        if (val2 == Long.MIN_VALUE) {
            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
        }
        return -val2;
    }
    j = val1 * val2;
    if (j / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {
        throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
    }
    return j;
}