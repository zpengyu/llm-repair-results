diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
index 385e8b07..8c62fdbe 100644
--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
@@ -331,8 +327,31 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
         compiler.reportCodeChange();
       }
     }
+  } else {
+      // This must be non-null, because there was an explicit provide.
+      Preconditions.checkNotNull(providedModule);
+      JSModule module = t.getModule();
+      if (moduleGraph != null &&
+          module != providedModule &&
+          !moduleGraph.dependsOn(module, providedModule)) {
+        compiler.report(
+            t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
+                providedModule.getName(),
+                module.getName()));
+      }
+    }
+    maybeAddToSymbolTable(left);
+    maybeAddStringNodeToSymbolTable(arg);
+    // Requires should be removed before further processing.
+    // Some clients run closure pass multiple times, first with
+    // the checks for broken requires turned off. In these cases, we
+    // allow broken requires to be preserved by the first run to
+    // let them be caught in the subsequent run.
+    if (provided != null) {
+      parent.detachFromParent();
+      compiler.reportCodeChange();
+    }
   }
-
   /**
    * Handles a goog.provide call.
    */
