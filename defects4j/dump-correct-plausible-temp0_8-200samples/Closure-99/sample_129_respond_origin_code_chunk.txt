  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
    // Don't traverse functions that are constructors or have the @this
    // or @override annotation.
    if (n.isFunction()) {
      JSDocInfo jsDoc = getFunctionJsDocInfo(n);
      if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.hasThisType() || jsDoc.isOverride())) {
        return false;
      }
    }

    // Don't traverse the RHS of assignments to prototype
    // properties or subproperties.
    if (parent != null && parent.isAssign()) {
      Node lhs = parent.getFirstChild();
      Node rhs = lhs.getNext();
      if (n == rhs && lhs.getType() == Token.GETPROP
          && lhs.getLastChild().getString().equals("prototype")) {
        return false;
      }
      String lhsName = lhs.getQualifiedName();
      if (n == rhs && lhsName != null && lhsName.contains(".prototype.")) {
        return false;
      }
    }

    return true;
  }

