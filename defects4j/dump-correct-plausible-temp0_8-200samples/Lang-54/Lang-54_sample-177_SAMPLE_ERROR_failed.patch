diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java
index 372ad6a0..3256b025 100644
--- a/src/java/org/apache/commons/lang/LocaleUtils.java
+++ b/src/java/org/apache/commons/lang/LocaleUtils.java
@@ -91,41 +91,17 @@ public class LocaleUtils {
      * @return a Locale, null if null input
      * @throws IllegalArgumentException if the string is an invalid format
      */
-    public static Locale toLocale(String str) {
-        if (str == null) {
-            return null;
-        }
-        int len = str.length();
-        if (len != 2 && len != 5 && len < 7) {
-            throw new IllegalArgumentException("Invalid locale format: " + str);
-        }
-        char ch0 = str.charAt(0);
-        char ch1 = str.charAt(1);
-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {
-            throw new IllegalArgumentException("Invalid locale format: " + str);
-        }
+Locale.Builder builder = new Locale.Builder();
+        builder.setLanguage(str.substring(0, 2));
         if (len == 2) {
-            return new Locale(str, "");
+            builder.setRegion("");
         } else {
-            if (str.charAt(2) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            char ch3 = str.charAt(3);
-            char ch4 = str.charAt(4);
-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (len == 5) {
-                return new Locale(str.substring(0, 2), str.substring(3, 5));
-            } else {
-                if (str.charAt(5) != '_') {
-                    throw new IllegalArgumentException("Invalid locale format: " + str);
-                }
-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
+            builder.setRegion(str.substring(3, 5));
+            if (len == 7) {
+                builder.setVariant(str.substring(6));
             }
         }
-    }
-
+        return builder.build();
     //-----------------------------------------------------------------------
     /**
      * <p>Obtains the list of locales to search through when performing
