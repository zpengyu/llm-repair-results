    protected void processProperties(Properties properties)
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            if (!cmd.hasOption(option))
            {
                Option opt = getOptions().getOption(option);

                if (opt == null)
                {
                    // if the option is not part of the Options then just skip it
                    continue;
                }

                // get the value from the properties instance
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    // if the option is expected to have an argument value
                    // then take into account the special case where the
                    // argument value is optional
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        // if the option is not specified on the command line
                        if (value != null)
                        {
                            // if the argument value is present in the properties
                            // set it on the Option
                            opt.addValueForProcessing(value);
                        }
                    }
                }
                else if (!("yes".equalsIgnoreCase(value)
                        || "true".equalsIgnoreCase(value)
                        || "1".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the
                    // option to the CommandLine
                    break;
                }

                cmd.addOption(opt);
            }
        }
    }
