    public static int formatLongOctalOrBinaryBytes(
        final long value, final byte[] buf, final int offset, final int length) {

        // Check whether we are dealing with UID/GID or SIZE field
        final long maxAsOctalChar = length == TarConstants.UIDLEN ? TarConstants.MAXID : TarConstants.MAXSIZE;

        final boolean negative = value < 0;
        if (!negative && value <= maxAsOctalChar) { // OK to store as octal chars
            return formatLongOctalBytes(value, buf, offset, length);
        }

        final int limit = offset + length - 1;

        if (length < 9) {
            if (negative) {
                buf[limit] = (byte) 0xff;
            } else {
                buf[limit] = 0;
            }
            formatLongBinary(value, buf, offset, length - 1, negative);
        }
        formatBigIntegerBinary(value, buf, offset, length - 1, negative);

        buf[limit] = (byte) (negative ? 0xff : 0x80);
        return offset + length;
    }

