    public final void translate(CharSequence input, Writer out) throws IOException {
        if (out == null) {
            throw new IllegalArgumentException("The Writer must not be null");
        }
        if (input == null) {
            return;
        }
        int pos = 0;
        int len = Character.codePointCount(input, 0, input.length());
        while (pos < len) {
            int consumed = translate(input, pos, out);
            if (consumed == 0) {
                char[] c = Character.toChars(Character.codePointAt(input, pos));
                out.write(c);
            }
            else {
//          // contract with translators is that they have to understand codepoints 
//          // and they just took care of a surrogate pair
                pos += consumed;
            }
            pos++;
        }
    }
## Code Deletions

The first step in code deletions is to find all the files that were changed in the commits that were analysed. We store the file names and the SHA-1 value of the file in a hash map where the SHA-1 value is the key and the value is the file name. When we find a line that has been deleted, we use the SHA-1 value of the file to get the file name and then write the deleted lines to a file, along with the SHA-1 value of the file. This way, we end up with a file which contains all the deleted lines of code with their corresponding SHA-1 value of the file.
