diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java
index 93f078fa..9455fca3 100644
--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -317,14 +317,16 @@ public final class NodeUtil {
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
-  static boolean isValidDefineValue(Node val, Set<String> defines) {
+static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
+      case Token.NAME:
+      case Token.GETPROP:
+        return defines.contains(val.getQualifiedName());
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
@@ -335,17 +336,9 @@ public final class NodeUtil {
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
-      case Token.NAME:
-      case Token.GETPROP:
-        if (val.isQualifiedName()) {
-          return defines.contains(val.getQualifiedName());
-        }
     }
     return false;
-  }
-
+}
   /**
    * Returns whether this a BLOCK node with no children.
    *
