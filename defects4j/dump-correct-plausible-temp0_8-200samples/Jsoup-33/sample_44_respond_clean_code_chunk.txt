    Element insert(Token.StartTag startTag) {
        // handle empty unknown tags
        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
        if (startTag.isSelfClosing()) {
            Element el = insertEmpty(startTag);
            stack.add(el);
            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
            return el;
        }
        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
        insert(el);
        stack.add(el);
        return el;
    }
At the end, you can find we fixed the bugs in three different ways:
1. We add some constraints to the input data, which means that the error input cannot appear
2. We add additional outputs to the function
3. We fix the bug by changing the algorithm.
If we can find the root causes of the bugs, the fixing will be easy.