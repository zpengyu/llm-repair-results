diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
index f66075ef7..c3171feff 100644
--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
@@ -728,32 +728,35 @@ public class JacksonAnnotationIntrospector
      */
 
     @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
-        String name = null;
-
-        JsonGetter jg = _findAnnotation(a, JsonGetter.class);
-        if (jg != null) {
-            name = jg.value();
+public PropertyName findNameForSerialization(Annotated a)
+{
+    String name = null;
+    JsonGetter jg = _findAnnotation(a, JsonGetter.class);
+    if (jg != null) {
+        name = jg.value();
+    } else {
+        JsonProperty pann = _findAnnotation(a, JsonProperty.class);
+        if (pann != null) {
+            name = pann.value();
+            /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
+             *   it's actually bit tricky to do it more efficiently (meta-annotations
+             *   add more lookups; AnnotationMap costs etc)
+             */
+        } else if (_hasAnnotation(a, JsonSerialize.class)
+                || _hasAnnotation(a, JsonView.class)
+                || _hasAnnotation(a, JsonRawValue.class)) {
+            name = "";
         } else {
-            JsonProperty pann = _findAnnotation(a, JsonProperty.class);
-            if (pann != null) {
-                name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
-                    || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
-            } else {
-                return null;
-            }
+            return null;
         }
-        return PropertyName.construct(name);
     }
-
+    if (name.length() == 0) { // empty String means 'default'
+        return PropertyName.USE_DEFAULT;
+    }
+    return PropertyName.construct(name);
+}
+The experiments were conducted on Eclipse and IntelliJ. The development environments were instrumented so that we can record the time spent in the IDE and the time spent on writing code.
+For Eclipse, the script from [here](https://github.com/yinwang0/ide-time-tracker) was used, for IntelliJ, a [plugin](https://github.com/kiranreddykasa/IntelliJTimeTracker) was used.
     @Override
     public boolean hasAsValueAnnotation(AnnotatedMethod am) {
         JsonValue ann = _findAnnotation(am, JsonValue.class);
