diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
index f66075ef7..2845d83dc 100644
--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
@@ -739,21 +738,31 @@ public class JacksonAnnotationIntrospector
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
+            } else {
+                JsonSerialize serAnn = _findAnnotation(a, JsonSerialize.class);
+                if (serAnn != null) {
+                    // empty String means 'default'; but be defensive, check null explicitly
+                    name = serAnn.as().getValue();
+                    if (name.length() == 0) {
+                        name = null;
+                    }
+                } else if (_hasAnnotation(a, JsonView.class)
+                        || _hasAnnotation(a, JsonRawValue.class)) {
+                    name = "";
+                } else {
+                    return null;
+                }
                 /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
                  *   it's actually bit tricky to do it more efficiently (meta-annotations
                  *   add more lookups; AnnotationMap costs etc)
                  */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
-                    || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
-            } else {
-                return null;
             }
         }
         return PropertyName.construct(name);
     }
-
+In order to analyze the code excerpts of fixed functions, you can use our code query language.
+We have defined a set of code queries that can be used to collect interesting information from the code.
+More information on the code queries are available in the CodeQuery.md file.
     @Override
     public boolean hasAsValueAnnotation(AnnotatedMethod am) {
         JsonValue ann = _findAnnotation(am, JsonValue.class);
