    public PropertyName findNameForSerialization(Annotated a)
    {
        String name = null;
        JsonGetter jg = _findAnnotation(a, JsonGetter.class);
        if (jg != null) {
            name = jg.value();
        } else {
            JsonProperty pann = _findAnnotation(a, JsonProperty.class);
            if (pann != null) {
                name = pann.value();
                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
                 *   it's actually bit tricky to do it more efficiently (meta-annotations
                 *   add more lookups; AnnotationMap costs etc)
                 */
            } else if (_hasAnnotation(a, JsonSerialize.class)
                    || _hasAnnotation(a, JsonView.class)
                    || _hasAnnotation(a, JsonRawValue.class)) {
                name = "";
            } else {
                return null;
            }
        }
        return PropertyName.construct(name);
    }
    private PropertyName _findConstructorName(Annotated a) {
        JsonCreator.Mode mode = _findCreatorBinding(a).mode();
        PropertyName name = null;
        switch (mode) {
        case PROPERTIES:
            JsonProperty pann = _findAnnotation(a, JsonProperty.class);
            if (pann != null) {
                name = PropertyName.construct(pann.value());
            }
            break;
        case DELEGATING:
            name = null;
            break;
        case DEFAULT: // fall-through
        case DISABLED:
            name = _findExplicitParamName(a, a.getDeclaringClass());
            if (name == null) {
                name = _findImplicitParamName(a, a.getDeclaringClass());
            }
            break;
        }
        return name;
    }