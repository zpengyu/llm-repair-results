    void writePaxHeaders(String entryName,
                         Map<String, String> headers) throws IOException {
        String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
        TarArchiveEntry pex = new TarArchiveEntry(name,
                                                  TarConstants.LF_PAX_EXTENDED_HEADER_LC);
        int bufferSize = 512;
        ByteArrayOutputStream out = new ByteArrayOutputStream(bufferSize);
        for (Map.Entry<String, String> h : headers.entrySet()) {
            String key = h.getKey();
            String value = h.getValue();
            int len = key.length() + value.length()
                + 3 /* blank, equals and newline */
                + 2 /* guess 9 < actual length < 100 */;
            String line = len + " " + key + "=" + value + "\n";
            int actualLength = line.getBytes(CharsetNames.UTF_8).length;
            while (len != actualLength) {
                // Adjust for cases where length < 10 or > 100
                // or where UTF-8 encoding isn't a single octet
                // per character.
                // Must be in loop as size may go from 99 to 100 in
                // first pass so we'd need a second.
                len = actualLength;
                line = len + " " + key + "=" + value + "\n";
                actualLength = line.getBytes(CharsetNames.UTF_8).length;
            }
            out.write(line.getBytes(CharsetNames.UTF_8));
            if (out.size() > bufferSize) {
                // The entry is too big for one block.
                // Continue in the next entry.
                pex.setSize(out.size());
                putArchiveEntry(pex);
                out.writeTo(this);
                closeArchiveEntry();
                name += "/PaxHeaders.X." + entryName.hashCode();
                pex = new TarArchiveEntry(name,
                                          TarConstants.LF_PAX_EXTENDED_HEADER_LC);
                out = new ByteArrayOutputStream(bufferSize);
            }
        }
        pex.setSize(out.size());
        putArchiveEntry(pex);
        out.writeTo(this);
        closeArchiveEntry();
    }

