diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
index da6bbfde..0f82d335 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
@@ -454,15 +454,24 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
     void writePaxHeaders(String entryName,
                          Map<String, String> headers) throws IOException {
         String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
-            // TarEntry's constructor would think this is a directory
-            // and not allow any data to be written
-        if (name.length() >= TarConstants.NAMELEN) {
-            name = name.substring(0, TarConstants.NAMELEN - 1);
-        }
         TarArchiveEntry pex = new TarArchiveEntry(name,
                                                   TarConstants.LF_PAX_EXTENDED_HEADER_LC);
-
-        StringWriter w = new StringWriter();
+        // The UTF-8 value of a character can have 1, 2 or 3 bytes.
+        // The ASCII range is always 1 byte but since the name of the
+        // file is 7-bit US-ASCII, this is always the case.
+        // A header value can be any Unicode character so will be at
+        // most 3 bytes.
+        // The key and the equals sign are both 7-bit US-ASCII so are
+        // always 1 byte.
+        // The newline is also 7-bit US-ASCII so is always 1 byte.
+        // The length field is 3 bytes.
+        // The length of a line is at least 1+1+1+1+1 = 5 bytes and at
+        // most 3+1+3+3+3+3 = 17 bytes.
+        // The header can be at most 17 * the number of header entries =
+        // 17 * 10 = 170 bytes.  The actual header will be less as the
+        // maximum name and value lengths are less than 32.
+        // So the header can be at most 170 bytes.
+        StringBuffer buf = new StringBuffer(170);
         for (Map.Entry<String, String> h : headers.entrySet()) {
             String key = h.getKey();
             String value = h.getValue();
@@ -481,9 +490,9 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
                 line = len + " " + key + "=" + value + "\n";
                 actualLength = line.getBytes(CharsetNames.UTF_8).length;
             }
-            w.write(line);
+            buf.append(line);
         }
-        byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
+        byte[] data = buf.toString().getBytes(CharsetNames.UTF_8);
         pex.setSize(data.length);
         putArchiveEntry(pex);
         write(data);
