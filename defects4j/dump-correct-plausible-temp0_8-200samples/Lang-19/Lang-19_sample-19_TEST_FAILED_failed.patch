diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index b7272a7d..b2826d0b 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -45,10 +44,35 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
-
                 // Check there's more than just an x after the &#
             }
-
+            else {
+                // Check for numeric character reference
+                int numberEnd = start;
+                while(numberEnd < seqEnd) {
+                    char c = input.charAt(numberEnd);
+                    if(c == ';') {
+                        break;
+                    }
+                    else if(!Character.isDigit(c)) {
+                        return 0;
+                    }
+                    numberEnd++;
+                }
+                // Check we have a semi-colon at the end
+                if(numberEnd < seqEnd) {
+                    int entityValue;
+                    try {
+                        entityValue = Integer.parseInt(input.subSequence(start, numberEnd).toString(), 10);
+                    } catch(NumberFormatException nfe) {
+                        return 0;
+                    }
+                    out.write(entityValue);
+                    return numberEnd - index + 1;
+                }
+                // Not a semi-colon, so not a numeric character reference
+                return 0;
+            }
             int end = start;
             // Note that this supports character codes without a ; on the end
             while(input.charAt(end) != ';')
@@ -80,5 +100,4 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
-    }
-}
+    }}
