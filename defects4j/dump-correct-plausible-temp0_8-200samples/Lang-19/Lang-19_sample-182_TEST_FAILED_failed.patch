diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index b7272a7d..0eaf6c82 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -37,21 +37,18 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         int seqEnd = input.length();
         // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
+        if(index < seqEnd && input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
-
                 // Check there's more than just an x after the &#
             }
-
             int end = start;
             // Note that this supports character codes without a ; on the end
-            while(input.charAt(end) != ';')
+            while(end < seqEnd && input.charAt(end) != ';')
             {
                 end++;
             }
@@ -80,5 +73,4 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
-    }
-}
+    }}
