diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index b7272a7d..fce44b25 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -37,25 +37,28 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         int seqEnd = input.length();
         // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
+        if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
-
                 // Check there's more than just an x after the &#
             }
-
             int end = start;
             // Note that this supports character codes without a ; on the end
-            while(input.charAt(end) != ';')
+            while(end < input.length())
             {
-                end++;
+                char chr = input.charAt(end);
+                if(chr == ';') {
+                    break;
+                } else if(Character.isLetterOrDigit(chr)) {
+                    end++;
+                } else {
+                    break;
+                }
             }
-
             int entityValue;
             try {
                 if(isHex) {
@@ -64,10 +67,9 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
-            System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
+                System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
                 return 0;
             }
-
             if(entityValue > 0xFFFF) {
                 char[] chrs = Character.toChars(entityValue);
                 out.write(chrs[0]);
@@ -80,5 +80,4 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
-    }
-}
+    }}
