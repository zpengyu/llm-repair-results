diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
index fd590d628..d45b5eaf8 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -280,26 +280,37 @@ public class CreatorCollector
         AnnotatedWithParams oldOne = _creators[typeIndex];
         // already had an explicitly marked one?
         if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+            // ... but only if marked explicitly.
+            if ((_explicitCreators & mask) != 0) {
+                // both explicit: verify
+                if (!explicit) { // otherwise only verify if neither explicitly annotated.
                     return;
                 }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+                if (oldOne.getClass() == newOne.getClass()) {
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
+                // 31-Jan-2015, tatu: For now, let's actually require explicit to win over implicit.
+                //   If there is use case against this, can reconsider -- but should consider
+                //   deprecating implicit, as it makes things a bit hairy
+                return;
+            }
+            // but skip, if new one not annotated
+            if (!explicit) {
+                return;
             }
-
             // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+                if (oldOne.getAnnotation(JacksonInject.class) != null) {
+                    return;
+                }
+                if (newOne.getAnnotation(JacksonInject.class) != null) {
+                    return;
+                }
             }
+            // new type more generic, use old
+            // new type more specific, use it
         }
         if (explicit) {
             _explicitCreators |= mask;
