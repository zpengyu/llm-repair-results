diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
index fd590d628..4bc8448ea 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -293,13 +291,20 @@ public class CreatorCollector
             // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                        +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+            } else if (oldOne.getParameterType(0) == newOne.getParameterType(0)) { // otherwise, which one to choose?
+                if (oldOne.getClass().isAssignableFrom(newOne.getClass())) { // new type more generic, use old
+                    return;
+                }
+                if (newOne.getClass().isAssignableFrom(oldOne.getClass())) { // new type more specific, use it
+                    _creators[typeIndex] = _fixAccess(newOne);
+                    _explicitCreators |= mask;
+                    return;
+                }
             }
+            throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                    +" creators: already had "+oldOne+", encountered "+newOne);
         }
         if (explicit) {
             _explicitCreators |= mask;
