diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
index fd590d628..edada0e4e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -273,14 +273,16 @@ public class CreatorCollector
         return member;
     }
 
-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
-    {
-        final int mask = (1 << typeIndex);
-        _hasNonDefaultCreator = true;
-        AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
-        if (oldOne != null) {
-
+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
+{
+    final int mask = (1 << typeIndex);
+    _hasNonDefaultCreator = true;
+    AnnotatedWithParams oldOne = _creators[typeIndex];
+    // already had an explicitly marked one?
+    if (oldOne != null) {
+        // one more thing: ok to override in sub-class
+        if (oldOne.getClass() == newOne.getClass()) {
+            // [databind#667]: avoid one particular class of bogus problems
             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                 // but skip, if new one not annotated
                 if (!explicit) {
@@ -289,24 +291,18 @@ public class CreatorCollector
                 // both explicit: verify
                 // otherwise only verify if neither explicitly annotated.
             }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
-            }
-        }
-        if (explicit) {
-            _explicitCreators |= mask;
+                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                        +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+            // otherwise, which one to choose?
+            // new type more generic, use old
+            // new type more specific, use it
         }
-        _creators[typeIndex] = _fixAccess(newOne);
     }
-
+    if (explicit) {
+        _explicitCreators |= mask;
+    }
+    _creators[typeIndex] = _fixAccess(newOne);
+}
     /*
     /**********************************************************
     /* Helper class(es)
