    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
    {
        final int mask = (1 << typeIndex);
        _hasNonDefaultCreator = true;
        AnnotatedWithParams oldOne = _creators[typeIndex];
        // already had an explicitly marked one?
        if (oldOne != null) {

            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                // but skip, if new one not annotated
                if (!explicit) {
                    return;
                }
                // both explicit: verify
                // otherwise only verify if neither explicitly annotated.
            }

            // one more thing: ok to override in sub-class
            if (oldOne.getClass() == newOne.getClass()) {
                // [databind#667]: avoid one particular class of bogus problems
                if (typeIndex == CREATOR_CONSTRUCTOR && oldOne.getClass() == com.fasterxml.jackson.databind.util.ClassUtil.Ctor.class) {
                    com.fasterxml.jackson.databind.util.ClassUtil.Ctor<?> ctor = (com.fasterxml.jackson.databind.util.ClassUtil.Ctor<?>) oldOne;
                    // 13-Jan-2017, tatu: Also ok if they are ctor from same class, differing
                    //   only by parameter type (since we can not reliably tell difference
                    //   by annotations etc)
                    if (!ctor._ctor.getDeclaringClass().isAssignableFrom(newOne.getDeclaringClass())) {
                        throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                                +" creators: already had "+ctor._ctor+", encountered "+newOne);
                    }
                    return;
                }
                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                        +" creators: already had "+oldOne+", encountered "+newOne);
                // otherwise, which one to choose?
                // new type more generic, use old
                // new type more specific, use it
            }
        }
        if (explicit) {
            _explicitCreators |= mask;
        }
        _creators[typeIndex] = _fixAccess(newOne);
    }
