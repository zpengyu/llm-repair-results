diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
index fd590d628..6f3fbdc9e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -293,12 +291,30 @@ public class CreatorCollector
             // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
+                if (oldOne.getClass() != newOne.getClass()) {
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                            +" creators: already had "+oldOne+", encountered "+newOne);
+                }
                 // otherwise, which one to choose?
-                    // new type more generic, use old
+                if (explicit) {
+                    if (_explicitCreators & mask) {
+                        throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                                +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                    }
+                } else {
+                    if ((_explicitCreators & mask) == 0) {
+                        throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                                +" creators: already had "+oldOne+", encountered "+newOne);
+                    }
+                }
+                // new type more generic, use old
+                if (oldOne.getClass().isAssignableFrom(newOne.getClass())) {
+                    return;
+                }
                 // new type more specific, use it
+                if (newOne.getClass().isAssignableFrom(oldOne.getClass())) {
+                    return;
+                }
             }
         }
         if (explicit) {
