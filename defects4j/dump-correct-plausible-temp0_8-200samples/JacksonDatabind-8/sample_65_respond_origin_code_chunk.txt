    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
    {
        final int mask = (1 << typeIndex);
        _hasNonDefaultCreator = true;
        AnnotatedWithParams oldOne = _creators[typeIndex];
        // already had an explicitly marked one?
        if (oldOne != null) {
            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                if (explicit) {
                    if (oldOne.getClass() != newOne.getClass()) {
                        throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                                +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                    }
                }
            } else { // not explicitly marked: only override if more explicit type, due to class resolution
                if (oldOne.getClass() != newOne.getClass()) {
                    if (explicit) {
                        if (_creators[typeIndex] == _defaultConstructor) {
                            _creators[typeIndex] = _fixAccess(newOne);
                            return;
                        }
                    } else {
                        // new type more generic, use old
                        return;
                    }
                }
            }
            throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                    +" creators: already had "+oldOne+", encountered "+newOne);
        }
        if (explicit) {
            _explicitCreators |= mask;
        }
        _creators[typeIndex] = _fixAccess(newOne);
    }

