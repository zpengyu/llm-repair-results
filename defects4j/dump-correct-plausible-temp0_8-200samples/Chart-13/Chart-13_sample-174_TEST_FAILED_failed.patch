diff --git a/source/org/jfree/chart/block/BorderArrangement.java b/source/org/jfree/chart/block/BorderArrangement.java
index 730aeb3..85d7396 100644
--- a/source/org/jfree/chart/block/BorderArrangement.java
+++ b/source/org/jfree/chart/block/BorderArrangement.java
@@ -464,30 +464,34 @@ public class BorderArrangement implements Arrangement, Serializable {
         if (this.centerBlock != null) {
             this.centerBlock.arrange(g2, c5);
         }
-
+        double x = 0.0;
         if (this.topBlock != null) {
-            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
+            this.topBlock.setBounds(new Rectangle2D.Double(x, 0.0, w[0],
                     h[0]));
+            x = x + w[0];
         }
         if (this.bottomBlock != null) {
-            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
+            this.bottomBlock.setBounds(new Rectangle2D.Double(x, h[0] + h[2],
                     w[1], h[1]));
+            x = x + w[1];
         }
         if (this.leftBlock != null) {
-            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
+            this.leftBlock.setBounds(new Rectangle2D.Double(x, h[0], w[2],
                     h[2]));
+            x = x + w[2];
         }
         if (this.rightBlock != null) {
-            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
-                    w[3], h[3]));
+            this.rightBlock.setBounds(new Rectangle2D.Double(x, h[0], w[3],
+                    h[3]));
+            x = x + w[3];
         }
         if (this.centerBlock != null) {
-            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
+            this.centerBlock.setBounds(new Rectangle2D.Double(x, h[0], w[4],
                     h[4]));
+            x = x + w[4];
         }
-        return new Size2D(constraint.getWidth(), constraint.getHeight());
+        return new Size2D(x, constraint.getHeight());
     }
-
     /**
      * Clears the layout.
      */
