diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java
index 4f045430..1d146c81 100644
--- a/src/com/google/javascript/jscomp/InlineVariables.java
+++ b/src/com/google/javascript/jscomp/InlineVariables.java
@@ -557,24 +554,22 @@ class InlineVariables implements CompilerPass {
           && reference.getParent().getFirstChild() == reference.getNode()) {
         return false;
       }
-
-      if (value.isFunction()) {
-        Node callNode = reference.getParent();
-        if (reference.getParent().isCall()) {
-          CodingConvention convention = compiler.getCodingConvention();
-          // Bug 2388531: Don't inline subclass definitions into class defining
-          // calls as this confused class removing logic.
-          SubclassRelationship relationship =
-              convention.getClassesDefinedByCall(callNode);
-          if (relationship != null) {
-            return false;
-          }
-
-          // issue 668: Don't inline singleton getter methods
-          // calls as this confused class removing logic.
-        }
-      }
-
+      // NOTE: This may not be neccessary.
+      // if (value.isFunction()) {
+      //   Node callNode = reference.getParent();
+      //   if (reference.getParent().isCall()) {
+      //     CodingConvention convention = compiler.getCodingConvention();
+      //     // Bug 2388531: Don't inline subclass definitions into class defining
+      //     // calls as this confused class removing logic.
+      //     SubclassRelationship relationship =
+      //         convention.getClassesDefinedByCall(callNode);
+      //     if (relationship != null) {
+      //       return false;
+      //     }
+      //     // issue 668: Don't inline singleton getter methods
+      //     // calls as this confused class removing logic.
+      //   }
+      // }
       return canMoveAggressively(value) ||
           canMoveModerately(initialization, reference);
     }
