diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
index a76403c86..835ef31e7 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
@@ -114,41 +114,39 @@ public class NumberDeserializers
     /**********************************************************
      */
 
-    protected abstract static class PrimitiveOrWrapperDeserializer<T>
-        extends StdScalarDeserializer<T>
-    {
-        private static final long serialVersionUID = 1L;
-
-        protected final T _nullValue;
-        protected final boolean _primitive;
-
-        protected PrimitiveOrWrapperDeserializer(Class<T> vc, T nvl) {
-            super(vc);
-            _nullValue = nvl;
-            _primitive = vc.isPrimitive();
-        }
-
-        @Override
-        public final T getNullValue(DeserializationContext ctxt) throws JsonMappingException
+        protected abstract static class PrimitiveOrWrapperDeserializer<T>
+            extends StdScalarDeserializer<T>
         {
-            if (_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {
-                throw ctxt.mappingException(
-                        "Can not map JSON null into type %s (set DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to 'false' to allow)",
-                        handledType().toString());
+            private static final long serialVersionUID = 1L;
+            protected final T _nullValue;
+            protected final boolean _primitive;
+            protected PrimitiveOrWrapperDeserializer(Class<T> vc, T nvl) {
+                super(vc);
+                _nullValue = nvl;
+                _primitive = vc.isPrimitive();
+            }
+            @Override
+            public final T getNullValue(DeserializationContext ctxt) throws JsonMappingException
+            {
+                if (_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {
+                    throw ctxt.mappingException(
+                            "Can not map JSON null into type %s (set DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to 'false' to allow)",
+                            handledType().toString());
+                }
+                if ((_primitive || ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES))
+                        && ctxt.getParser().getCurrentToken() == JsonToken.VALUE_STRING) {
+                    throw ctxt.mappingException("Can not map JSON String into type %s; missing property '%s' (for Primitive types) or enable DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to allow)",
+                            handledType().toString(),
+                            _primitive ? "value" : "null");
+                }
+                return _nullValue;
+            }
+            @Override
+            @Deprecated // remove in 2.7
+            public final T getNullValue() {
+                return _nullValue;
             }
-            return _nullValue;
-        }
-
-        @Override
-        @Deprecated // remove in 2.7
-        public final T getNullValue() {
-            return _nullValue;
         }
-
-            // [databind#1095]: Should not allow coercion from into null from Empty String
-            // either, if `null` not allowed
-    }
-
     /*
     /**********************************************************
     /* Then primitive/wrapper types
