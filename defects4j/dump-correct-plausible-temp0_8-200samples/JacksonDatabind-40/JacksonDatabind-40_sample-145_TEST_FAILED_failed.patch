diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
index a76403c86..d8c50cfa2 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
@@ -144,11 +140,28 @@ public class NumberDeserializers
         public final T getNullValue() {
             return _nullValue;
         }
-
             // [databind#1095]: Should not allow coercion from into null from Empty String
             // either, if `null` not allowed
+        @Override
+        public Object deserializeWithType(JsonParser p, DeserializationContext ctxt,
+                TypeDeserializer typeDeserializer) throws IOException
+        {
+            String text = p.getValueAsString();
+            if (text != null) {
+                if (text.length() == 0) {
+                    // [databind#1095]: Should not allow coercion from into null from Empty String
+                    // either, if `null` not allowed
+                    if (!ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)
+                            || (!_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES))) {
+                        return _nullValue;
+                    }
+                }
+            } else if (p.getCurrentToken() == JsonToken.VALUE_NULL) {
+                return _nullValue;
+            }
+            return typeDeserializer.deserializeTypedFromAny(p, ctxt);
+        }
     }
-
     /*
     /**********************************************************
     /* Then primitive/wrapper types
