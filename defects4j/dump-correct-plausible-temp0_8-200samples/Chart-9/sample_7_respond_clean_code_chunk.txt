    public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
        throws CloneNotSupportedException {
        if (start == null) {
            throw new IllegalArgumentException("Null 'start' argument.");
        }
        if (end == null) {
            throw new IllegalArgumentException("Null 'end' argument.");
        }
        if (start.compareTo(end) > 0) {
            throw new IllegalArgumentException(
                    "Requires start on or before end.");
        }
        int startIndex = getIndex(start);
        int endIndex = getIndex(end);
        if (endIndex < 0) {             // end period is not in original series
            endIndex = -(endIndex + 1); // this is first item AFTER end period
            endIndex = endIndex - 1;    // so this is last item BEFORE end
        }
        if (startIndex < 0) {
            // Special case: if start is before the start of the series, then
            // we can't use the index lookup on the start to determine the
            // 'beginning' of the required range (since the index will be -1
            // ... which is not helpful).
            startIndex = 0;
        }
        if (startIndex > endIndex) {
            String msg = "Requires startIndex (" + startIndex + ") on or "
                + "before endIndex (" + endIndex + ").";
            throw new IllegalArgumentException(msg);
        }
        TimeSeries copy = (TimeSeries) super.clone();
        copy.data = new java.util.ArrayList();
        if (this.data.size() > 0) {
            for (int index = startIndex; index <= endIndex; index++) {
                copy.data.add(this.data.get(index));
            }
        }
        return copy;
    }