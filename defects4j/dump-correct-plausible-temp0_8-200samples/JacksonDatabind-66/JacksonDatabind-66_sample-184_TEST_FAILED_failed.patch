diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
index d4417f6ad..15ba31a48 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
@@ -312,17 +312,19 @@ public class StdKeyDeserializer extends KeyDeserializer
                 return null;
             }
             try {
-                // Ugh... should not have to give parser which may or may not be correct one...
                 Object result = _delegate.deserialize(ctxt.getParser(), ctxt);
                 if (result != null) {
                     return result;
                 }
-                return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation");
+                // 07-Jul-2015, tatu: [databind#922] Support other-than-String keys too
+                return ctxt.handleWeirdKey(_keyClass, key,
+                        "not a valid representation: \"%s\"", key);
             } catch (Exception re) {
-                return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation: %s", re.getMessage());
+                return ctxt.handleWeirdKey(_keyClass, key,
+                        "not a valid representation (of type %s): %s",
+                        _keyClass.getName(), re.getMessage());
             }
         }
-
         public Class<?> getKeyClass() { return _keyClass; }
     }
      
