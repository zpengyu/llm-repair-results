        public final Object deserializeKey(String key, DeserializationContext ctxt)
            throws IOException
        {
            if (key == null) { // is this even legal call?
                return null;
            }
            try {
                // Ugh... should not have to give parser which may or may not be correct one...
                Object result = _delegate.deserialize(ctxt.getParser(), ctxt);
                if (result != null) {
                    if (_unwrapSingle) {
                        final JsonParser p = ctxt.getParser();
                        if (p.nextToken() != JsonToken.END_OBJECT) {
                            ctxt.reportWrongTokenException(p, JsonToken.END_OBJECT,
                                    "Attempted to unwrap single value array for single '%s' value but there was more than a single value in the array",
                                    _keyClass.getName());
                        }
                    }
                    return result;
                }
                return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation");
            } catch (Exception re) {
                return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation: %s", re.getMessage());
            }
        }

