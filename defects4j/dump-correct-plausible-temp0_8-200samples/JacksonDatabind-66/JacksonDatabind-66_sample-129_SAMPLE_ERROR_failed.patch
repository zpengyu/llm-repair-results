diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
index d4417f6ad..5f83b5b3c 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
@@ -308,11 +308,14 @@ public class StdKeyDeserializer extends KeyDeserializer
         public final Object deserializeKey(String key, DeserializationContext ctxt)
             throws IOException
         {
-            if (key == null) { // is this even legal call?
-                return null;
-            }
             try {
                 // Ugh... should not have to give parser which may or may not be correct one...
+                if (key == null) { // is this even legal call?
+                    if (ctxt.isEnabled(DeserializationFeature.READ_UNKNOWN_NULL_VALUES)) {
+                        return null;
+                    }
+                    return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation (NULL token)");
+                }
                 Object result = _delegate.deserialize(ctxt.getParser(), ctxt);
                 if (result != null) {
                     return result;
