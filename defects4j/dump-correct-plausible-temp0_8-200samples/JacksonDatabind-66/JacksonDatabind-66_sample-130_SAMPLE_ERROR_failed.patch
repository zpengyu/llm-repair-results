diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
index d4417f6ad..47d141a92 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
@@ -313,11 +313,18 @@ public class StdKeyDeserializer extends KeyDeserializer
             }
             try {
                 // Ugh... should not have to give parser which may or may not be correct one...
-                Object result = _delegate.deserialize(ctxt.getParser(), ctxt);
-                if (result != null) {
-                    return result;
+                JsonParser p = ctxt.getParser();
+                if (_useObjectId) {
+                    JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(_keyClass);
+                    deser.resolve(ctxt);
+                    return deser.deserialize(p, ctxt);
+                } else {
+                    Object result = _delegate.deserialize(p, ctxt);
+                    if (result != null) {
+                        return result;
+                    }
+                    return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation");
                 }
-                return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation");
             } catch (Exception re) {
                 return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation: %s", re.getMessage());
             }
