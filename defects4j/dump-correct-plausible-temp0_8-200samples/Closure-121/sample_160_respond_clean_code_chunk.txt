      if (!maybeModifiedArguments &&
          !staleVars.contains(v) &&
          referenceInfo.isWellDefined() &&
          referenceInfo.isAssignedOnceInLifetime()) {
        // Inlining the variable based solely on well-defined and assigned
        // once is *NOT* correct. We relax the correctness requirement if
        // the variable is declared constant.
        if (isConstant(v)) {
          List<Reference> refs = referenceInfo.references;
          for (int i = 1 /* start from a read */; i < refs.size(); i++) {
            Node nameNode = refs.get(i).getNode();
            if (aliasCandidates.containsKey(nameNode)) {
              AliasCandidate candidate = aliasCandidates.get(nameNode);
              if (!staleVars.contains(candidate.alias) &&
                  !isVarInlineForbidden(candidate.alias)) {
                Reference aliasInit;
                aliasInit = candidate.refInfo.getInitializingReference();
                Node value = aliasInit.getAssignedValue();
                Preconditions.checkNotNull(value);
                inlineWellDefinedVariable(candidate.alias,
                    value,
                    candidate.refInfo.references);
                staleVars.add(candidate.alias);
              }
            }
          }
        }
      }