diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
index 7b8c69af7..6101a3c3e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
@@ -7,28 +7,21 @@ import com.fasterxml.jackson.databind.JavaType;
  *
  * @since 2.7
  */
-public class ResolvedRecursiveType extends TypeBase
-{
+public class ResolvedRecursiveType extends TypeBase {
     private static final long serialVersionUID = 1L;
-
     protected JavaType _referencedType;
-
     public ResolvedRecursiveType(Class<?> erasedType, TypeBindings bindings) {
         super(erasedType, bindings, null, null, 0, null, null, false);
     }
-
-    public void setReference(JavaType ref)
-    {
+    public void setReference(JavaType ref) {
         // sanity check; should not be called multiple times
         if (_referencedType != null) {
             throw new IllegalStateException("Trying to re-set self reference; old value = "+_referencedType+", new = "+ref);
         }
         _referencedType = ref;
     }
-
-
+    // note: called by ObjectMapper#deserializerInstance
     public JavaType getSelfReferencedType() { return _referencedType; }
-
     @Override
     public StringBuilder getGenericSignature(StringBuilder sb) {
         return _referencedType.getGenericSignature(sb);
@@ -68,7 +54,7 @@ public class ResolvedRecursiveType extends TypeBase
     public JavaType withStaticTyping() {
         return this;
     }
-
+    // should NOT be called, but if it is, may be same as this
     @Deprecated // since 2.7
     @Override
     protected JavaType _narrow(Class<?> subclass) {
