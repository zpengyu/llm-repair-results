    @Override
    public JavaType withStaticTyping() {
        if (_referencedType == null) {
            return this;
        }
        return _referencedType.withStaticTyping();
    }
    @Override
    public JavaType refine(Class<?> rawType, TypeBindings bindings,
            JavaType superClass, JavaType[] superInterfaces) {
        if (_referencedType == null) {
            return null;
        }
        return _referencedType.refine(rawType, bindings, superClass, superInterfaces);
    }
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder(40)
                .append("[recursive type; ");
        if (_referencedType == null) {
            sb.append("UNRESOLVED");
        } else {
            sb.append(_referencedType.toString());
        }
        return sb.toString();
    }