diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
index 7b8c69af7..0955ba77e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
@@ -38,54 +31,68 @@ public class ResolvedRecursiveType extends TypeBase
     public StringBuilder getErasedSignature(StringBuilder sb) {
         return _referencedType.getErasedSignature(sb);
     }
-
     @Override
     public JavaType withContentType(JavaType contentType) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withContentType(contentType);
+        }
+        throw new UnsupportedOperationException("Can not change content type of resolved recursive type");
     }
-    
     @Override
     public JavaType withTypeHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withTypeHandler(h);
+        }
+        throw new UnsupportedOperationException("Can not change type handler of resolved recursive type");
     }
-
     @Override
     public JavaType withContentTypeHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withContentTypeHandler(h);
+        }
+        throw new UnsupportedOperationException("Can not change content type handler of resolved recursive type");
     }
-
     @Override
     public JavaType withValueHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withValueHandler(h);
+        }
+        throw new UnsupportedOperationException("Can not change value handler of resolved recursive type");
     }
-
     @Override
     public JavaType withContentValueHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withContentValueHandler(h);
+        }
+        throw new UnsupportedOperationException("Can not change content value handler of resolved recursive type");
     }
-
     @Override
     public JavaType withStaticTyping() {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withStaticTyping();
+        }
+        throw new UnsupportedOperationException("Can not change static typing of resolved recursive type");
     }
-
     @Deprecated // since 2.7
     @Override
     protected JavaType _narrow(Class<?> subclass) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType._narrow(subclass);
+        }
+        throw new UnsupportedOperationException("Can not narrow resolved recursive type");
     }
-
     @Override
     public JavaType refine(Class<?> rawType, TypeBindings bindings,
             JavaType superClass, JavaType[] superInterfaces) {
-        return null;
+        if (_referencedType != null) {
+            return _referencedType.refine(rawType, bindings, superClass, superInterfaces);
+        }
+        throw new UnsupportedOperationException("Can not refine resolved recursive type");
     }
-
     @Override
     public boolean isContainerType() {
-        return false;
+        return (_referencedType != null) && _referencedType.isContainerType();
     }
-
     @Override
     public String toString() {
         StringBuilder sb = new StringBuilder(40)
