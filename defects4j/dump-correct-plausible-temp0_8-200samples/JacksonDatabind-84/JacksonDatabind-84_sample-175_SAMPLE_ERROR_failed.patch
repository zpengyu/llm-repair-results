diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
index 7b8c69af7..00b5b7d2c 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
@@ -10,35 +10,16 @@ import com.fasterxml.jackson.databind.JavaType;
 public class ResolvedRecursiveType extends TypeBase
 {
     private static final long serialVersionUID = 1L;
-
-    protected JavaType _referencedType;
-
+    protected final JavaType _referencedType;
     public ResolvedRecursiveType(Class<?> erasedType, TypeBindings bindings) {
         super(erasedType, bindings, null, null, 0, null, null, false);
+        _referencedType = this;
     }
-
-    public void setReference(JavaType ref)
-    {
-        // sanity check; should not be called multiple times
-        if (_referencedType != null) {
-            throw new IllegalStateException("Trying to re-set self reference; old value = "+_referencedType+", new = "+ref);
-        }
-        _referencedType = ref;
-    }
-
-
-    public JavaType getSelfReferencedType() { return _referencedType; }
-
-    @Override
-    public StringBuilder getGenericSignature(StringBuilder sb) {
-        return _referencedType.getGenericSignature(sb);
-    }
-
-    @Override
-    public StringBuilder getErasedSignature(StringBuilder sb) {
-        return _referencedType.getErasedSignature(sb);
+    protected ResolvedRecursiveType(Class<?> erasedType, TypeBindings bindings,
+            JavaType refType) {
+        super(erasedType, bindings, null, null, 0, null, null, false);
+        _referencedType = refType;
     }
-
     @Override
     public JavaType withContentType(JavaType contentType) {
         return this;
@@ -85,7 +58,14 @@ public class ResolvedRecursiveType extends TypeBase
     public boolean isContainerType() {
         return false;
     }
-
+    @Override
+    public StringBuilder getGenericSignature(StringBuilder sb) {
+        return _referencedType.getGenericSignature(sb);
+    }
+    @Override
+    public StringBuilder getErasedSignature(StringBuilder sb) {
+        return _referencedType.getErasedSignature(sb);
+    }
     @Override
     public String toString() {
         StringBuilder sb = new StringBuilder(40)
