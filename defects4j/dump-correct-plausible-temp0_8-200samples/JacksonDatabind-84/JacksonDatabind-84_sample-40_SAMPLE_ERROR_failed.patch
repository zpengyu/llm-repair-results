diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
index 7b8c69af7..42de90fc4 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
@@ -7,16 +7,20 @@ import com.fasterxml.jackson.databind.JavaType;
  *
  * @since 2.7
  */
-public class ResolvedRecursiveType extends TypeBase
-{
+public class ResolvedRecursiveType extends TypeBase {
     private static final long serialVersionUID = 1L;
-
     protected JavaType _referencedType;
-
-    public ResolvedRecursiveType(Class<?> erasedType, TypeBindings bindings) {
+    protected final String _id;
+    public ResolvedRecursiveType(Class<?> erasedType, TypeBindings bindings, String id) {
         super(erasedType, bindings, null, null, 0, null, null, false);
+        _id = id;
+    }
+    public String id() {
+        return _id;
+    }
+    public JavaType getSelfReferencedType() {
+        return _referencedType;
     }
-
     public void setReference(JavaType ref)
     {
         // sanity check; should not be called multiple times
@@ -25,10 +29,6 @@ public class ResolvedRecursiveType extends TypeBase
         }
         _referencedType = ref;
     }
-
-
-    public JavaType getSelfReferencedType() { return _referencedType; }
-
     @Override
     public StringBuilder getGenericSignature(StringBuilder sb) {
         return _referencedType.getGenericSignature(sb);
@@ -97,9 +86,8 @@ public class ResolvedRecursiveType extends TypeBase
             //   and only include type-erased class
             sb.append(_referencedType.getRawClass().getName());
         }
-        return sb.toString();
+        return sb.append(']').toString();
     }
-
     @Override
     public boolean equals(Object o) {
         if (o == this) return true;
@@ -109,6 +97,7 @@ public class ResolvedRecursiveType extends TypeBase
             return false;
         }
         return (o.getClass() == getClass()
-                && _referencedType.equals(((ResolvedRecursiveType) o).getSelfReferencedType()));
+                && _referencedType.equals(((ResolvedRecursiveType) o).getSelfReferencedType())
+                && _id.equals(((ResolvedRecursiveType) o).id()));
     }
 }
\ No newline at end of file
