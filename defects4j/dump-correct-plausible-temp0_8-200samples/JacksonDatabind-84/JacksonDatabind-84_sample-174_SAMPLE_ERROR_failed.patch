diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
index 7b8c69af7..a95234e55 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
@@ -25,67 +22,55 @@ public class ResolvedRecursiveType extends TypeBase
         }
         _referencedType = ref;
     }
-
-
-    public JavaType getSelfReferencedType() { return _referencedType; }
-
-    @Override
-    public StringBuilder getGenericSignature(StringBuilder sb) {
-        return _referencedType.getGenericSignature(sb);
-    }
-
-    @Override
-    public StringBuilder getErasedSignature(StringBuilder sb) {
-        return _referencedType.getErasedSignature(sb);
-    }
-
     @Override
     public JavaType withContentType(JavaType contentType) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withContentType(contentType);
+        }
+        return null;
     }
-    
     @Override
     public JavaType withTypeHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withTypeHandler(h);
+        }
+        return null;
     }
-
     @Override
     public JavaType withContentTypeHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withContentTypeHandler(h);
+        }
+        return null;
     }
-
     @Override
     public JavaType withValueHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withValueHandler(h);
+        }
+        return null;
     }
-
     @Override
     public JavaType withContentValueHandler(Object h) {
-        return this;
+        if (_referencedType != null) {
+            return _referencedType.withContentValueHandler(h);
+        }
+        return null;
     }
-
     @Override
     public JavaType withStaticTyping() {
-        return this;
-    }
-
-    @Deprecated // since 2.7
-    @Override
-    protected JavaType _narrow(Class<?> subclass) {
-        return this;
-    }
-
-    @Override
-    public JavaType refine(Class<?> rawType, TypeBindings bindings,
-            JavaType superClass, JavaType[] superInterfaces) {
+        if (_referencedType != null) {
+            return _referencedType.withStaticTyping();
+        }
         return null;
     }
-
     @Override
     public boolean isContainerType() {
+        if (_referencedType != null) {
+            return _referencedType.isContainerType();
+        }
         return false;
     }
-
     @Override
     public String toString() {
         StringBuilder sb = new StringBuilder(40)
@@ -93,9 +78,7 @@ public class ResolvedRecursiveType extends TypeBase
         if (_referencedType == null) {
             sb.append("UNRESOLVED");
         } else {
-            // [databind#1301]: Typically resolves to a loop so short-cut
-            //   and only include type-erased class
-            sb.append(_referencedType.getRawClass().getName());
+            sb.append(_referencedType.toString());
         }
         return sb.toString();
     }
