diff --git a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
index e292e1300..a46b078b7 100644
--- a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
+++ b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
@@ -36,11 +36,10 @@ public class SpyAnnotationEngine implements AnnotationEngine {
                     Object instance = field.get(testClass);
                     if (instance == null) {
                         throw new MockitoException("Cannot create a @Spy for '" + field.getName() + "' field because the *instance* is missing\n" +
-                        		  "The instance must be created *before* initMocks();\n" +
-                                  "Example of correct usage of @Spy:\n" +
-                            	  "   @Spy List mock = new LinkedList();\n" +
-                            	  "   //also, don't forget about MockitoAnnotations.initMocks();");
-
+                                "The instance must be created *before* initMocks();\n" +
+                                "Example of correct usage of @Spy:\n" +
+                                "   @Spy List mock = new LinkedList();\n" +
+                                "   //also, don't forget about MockitoAnnotations.initMocks();");
                     }
                     if (new MockUtil().isMock(instance)) {
                         // instance has been spied earlier
@@ -48,6 +47,8 @@ public class SpyAnnotationEngine implements AnnotationEngine {
                     } else {
                         field.set(testClass, Mockito.spy(instance));
                     }
+                } catch (IllegalArgumentException e) {
+                    throw new MockitoException("Problems initiating spied field " + field.getName(), e);
                 } catch (IllegalAccessException e) {
                     throw new MockitoException("Problems initiating spied field " + field.getName(), e);
                 } finally {
