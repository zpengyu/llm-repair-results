diff --git a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
index e292e1300..ea4f1224e 100644
--- a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
+++ b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
@@ -35,12 +35,21 @@ public class SpyAnnotationEngine implements AnnotationEngine {
                 try {
                     Object instance = field.get(testClass);
                     if (instance == null) {
-                        throw new MockitoException("Cannot create a @Spy for '" + field.getName() + "' field because the *instance* is missing\n" +
-                        		  "The instance must be created *before* initMocks();\n" +
-                                  "Example of correct usage of @Spy:\n" +
-                            	  "   @Spy List mock = new LinkedList();\n" +
-                            	  "   //also, don't forget about MockitoAnnotations.initMocks();");
-
+                        try {
+                            instance = newInstance(field.getType());
+                        } catch (InstantiationException e) {
+                            throw new MockitoException("Cannot create a @Spy for '" + field.getName() + "' field because the *instance* is missing\n" +
+                              "The instance must be created *before* initMocks();\n" +
+                              "Example of correct usage of @Spy:\n" +
+                              "   @Spy List mock = new LinkedList();\n" +
+                              "   //also, don't forget about MockitoAnnotations.initMocks();");
+                        } catch (IllegalAccessException e) {
+                            throw new MockitoException("Cannot create a @Spy for '" + field.getName() + "' field because the *instance* is missing\n" +
+                              "The instance must be created *before* initMocks();\n" +
+                              "Example of correct usage of @Spy:\n" +
+                              "   @Spy List mock = new LinkedList();\n" +
+                              "   //also, don't forget about MockitoAnnotations.initMocks();");
+                        }
                     }
                     if (new MockUtil().isMock(instance)) { 
                         // instance has been spied earlier
@@ -56,7 +65,13 @@ public class SpyAnnotationEngine implements AnnotationEngine {
             }
         }
     }
-    
+	private Object newInstance(Class<?> type) throws InstantiationException, IllegalAccessException {
+		try {
+			return type.newInstance();
+		} catch (NoSuchMethodError e) {
+			return ConstructorUtil.instantiate(type);
+		}
+	}    
     //TODO duplicated elsewhere
     void assertNoAnnotations(Class annotation, Field field, Class ... undesiredAnnotations) {
         for (Class u : undesiredAnnotations) {
