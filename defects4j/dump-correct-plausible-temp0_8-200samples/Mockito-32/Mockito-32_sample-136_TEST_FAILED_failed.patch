diff --git a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
index e292e1300..6bca48d4f 100644
--- a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
+++ b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
@@ -36,13 +36,12 @@ public class SpyAnnotationEngine implements AnnotationEngine {
                     Object instance = field.get(testClass);
                     if (instance == null) {
                         throw new MockitoException("Cannot create a @Spy for '" + field.getName() + "' field because the *instance* is missing\n" +
-                        		  "The instance must be created *before* initMocks();\n" +
+                                  "The instance must be created *before* initMocks();\n" +
                                   "Example of correct usage of @Spy:\n" +
-                            	  "   @Spy List mock = new LinkedList();\n" +
-                            	  "   //also, don't forget about MockitoAnnotations.initMocks();");
-
+                                  "   @Spy List mock = new LinkedList();\n" +
+                                  "   //also, don't forget about MockitoAnnotations.initMocks();");
                     }
-                    if (new MockUtil().isMock(instance)) { 
+                    if (isSpy(instance)) { 
                         // instance has been spied earlier
                         Mockito.reset(instance);
                     } else {
@@ -56,7 +55,9 @@ public class SpyAnnotationEngine implements AnnotationEngine {
             }
         }
     }
-    
+	private boolean isSpy(Object instance) {
+		return instance instanceof Spy;
+	}    
     //TODO duplicated elsewhere
     void assertNoAnnotations(Class annotation, Field field, Class ... undesiredAnnotations) {
         for (Class u : undesiredAnnotations) {
