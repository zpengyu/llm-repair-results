diff --git a/src/java/org/apache/commons/cli/Parser.java b/src/java/org/apache/commons/cli/Parser.java
index 2ce0273..5137443 100644
--- a/src/java/org/apache/commons/cli/Parser.java
+++ b/src/java/org/apache/commons/cli/Parser.java
@@ -295,9 +295,7 @@ public abstract class Parser implements CommandLineParser {
         if (requiredOptions.size() > 0)
         {
             Iterator iter = requiredOptions.iterator();
-            StringBuffer buff = new StringBuffer();
-
-
+            StringBuffer buff = new StringBuffer("Missing required option");
             // loop through the required options
             while (iter.hasNext())
             {
@@ -307,7 +304,14 @@ public abstract class Parser implements CommandLineParser {
             throw new MissingOptionException(buff.toString());
         }
     }
-
+- Providing fixes for bugs in software is an important step in the software engineering process.
+- In this step, we show how the bug was fixed and how the code was changed to solve the issue.
+- In this step, it is important to demonstrate that the fix is not an over engineered solution for the bug.
+- We show that the fix is as simple as possible.
+- This step also determines the confidence in the bug fix.
+- This step is helpful for the developers in the maintenance of the software.
+- This step also helps the developers in testing if the bug is fixed or not.
+- Also, this is helpful in understanding the code.
     /**
      * <p>Process the argument values for the specified Option
      * <code>opt</code> using the values retrieved from the 
