diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
index b0797059f..fafaf2e12 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
@@ -282,8 +282,13 @@ public class ExternalTypeHandler
                         "Missing property '%s' for external type id '%s'",
                         prop.getName(), _properties[i].getTypePropertyName());
             }
-            values[i] = _deserialize(p, ctxt, i, typeId);
-
+            // 26-Oct-2012, tatu: As per [databind#88], must allow use of "default implementation"
+            //   even if type id is specified (it is override for base type, not mandatory)
+            JavaType t = _properties[i].getDefaultType();
+            if (t == null) {
+                t = _properties[i].getType(ctxt, typeId);
+            }
+            values[i] = _valueDeserializer(i).deserializeWithType(p, ctxt, t);
             final SettableBeanProperty prop = extProp.getProperty();
             // also: if it's creator prop, fill in
             if (prop.getCreatorIndex() >= 0) {
@@ -295,7 +299,15 @@ public class ExternalTypeHandler
                 if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
                     // 31-May-2018, tatu: [databind#1328] if id is NOT plain `String`, need to
                     //    apply deserializer... fun fun.
-                    buffer.assignParameter(typeProp, typeId);
+                    if (typeId.getClass() != String.class) {
+                        if (!typeProp.visibleInView(ctxt.getActiveView())) {
+                            continue;
+                        }
+                        final JsonDeserializer<Object> typeDeser = _findTypeDeserializer(ctxt, typeProp.getType());
+                        buffer.assignParameter(typeProp, typeDeser.deserialize(p, ctxt));
+                    } else {
+                        buffer.assignParameter(typeProp, typeId);
+                    }
                 }
             }
         }
