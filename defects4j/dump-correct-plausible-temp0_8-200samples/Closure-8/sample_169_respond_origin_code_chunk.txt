
public void visit(NodeTraversal t, Node n, Node parent) {
  if (n.isVar()) {
    blacklistStubVars(t, n);
  }

  // Only care about var nodes
  if (!n.isVar() && !canBeRedeclared(n, t.getScope())) return;

  // If we've already looked at this node, skip it
  if (nodesToCollapse.contains(n)) return;

  // Adjacent VAR children of an IF node are the if and else parts and can't
  // be collapsed
  if (parent.isIf()) return;

  Node varNode = n;

  boolean hasVar = n.isVar();

  // Find variable declarations that follow this one (if any)
  n = n.getNext();

  boolean hasNodesToCollapse = false;

  while (n != null &&
      (n.isVar() || canBeRedeclared(n, t.getScope()))) {

    if (n.isVar()) {
      blacklistStubVars(t, n);
      hasVar = true;
    }

    nodesToCollapse.add(n);
    hasNodesToCollapse = true;

    n = n.getNext();
  }

  if (hasNodesToCollapse && hasVar) {
    nodesToCollapse.add(varNode);
    collapses.add(new Collapse(varNode, n, parent));
  }
}

