diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
index 41fb612e..73bfc899 100644
--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
@@ -220,7 +220,7 @@ public class RandomStringUtils {
      * @throws IllegalArgumentException if {@code count} &lt; 0 or the provided chars array is empty.
      * @since 2.0
      */
-    public static String random(int count, int start, int end, boolean letters, boolean numbers,
+public static String random(int count, int start, int end, boolean letters, boolean numbers,
                                 char[] chars, Random random) {
         if (count == 0) {
             return "";
@@ -230,33 +230,36 @@ public class RandomStringUtils {
         if (chars != null && chars.length == 0) {
             throw new IllegalArgumentException("The chars array must not be empty");
         }
-
-        if (start == 0 && end == 0) {
-            if (chars != null) {
+        if(start == 0 && end == 0) {
+            if(chars != null) {
                 end = chars.length;
             } else {
-                if (!letters && !numbers) {
-                    end = Integer.MAX_VALUE;
-                } else {
+                if(!letters && !numbers) {
                     end = 'z' + 1;
-                    start = ' ';
+                    start = 32;
+                } else {
+                    if(letters) {
+                        start = 65;
+                        end = 122;
+                    }
+                    if(numbers) {
+                        end += 10;
+                    }
                 }
             }
         }
-
         char[] buffer = new char[count];
         int gap = end - start;
-
         while (count-- != 0) {
             char ch;
-            if (chars == null) {
-                ch = (char) (random.nextInt(gap) + start);
+            if(chars == null) {
+                ch = (char)(random.nextInt(gap) + start);
             } else {
                 ch = chars[random.nextInt(gap) + start];
             }
-            if (letters && Character.isLetter(ch)
-                    || numbers && Character.isDigit(ch)
-                    || !letters && !numbers) {
+            if(letters && Character.isLetter(ch) ||
+                    numbers && Character.isDigit(ch) ||
+                    !letters && !numbers) {
                 if(ch >= 56320 && ch <= 57343) {
                     if(count == 0) {
                         count++;
@@ -264,14 +267,14 @@ public class RandomStringUtils {
                         // low surrogate, insert high surrogate after putting it in
                         buffer[count] = ch;
                         count--;
-                        buffer[count] = (char) (55296 + random.nextInt(128));
+                        buffer[count] = (char)(55296 + random.nextInt(128));
                     }
                 } else if(ch >= 55296 && ch <= 56191) {
                     if(count == 0) {
                         count++;
                     } else {
                         // high surrogate, insert low surrogate before putting it in
-                        buffer[count] = (char) (56320 + random.nextInt(128));
+                        buffer[count] = (char)(56320 + random.nextInt(128));
                         count--;
                         buffer[count] = ch;
                     }
