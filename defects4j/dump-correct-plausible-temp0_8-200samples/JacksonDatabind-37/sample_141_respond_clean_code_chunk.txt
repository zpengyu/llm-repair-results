    protected JavaType _narrow(Class<?> subclass)
    {
        // Should we check that there is a sub-class relationship?
        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
        //    placeholder values, so no.
        /*
        if (!_class.isAssignableFrom(subclass)) {
            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                    +_class.getName());
        }
        */
        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
        if (_class == subclass) {
            return this;
        }
        // 15-Jan-2016, tatu: Commented code, if uncommented, causes regression
        //    with placeholder values, due to failure to recognize placeholders.
        // 15-Jan-2016, tatu: As per [databind#1292], need to retain placeholders
        //   as-is
        //JavaType newType = new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
        //        _valueHandler, _typeHandler, _asStatic);
        //return newType.withHandlersFrom(_thisType);
        JavaType newType = new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
                _valueHandler, _typeHandler, _asStatic);
        return newType.withHandlersFrom(_thisType);
    }