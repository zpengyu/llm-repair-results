    protected JavaType _narrow(Class<?> subclass)
    {
        if (_class == subclass) {
            return this;
        }
        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
        //    placeholder values, so no.
        if (!_class.isAssignableFrom(subclass)) {
            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                    +_class.getName());
        }
        /*
        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
                _valueHandler, _typeHandler, _asStatic);
        */
        // 15-Jan-2016, tatu: Need to re-resolve generic types, if any
        JavaType newType;
        // 15-Jan-2016, tatu: As per #596, try to preserve some aspects of resolved
        //   types, if there is no re-resolve needed.
        if (!hasHandlers() && _superClass == null && _superInterfaces == null) {
            newType = new SimpleType(subclass, _bindings);
        } else {
            newType = new SimpleType(subclass, _bindings,
                    _superClass, _superInterfaces,
                    _valueHandler, _typeHandler, _asStatic);
        }
        newType._asClass = _asClass;
        return newType;
    }