diff --git a/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java b/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
index 0fda4d76f..06940284e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
@@ -119,23 +119,15 @@ public class SimpleType // note: until 2.6 was final
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
-        if (_class == subclass) {
+        // [databind#892]: Need to allow narrowing of unresolved types as well
+        if (subclass.isAssignableFrom(_class)) { // First: may already be assignable
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+        JavaType newType = _fromClass(subclass, this);
+        newType = newType.withValueHandler(_valueHandler);
+        newType.getClass(); // trigger resolution
+        return newType;
     }
-
     @Override
     public JavaType withContentType(JavaType contentType) {
         throw new IllegalArgumentException("Simple types have no content types; can not call withContentType()");
