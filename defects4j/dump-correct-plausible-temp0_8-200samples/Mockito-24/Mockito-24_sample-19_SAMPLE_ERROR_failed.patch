diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
index 820c09ceb..ade870eb4 100644
--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
@@ -70,16 +70,25 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+            Object[] args = invocation.getArguments();
+            Object self = invocation.getMock();
+            if (args.length == 1 && args[0] != null && isMock(args[0])) {
+                MockName name = mockUtil.getMockName(self);
+                MockName otherName = mockUtil.getMockName(args[0]);
+                if (name.isDefault() && otherName.isDefault()) {
+                    //see issue 184.
+                    //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
+                    //Only for compareTo() method by the Comparable interface
+                    return 1;
+                }
+            }
         }
-
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
-    
+	private boolean isMock(Object arg) {
+		return MockUtil.isMock(arg);
+	}    
     Object returnValueFor(Class<?> type) {
         if (Primitives.isPrimitiveOrWrapper(type)) {
             return Primitives.defaultValueForPrimitiveOrWrapper(type);
