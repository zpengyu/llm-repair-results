    public Object answer(InvocationOnMock invocation) {
        if (methodsGuru.isToString(invocation.getMethod())) {
            Object mock = invocation.getMock();
            MockName name = mockUtil.getMockName(mock);
            if (name.isDefault()) {
                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
            } else {
                return name.toString();
            }
        } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
        	Object[] args = invocation.getArguments();
			if (args.length != 1) {
				return 1;
			}
        	Class<?> returnType = invocation.getMethod().getReturnType();
        	
        	if(returnType.equals(boolean.class)){
        		return false;
        	}
        	if(returnType.equals(byte.class)){
        		return (byte)1;
        	}
        	if(returnType.equals(char.class)){
        		return (char)1;
        	}
        	if(returnType.equals(short.class)){
        		return (short)1;
        	}
        	if(returnType.equals(int.class)){
        		return 1;
        	}
        	if(returnType.equals(long.class)){
        		return (long)1;
        	}
        	if(returnType.equals(float.class)){
        		return (float)1.0;
        	}
        	if(returnType.equals(double.class)){
        		return (double)1.0;
        	}
        }
        
        Class<?> returnType = invocation.getMethod().getReturnType();
        return returnValueFor(returnType);
    }

