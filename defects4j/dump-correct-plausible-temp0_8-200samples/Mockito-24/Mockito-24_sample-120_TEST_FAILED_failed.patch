diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
index 820c09ceb..505c0a57c 100644
--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
@@ -70,12 +70,36 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+        	Object[] args = invocation.getArguments();
+			if (args.length != 1) {
+				return 1;
+			}
+        	Class<?> returnType = invocation.getMethod().getReturnType();
+        	if(returnType.equals(boolean.class)){
+        		return false;
+        	}
+        	if(returnType.equals(byte.class)){
+        		return (byte)1;
+        	}
+        	if(returnType.equals(char.class)){
+        		return (char)1;
+        	}
+        	if(returnType.equals(short.class)){
+        		return (short)1;
+        	}
+        	if(returnType.equals(int.class)){
+        		return 1;
+        	}
+        	if(returnType.equals(long.class)){
+        		return (long)1;
+        	}
+        	if(returnType.equals(float.class)){
+        		return (float)1.0;
+        	}
+        	if(returnType.equals(double.class)){
+        		return (double)1.0;
+        	}
         }
-
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }    
