    public Object answer(InvocationOnMock invocation) {
        Class<?> returnType = invocation.getMethod().getReturnType();
        return returnValueFor(returnType);
    }

    private Object returnValueFor(Class<?> returnType) {
        if (methodsGuru.isToString(returnType)) {
            return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
        } else if (methodsGuru.isCompareToMethod(returnType)) {
            //see issue 184.
            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
            //Only for compareTo() method by the Comparable interface
            return 1;
        }
        return returnType;
    }

