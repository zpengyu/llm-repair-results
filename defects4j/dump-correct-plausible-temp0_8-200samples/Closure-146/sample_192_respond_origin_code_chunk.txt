  public TypePair getTypesUnderInequality(JSType that) {
    if (that instanceof UnionType) {
      UnionType union = (UnionType) that;
      boolean found = false;
      List<JSType> newAlternates = new ArrayList<>();
      for (JSType alternate : union.alternates) {
        TypePair p = alternate.getTypesUnderInequality(this);
        if (p.typeA == null || p.typeB == null) {
          found = true;
          break;
        } else {
          newAlternates.add(p.typeA);
          newAlternates.add(p.typeB);
        }
      }
      if (!found) {
        return new TypePair(
            JSType.fromTypeVar(newAlternates),
            JSType.fromTypeVar(newAlternates));
      }
    }
    return new TypePair(this, that);
  }

