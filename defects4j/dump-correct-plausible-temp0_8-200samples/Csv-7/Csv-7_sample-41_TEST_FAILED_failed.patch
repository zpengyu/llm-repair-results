diff --git a/src/main/java/org/apache/commons/csv/CSVParser.java b/src/main/java/org/apache/commons/csv/CSVParser.java
index e64800a..93fb099 100644
--- a/src/main/java/org/apache/commons/csv/CSVParser.java
+++ b/src/main/java/org/apache/commons/csv/CSVParser.java
@@ -350,7 +350,7 @@ public final class CSVParser implements Iterable<CSVRecord>, Closeable {
         final String[] formatHeader = this.format.getHeader();
         if (formatHeader != null) {
             hdrMap = new LinkedHashMap<String, Integer>();
-
+            boolean afterHeader = false;
             String[] header = null;
             if (formatHeader.length == 0) {
                 // read the header from the first line of the file
@@ -358,9 +358,11 @@ public final class CSVParser implements Iterable<CSVRecord>, Closeable {
                 if (nextRecord != null) {
                     header = nextRecord.values();
                 }
+                afterHeader = true;
             } else {
                 if (this.format.getSkipHeaderRecord()) {
                     this.nextRecord();
+                    afterHeader = true;
                 }
                 header = formatHeader;
             }
@@ -368,7 +369,11 @@ public final class CSVParser implements Iterable<CSVRecord>, Closeable {
             // build the name to index mappings
             if (header != null) {
                 for (int i = 0; i < header.length; i++) {
-                    hdrMap.put(header[i], Integer.valueOf(i));
+                    if (!afterHeader && hdrMap.put(header[i], Integer.valueOf(i)) != null) {
+                        throw new IllegalArgumentException("Duplicate header name: \"" + header[i] + "\"");
+                    } else if (afterHeader && hdrMap.get(header[i]) == null) {
+                        throw new IllegalArgumentException("Header name not found in the map: \"" + header[i] + "\"");
+                    }
                 }
             }
         }
