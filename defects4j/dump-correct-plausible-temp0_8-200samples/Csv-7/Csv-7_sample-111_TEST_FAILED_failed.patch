diff --git a/src/main/java/org/apache/commons/csv/CSVParser.java b/src/main/java/org/apache/commons/csv/CSVParser.java
index e64800a..b4c875c 100644
--- a/src/main/java/org/apache/commons/csv/CSVParser.java
+++ b/src/main/java/org/apache/commons/csv/CSVParser.java
@@ -348,27 +348,17 @@ public final class CSVParser implements Iterable<CSVRecord>, Closeable {
     private Map<String, Integer> initializeHeader() throws IOException {
         Map<String, Integer> hdrMap = null;
         final String[] formatHeader = this.format.getHeader();
-        if (formatHeader != null) {
+        if (formatHeader != null && this.format.getHeader().length == 0) {
+            // read the header from the first line of the file
             hdrMap = new LinkedHashMap<String, Integer>();
-
-            String[] header = null;
-            if (formatHeader.length == 0) {
-                // read the header from the first line of the file
-                final CSVRecord nextRecord = this.nextRecord();
-                if (nextRecord != null) {
-                    header = nextRecord.values();
-                }
-            } else {
-                if (this.format.getSkipHeaderRecord()) {
-                    this.nextRecord();
-                }
-                header = formatHeader;
-            }
-
-            // build the name to index mappings
-            if (header != null) {
-                for (int i = 0; i < header.length; i++) {
-                    hdrMap.put(header[i], Integer.valueOf(i));
+            final CSVRecord nextRecord = this.nextRecord();
+            if (nextRecord != null) {
+                final String[] header = nextRecord.values();
+                // build the name to index mappings
+                if (header != null) {
+                    for (int i = 0; i < header.length; i++) {
+                        hdrMap.put(header[i], Integer.valueOf(i));
+                    }
                 }
             }
         }
