diff --git a/src/main/java/org/apache/commons/csv/CSVParser.java b/src/main/java/org/apache/commons/csv/CSVParser.java
index e64800a..aa834d7 100644
--- a/src/main/java/org/apache/commons/csv/CSVParser.java
+++ b/src/main/java/org/apache/commons/csv/CSVParser.java
@@ -346,35 +346,49 @@ public final class CSVParser implements Iterable<CSVRecord>, Closeable {
      * @return null if the format has no header.
      */
     private Map<String, Integer> initializeHeader() throws IOException {
-        Map<String, Integer> hdrMap = null;
         final String[] formatHeader = this.format.getHeader();
-        if (formatHeader != null) {
-            hdrMap = new LinkedHashMap<String, Integer>();
-
-            String[] header = null;
-            if (formatHeader.length == 0) {
-                // read the header from the first line of the file
-                final CSVRecord nextRecord = this.nextRecord();
-                if (nextRecord != null) {
-                    header = nextRecord.values();
-                }
-            } else {
-                if (this.format.getSkipHeaderRecord()) {
-                    this.nextRecord();
-                }
-                header = formatHeader;
+        if (formatHeader != null && formatHeader.length > 0) {
+            final LinkedHashMap<String, Integer> hdrMap = new LinkedHashMap<String, Integer>();
+            String[] header;
+            if (this.format.getSkipHeaderRecord()) {
+                this.nextRecord();
             }
-
+            header = formatHeader;
             // build the name to index mappings
             if (header != null) {
                 for (int i = 0; i < header.length; i++) {
                     hdrMap.put(header[i], Integer.valueOf(i));
                 }
             }
+            return hdrMap;
+        } else {
+            Map<String, Integer> hdrMap = null;
+            final String[] formatHeader = this.format.getHeader();
+            if (formatHeader != null) {
+                hdrMap = new LinkedHashMap<String, Integer>();
+                String[] header = null;
+                if (formatHeader.length == 0) {
+                    // read the header from the first line of the file
+                    final CSVRecord nextRecord = this.nextRecord();
+                    if (nextRecord != null) {
+                        header = nextRecord.values();
+                    }
+                } else {
+                    if (this.format.getSkipHeaderRecord()) {
+                        this.nextRecord();
+                    }
+                    header = formatHeader;
+                }
+                // build the name to index mappings
+                if (header != null) {
+                    for (int i = 0; i < header.length; i++) {
+                        hdrMap.put(header[i], Integer.valueOf(i));
+                    }
+                }
+            }
+            return hdrMap;
         }
-        return hdrMap;
     }
-
     public boolean isClosed() {
         return this.lexer.isClosed();
     }
