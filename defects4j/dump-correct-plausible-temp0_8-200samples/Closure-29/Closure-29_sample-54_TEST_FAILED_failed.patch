diff --git a/src/com/google/javascript/jscomp/InlineObjectLiterals.java b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
index a26b500d..c4d95332 100644
--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java
+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
@@ -178,9 +176,10 @@ class InlineObjectLiterals implements CompilerPass {
           // We short-circuit this problem by bailing out if we see a reference
           // to a property that isn't defined on the object literal. This
           // isn't a perfect algorithm, but it should catch most cases.
+          //
+          // TODO(user): Handle properties defined on the prototype chain.
           continue;
         }
-
         // Only rewrite VAR declarations or simple assignment statements
         if (!isVarOrAssignExprLhs(name)) {
            return false;
@@ -196,8 +193,7 @@ class InlineObjectLiterals implements CompilerPass {
         if (!val.isObjectLit()) {
           return false;
         }
-
-        // Make sure that the value is not self-refential. IOW,
+        // Make sure that the value is not self-referential. IOW,
         // disallow things like x = {b: x.a}.
         //
         // TODO: Only exclude unorderable self-referential
