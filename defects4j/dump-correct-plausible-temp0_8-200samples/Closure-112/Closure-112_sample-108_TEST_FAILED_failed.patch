diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 6c9c7846..0ae29ed6 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1198,17 +1195,16 @@ class TypeInference
     TemplateTypeReplacer replacer = new TemplateTypeReplacer(
         registry, inferred);
     Node callTarget = n.getFirstChild();
-
+    // Replacing the template types in fnType might have broken fnType's implicit
+    // parameter and return types. The only way to fix this is to recompute the
+    // implicit return type.
     FunctionType replacementFnType = fnType.visit(replacer)
         .toMaybeFunctionType();
     Preconditions.checkNotNull(replacementFnType);
-
-    callTarget.setJSType(replacementFnType);
+    callTarget.setJSType(replacementFnType.getReturnType());
     n.setJSType(replacementFnType.getReturnType());
-
     return replacer.madeChanges;
   }
-
   private FlowScope traverseNew(Node n, FlowScope scope) {
     scope = traverseChildren(n, scope);
 
