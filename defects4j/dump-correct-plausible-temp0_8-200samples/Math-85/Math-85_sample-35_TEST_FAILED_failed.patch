diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
index df45ce435..b80fd317d 100644
--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
@@ -184,29 +183,26 @@ public class UnivariateRealSolverUtils {
         double fa;
         double fb;
         int numIterations = 0 ;
-    
-        do {
-            a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
-            
-            fb = function.value(b);
-            numIterations++ ;
-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) &&
+        if (function.value(a) * function.value(b) >= 0) {
+            do {
+                a = Math.max(a - 1.0, lowerBound);
+                b = Math.min(b + 1.0, upperBound);
+                fa = function.value(a);
+                fb = function.value(b);
+                numIterations++ ;
+            } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
-
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
+            if (fa * fb >= 0.0 ) {
+                throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
                       "final b value={6}, f(a)={7}, f(b)={8}",
                       numIterations, maximumIterations, initial,
                       lowerBound, upperBound, a, b, fa, fb);
+            }
         }
-        
         return new double[]{a, b};
     }
-
     /**
      * Compute the midpoint of two values.
      * 
