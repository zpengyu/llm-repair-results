diff --git a/src/com/google/javascript/rhino/jstype/ArrowType.java b/src/com/google/javascript/rhino/jstype/ArrowType.java
index 0c0ef637..b3d571dc 100644
--- a/src/com/google/javascript/rhino/jstype/ArrowType.java
+++ b/src/com/google/javascript/rhino/jstype/ArrowType.java
@@ -132,27 +126,24 @@ final class ArrowType extends JSType {
         // checked. Strictly speaking, this is not a correct formulation,
         // because now a sub-function can required arguments that are var_args
         // in the super-function. So we special-case this.
-
-      // don't advance if we have variable arguments
-      if (!thisIsVarArgs) {
+      if (thisIsVarArgs && !thatIsVarArgs) {
+        thatParam = thatParam.getNext();
+      } else if (!thisIsVarArgs && !thatIsVarArgs) {
         thisParam = thisParam.getNext();
-      }
-      if (!thatIsVarArgs) {
         thatParam = thatParam.getNext();
-      }
-
-      // both var_args indicates the end
-      if (thisIsVarArgs && thatIsVarArgs) {
+      } else if (!thisIsVarArgs && thatIsVarArgs) {
+        thisParam = thisParam.getNext();
+      } else if (thisIsVarArgs && thatIsVarArgs) {
         thisParam = null;
         thatParam = null;
       }
     }
-
     // "that" can't be a supertype, because it's missing a required arguement.
-
+    if (thisParam != null && !thisParam.isVarArgs()) {
+      return false;
+    }
     return true;
   }
-
   /**
    * @return True if our parameter spec is equal to {@code that}'s parameter
    *     spec.
