diff --git a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
index 24141a4..321eaff 100644
--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
@@ -80,22 +80,28 @@ public class XmlTreeBuilder extends TreeBuilder {
         return el;
     }
 
-    void insert(Token.Comment commentToken) {
-        Comment comment = new Comment(commentToken.getData());
-        Node insert = comment;
-        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)
-            // so we do a bit of a hack and parse the data as an element to pull the attributes out
-            String data = comment.getData();
-            if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
-                Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri, Parser.xmlParser());
-                    Element el = doc.child(0);
-                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
-                    insert.attributes().addAll(el.attributes());
-            }
+void insert(Token.Comment commentToken) {
+    String data = commentToken.getData();
+    String elName = data.substring(1, data.length() -1);
+    String tagName = "";
+    String charAt0 = data.substring(0, 1);
+    boolean isXmlDeclaration = "!".equals(charAt0) || "?".equals(charAt0);
+    if(isXmlDeclaration){
+        tagName = settings.normalizeTag(elName);
+    }
+    Comment comment = new Comment(commentToken.getData());
+    Node insert = comment;
+    if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)
+        // so we do a bit of a hack and parse the data as an element to pull the attributes out
+        if (isXmlDeclaration) {
+            Document doc = Jsoup.parse("<" + elName + ">", baseUri, Parser.xmlParser());
+            Element el = doc.child(0);
+            insert = new XmlDeclaration(tagName, "!".equals(charAt0));
+            insert.attributes().addAll(el.attributes());
         }
-        insertNode(insert);
     }
-
+    insertNode(insert);
+}
     void insert(Token.Character token) {
         final String data = token.getData();
         insertNode(token.isCData() ? new CDataNode(data) : new TextNode(data));
