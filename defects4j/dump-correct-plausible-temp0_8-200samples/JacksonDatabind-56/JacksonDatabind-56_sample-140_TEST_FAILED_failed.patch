diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
index 01a819a9f..b2c6d2d9d 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
@@ -261,16 +255,15 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
                     int j = value.indexOf(':', i);
                     int port = j > -1 ? Integer.parseInt(value.substring(j + 1)) : 0;
                     return new InetSocketAddress(value.substring(0, i + 1), port);
-                } else {
-                    int ix = value.indexOf(':');
-                    if (ix >= 0 && value.indexOf(':', ix + 1) < 0) {
-                        // host:port
-                        int port = Integer.parseInt(value.substring(ix+1));
-                        return new InetSocketAddress(value.substring(0, ix), port);
-                    }
-                    // host or unbracketed IPv6, without port number
-                    return new InetSocketAddress(value, 0);
                 }
+                int ix = value.indexOf(':');
+                if (ix >= 0 && value.indexOf(':', ix + 1) < 0) {
+                    // host:port
+                    int port = Integer.parseInt(value.substring(ix+1));
+                    return new InetSocketAddress(value.substring(0, ix), port);
+                }
+                // host or unbracketed IPv6, without port number
+                return new InetSocketAddress(value, 0);
             }
             throw new IllegalArgumentException();
         }
@@ -287,7 +279,4 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             }
             return super._deserializeFromEmptyString();
         }
-
-
-    }
-}
+    }}
