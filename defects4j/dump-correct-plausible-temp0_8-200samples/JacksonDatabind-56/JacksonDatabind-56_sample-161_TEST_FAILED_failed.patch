diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
index 01a819a9f..096ca2460 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
@@ -228,18 +224,14 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
                 return Pattern.compile(value);
             case STD_LOCALE:
                 {
-                    int ix = value.indexOf('_');
-                    if (ix < 0) { // single argument
-                        return new Locale(value);
+                    String [] parts = value.split("_");
+                    if (parts.length == 1) {
+                        return new Locale(parts[0]);
                     }
-                    String first = value.substring(0, ix);
-                    value = value.substring(ix+1);
-                    ix = value.indexOf('_');
-                    if (ix < 0) { // two pieces
-                        return new Locale(first, value);
+                    if (parts.length == 2) {
+                        return new Locale(parts[0],parts[1]);
                     }
-                    String second = value.substring(0, ix);
-                    return new Locale(first, second, value.substring(ix+1));
+                    return new Locale(parts[0],parts[1],parts[2]);
                 }
             case STD_CHARSET:
                 return Charset.forName(value);
@@ -287,7 +276,4 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             }
             return super._deserializeFromEmptyString();
         }
-
-
-    }
-}
+    }}
