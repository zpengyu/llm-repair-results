diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
index 01a819a9f..73f0db250 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
@@ -178,30 +178,6 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
      * 
      * @since 2.4
      */
-    public static class Std extends FromStringDeserializer<Object>
-    {
-        private static final long serialVersionUID = 1;
-
-        public final static int STD_FILE = 1;
-        public final static int STD_URL = 2;
-        public final static int STD_URI = 3;
-        public final static int STD_CLASS = 4;
-        public final static int STD_JAVA_TYPE = 5;
-        public final static int STD_CURRENCY = 6;
-        public final static int STD_PATTERN = 7;
-        public final static int STD_LOCALE = 8;
-        public final static int STD_CHARSET = 9;
-        public final static int STD_TIME_ZONE = 10;
-        public final static int STD_INET_ADDRESS = 11;
-        public final static int STD_INET_SOCKET_ADDRESS = 12;
-
-        protected final int _kind;
-        
-        protected Std(Class<?> valueType, int kind) {
-            super(valueType);
-            _kind = kind;
-        }
-
         @Override
         protected Object _deserialize(String value, DeserializationContext ctxt) throws IOException
         {
@@ -221,7 +197,6 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             case STD_JAVA_TYPE:
                 return ctxt.getTypeFactory().constructFromCanonical(value);
             case STD_CURRENCY:
-                // will throw IAE if unknown:
                 return Currency.getInstance(value);
             case STD_PATTERN:
                 // will throw IAE (or its subclass) if malformed
@@ -273,21 +246,4 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
                 }
             }
             throw new IllegalArgumentException();
-        }
-
-        @Override
-        protected Object _deserializeFromEmptyString() throws IOException {
-            // As per [databind#398], URI requires special handling
-            if (_kind == STD_URI) {
-                return URI.create("");
-            }
-            // As per [databind#1123], Locale too
-            if (_kind == STD_LOCALE) {
-                return Locale.ROOT;
-            }
-            return super._deserializeFromEmptyString();
-        }
-
-
-    }
-}
+        }}
