diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java
index 316efa3a9..af43c5abb 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java
@@ -581,25 +579,8 @@ public class BuilderBasedDeserializer
             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
             if (creatorProp != null) {
                 if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
-                    t = p.nextToken();
-                    Object bean;
-                    try {
-                        bean = creator.build(ctxt, buffer);
-                    } catch (Exception e) {
-                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
-                        continue;
-                    }
-                    while (t == JsonToken.FIELD_NAME) {
-                        p.nextToken();
-                        tokens.copyCurrentStructure(p);
-                        t = p.nextToken();
-                    }
-                    tokens.writeEndObject();
-                    if (bean.getClass() != _beanType.getRawClass()) {
-                        ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
-                        return null;
-                    }
-                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
+                    t = p.nextToken(); // move to following FIELD_NAME/END_OBJECT
+                    break;
                 }
                 continue;
             }
@@ -624,18 +605,29 @@ public class BuilderBasedDeserializer
                 buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
             }
         }
-
         // We hit END_OBJECT, so:
         Object bean;
-        // !!! 15-Feb-2012, tatu: Need to modify creator to use Builder!
         try {
             bean = creator.build(ctxt, buffer);
         } catch (Exception e) {
             return wrapInstantiationProblem(e, ctxt);
         }
-        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
+        if (t == JsonToken.FIELD_NAME) {
+            // if so, need to copy rest of the stuff
+            for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
+                p.nextToken(); // to skip name, point to value
+                tokens.copyCurrentStructure(p);
+            }
+        }
+        tokens.writeEndObject();
+        // and last thing; deserialize Builder-provided properties
+        if (bean != null) {
+            return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
+        }
+        // error?
+        ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
+        return null;
     }
-
     /*
     /**********************************************************
     /* Handling for cases where we have property/-ies with
