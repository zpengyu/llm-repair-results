diff --git a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
index 9eaf0837..c1e67c7c 100644
--- a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
+++ b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
@@ -2168,15 +2149,16 @@ abstract class AbstractPatriciaTrie<K, V> extends AbstractBitwiseTrie<K, V> {
             } else {
                 e = higherEntry(fromKey);
             }
-
-            final K first = e != null ? e.getKey() : null;
-            if (e == null || !getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, first)) {
+            if (e == null) {
                 throw new NoSuchElementException();
             }
-
+            K first = e.getKey();
+            while (!getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, first)) {
+                e = higherEntry(first);
+                first = e != null ? e.getKey() : null;
+            }
             return first;
         }
-
         @Override
         public K lastKey() {
             fixup();
@@ -2187,15 +2168,16 @@ abstract class AbstractPatriciaTrie<K, V> extends AbstractBitwiseTrie<K, V> {
             } else {
                 e = lowerEntry(toKey);
             }
-
-            final K last = e != null ? e.getKey() : null;
-            if (e == null || !getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, last)) {
+            if (e == null) {
                 throw new NoSuchElementException();
             }
-
+            K last = e.getKey();
+            while (!getKeyAnalyzer().isPrefix(prefix, offsetInBits, lengthInBits, last)) {
+                e = lowerEntry(last);
+                last = e != null ? e.getKey() : null;
+            }
             return last;
         }
-
         /**
          * Returns true if this {@link PrefixRangeMap}'s key is a prefix of the provided key.
          */
