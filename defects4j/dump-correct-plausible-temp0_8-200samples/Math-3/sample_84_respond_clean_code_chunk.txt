    public static double linearCombination(final double[] a, final double[] b)
        throws DimensionMismatchException {
        final int len = a.length;
        if (len != b.length) {
            throw new DimensionMismatchException(len, b.length);
        }
        final double[] prod = new double[len];
        for (int i = 0; i < len; i++) {
            prod[i] = a[i] * b[i];
        }
        double result = prod[0];
        for (int i = 1; i < len; i++) {
            result += prod[i];
        }
        if (Double.isNaN(result)) {
            // either we have split infinite numbers or some coefficients were NaNs,
            // just rely on the naive implementation and let IEEE754 handle this
            result = 0;
            for (int i = 0; i < len; ++i) {
                result += a[i] * b[i];
            }
        }
        return result;
    }