diff --git a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
index 78f4d67e..dc236a25 100644
--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
@@ -113,6 +106,9 @@ public class BaseNCodecInputStream extends FilterInputStream {
                 if (!baseNCodec.hasData()) {
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
+                    if (c == -1) {
+                        return -1;
+                    }
                     if (doEncode) {
                         baseNCodec.encode(buf, 0, c);
                     } else {
@@ -139,10 +134,13 @@ public class BaseNCodecInputStream extends FilterInputStream {
      *
      * @throws IllegalArgumentException if the provided skip length is negative
      */
-
         // skip in chunks of 512 bytes
-
-
+        long n = in.skip(len);
+        while (n > 0) {
+            len -= n;
+            n = in.skip(len);
+        }
+        return 0;
     /**
      * {@inheritDoc}
      *
@@ -153,6 +151,6 @@ public class BaseNCodecInputStream extends FilterInputStream {
         //       as long as we have not reached EOF, indicate that there is more
         //       data available. As we do not know for sure how much data is left,
         //       just return 1 as a safe guess.
-
         // use the EOF flag of the underlying codec instance
+        return baseNCodec.hasData() ? 1 : 0;
 }
\ No newline at end of file
