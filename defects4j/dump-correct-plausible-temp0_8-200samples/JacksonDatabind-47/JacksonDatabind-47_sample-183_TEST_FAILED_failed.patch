diff --git a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
index 624a1fd7e..d42b406fa 100644
--- a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
@@ -797,15 +797,9 @@ public abstract class AnnotationIntrospector
     {
         JavaType type = baseType;
         final TypeFactory tf = config.getTypeFactory();
-        
-        // 10-Oct-2015, tatu: For 2.7, we'll need to delegate back to
-        //    now-deprecated secondary methods; this because while
-        //    direct sub-class not yet retrofitted may only override
-        //    those methods. With 2.8 or later we may consider removal
-        //    of these methods
-
-        
-        // Ok: start by refining the main type itself; common to all types
+        // 13-Jul-2015, tatu: Starting from 2.7, we should _not_ need to call
+        //   deprecated methods, as sub-classes should override new methods. But
+        //   for 2.7 need to do that.
         Class<?> serClass = findSerializationType(a);
         if (serClass != null) {
             if (type.hasRawClass(serClass)) {
