public JavaType refineSerializationType(final MapperConfig<?> config,
        final Annotated a, final JavaType baseType) throws JsonMappingException
{
    JavaType type = baseType;
    final TypeFactory tf = config.getTypeFactory();
    // Ok: start by refining the main type itself; common to all types
    Class<?> serClass = findSerializationType(a);
    if (serClass != null) {
        try {
            type = tf.constructGeneralizedType(type, serClass);
        } catch (IllegalArgumentException iae) {
            throw new JsonMappingException(null,
                    String.format("Failed to widen type %s with annotation (value %s), from '%s': %s",
                            type, serClass.getName(), a.getName(), iae.getMessage()),
                            iae);
        }
    }
    // Then further processing for container types
    // First, key type (for Maps, Map-like types):
    if (type.isMapLikeType()) {
        JavaType keyType = type.getKeyType();
        Class<?> keyClass = findSerializationKeyType(a, keyType);
        if (keyClass != null) {
            try {
                keyType = tf.constructSpecializedType(keyType, keyClass);
            } catch (IllegalArgumentException iae) {
                throw new JsonMappingException(null,
                        String.format("Failed to narrow key type of %s with concrete-type annotation (value %s), from '%s': %s",
                                type, keyClass.getName(), a.getName(), iae.getMessage()),
                                iae);
            }
            type = ((MapLikeType) type).withKeyType(keyType);
        }
    }
    JavaType contentType = type.getContentType();
    if (contentType != null) { // collection[like], map[like], array, reference
        // And then value types for all containers:
       Class<?> contentClass = findSerializationContentType(a, contentType);
       if (contentClass != null) {
           try {
               contentType = tf.constructSpecializedType(contentType, contentClass);
           } catch (IllegalArgumentException iae) { // shouldn't really happen
               throw new JsonMappingException(null,
                       String.format("Internal error: failed to refine value type of %s with concrete-type annotation (value %s), from '%s': %s",
                               type, contentClass.getName(), a.getName(), iae.getMessage()),
                               iae);
           }
           type = type.withContentType(contentType);
       }
    }
    return type;
}