diff --git a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
index 624a1fd7e..c8dd5a224 100644
--- a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java
@@ -803,8 +802,14 @@ public abstract class AnnotationIntrospector
         //    direct sub-class not yet retrofitted may only override
         //    those methods. With 2.8 or later we may consider removal
         //    of these methods
-
-        
+        // First things first: is serialization forced to a specific type?
+        @SuppressWarnings("deprecation")
+        final JsonSerialize.Typing t = a.getAnnotation(JsonSerialize.class).typing();
+        if ((t == JsonSerialize.Typing.STATIC)
+                || (a.hasAnnotation(JsonSerialize.Typing.class)
+                        && !(t == JsonSerialize.Typing.DEFAULT_TYPING))) {
+            type = type.withStaticTyping();
+        }
         // Ok: start by refining the main type itself; common to all types
         Class<?> serClass = findSerializationType(a);
         if (serClass != null) {
