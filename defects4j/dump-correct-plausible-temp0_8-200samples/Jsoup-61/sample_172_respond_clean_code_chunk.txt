     public boolean hasClass(String className) {
        final String classAttr = attributes.get("class");
        final int len = classAttr.length();
        final int wantLen = className.length();
        if (len == 0 || len < wantLen) {
            return false;
        }
        // if both lengths are equal, only need compare the className with the attribute
        if (len == wantLen) {
            return className.equalsIgnoreCase(classAttr);
        }
        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
        int inClass = -1;
        int start = 0;
        for (int i = 0; i < len; i++) {
            if (Character.isWhitespace(classAttr.charAt(i))) {
                if (inClass != -1) {
                    // white space ends a class name, compare it with the requested one, ignore case
                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                        return true;
                    }
                    inClass = -1;
                }
            } else {
                if (inClass == -1) {
                    // we're in a class name : keep the start of the substring
                    inClass = i;
                    start = i;
                }
            }
        }
        // check the last entry
        if (inClass != -1 && len - start == wantLen) {
            return classAttr.regionMatches(true, start, className, 0, wantLen);
        }
        return false;
    }