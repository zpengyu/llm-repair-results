diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java
index 6ee916469..9b9b16566 100644
--- a/src/java/org/apache/commons/math/util/MathUtils.java
+++ b/src/java/org/apache/commons/math/util/MathUtils.java
@@ -436,9 +436,9 @@ public final class MathUtils {
         }
         // B2. Initialize: u and v have been divided by 2^k and at least
         // one is odd.
-        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
-        // t negative: u was odd, v may be even (t replaces v)
-        // t positive: u was even, v is odd (t replaces u)
+        int t = ((u & 1) == 1) ? -(v / 2)/* B3 */: u;
+        // t negative: u was odd, v may be even (t replaces u)
+        // t positive: u was even, v is odd (t replaces v)
         do {
             /* assert u<0 && v<0; */
             // B4/B3: cast out twos from t.
@@ -447,18 +447,17 @@ public final class MathUtils {
             }
             // B5 [reset max(u,v)]
             if (t > 0) {
-                u = -t;
+                u = t;
             } else {
-                v = t;
+                v = -t;
             }
             // B6/B3. at this point both u and v should be odd.
             t = (v - u) / 2;
             // |u| larger: t positive (replace u)
             // |v| larger: t negative (replace v)
         } while (t != 0);
-        return -u * (1 << k); // gcd is u*2^k
+        return u * (1 << k); // gcd is u*2^k
     }
-
     /**
      * Returns an integer hash code representing the given double value.
      * 
