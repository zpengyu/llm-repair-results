diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java
index 54758d68..ce24f275 100644
--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java
+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java
@@ -80,32 +79,29 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       }
       b.append(": ");
     }
-
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
-
-    b.append(error.description);
-    b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
-      int charno = error.getCharno();
-
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
-        for (int i = 0; i < charno; i++) {
-          char c = sourceExcerpt.charAt(i);
-          if (Character.isWhitespace(c)) {
-            b.append(c);
-          } else {
-            b.append(' ');
-          }
+    }
+    b.append(error.description);
+    b.append('\n');
+    int charno = error.getCharno();
+    // padding equal to the excerpt and arrow at the end
+    // charno == sourceExpert.length() means something is missing
+    // at the end of the line
+    if (excerpt.equals(LINE)
+        && 0 <= charno && charno < sourceExcerpt.length()) {
+      for (int i = 0; i < charno; i++) {
+        char c = sourceExcerpt.charAt(i);
+        if (Character.isWhitespace(c)) {
+          b.append(c);
+        } else {
+          b.append(' ');
         }
-        b.append("^\n");
       }
+      b.append("^\n");
     }
     return b.toString();
   }
