diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java
index 3c20596b0..29ea03198 100644
--- a/src/org/mockito/internal/util/MockUtil.java
+++ b/src/org/mockito/internal/util/MockUtil.java
@@ -59,13 +59,20 @@ public class MockUtil {
         return mock;
     }
 
-    public <T> void resetMock(T mock) {
-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
-        ((Factory) mock).setCallback(0, newFilter);
-    }
-
+public <T> void resetMock(T mock) {
+	MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
+	MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
+	MethodInterceptorFilter newFilter = new MethodInterceptorFilter(
+			newMockHandler,
+			(MockSettingsImpl) org.mockito.Mockito.withSettings()
+					.defaultAnswer(
+							org.mockito.Mockito.RETURNS_DEFAULTS));
+	((Factory) mock).setCallback(0, newFilter);
+	if (isSpy(mock)) {
+		copyToMockHandler((Spy) mock, oldMockHandler);
+		((Spy) mock).setMockitoInterceptor(newFilter);
+	}
+}
     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {
         MockHandler<T> mockHandler = new MockHandler<T>(settings);
         InvocationNotifierHandler<T> invocationNotifierHandler = new InvocationNotifierHandler<T>(mockHandler, settings);
