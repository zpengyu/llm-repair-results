diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java
index 3c20596b0..28c486020 100644
--- a/src/org/mockito/internal/util/MockUtil.java
+++ b/src/org/mockito/internal/util/MockUtil.java
@@ -59,13 +59,15 @@ public class MockUtil {
         return mock;
     }
 
-    public <T> void resetMock(T mock) {
-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
-        ((Factory) mock).setCallback(0, newFilter);
-    }
-
+	public <T> void resetMock(T mock) {
+		if (mock == null) {
+			throw new MockitoException("reset() should be used with mocks only");
+		}
+		MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
+		MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
+		MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
+		((Factory) mock).setCallback(0, newFilter);
+	}
     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {
         MockHandler<T> mockHandler = new MockHandler<T>(settings);
         InvocationNotifierHandler<T> invocationNotifierHandler = new InvocationNotifierHandler<T>(mockHandler, settings);
