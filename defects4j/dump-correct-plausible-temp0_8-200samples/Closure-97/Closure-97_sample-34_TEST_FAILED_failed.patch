diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0f2a6d44..9deb86eb 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -701,17 +695,17 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
           throw new AssertionError("Unknown shift operator: " +
               Node.tokenToName(n.getType()));
       }
-
-      Node newNumber = Node.newNumber(result);
-      n.getParent().replaceChild(n, newNumber);
-      reportCodeChange();
-
-      return newNumber;
+      // If result is NaN, +/-Infinity, or is not finite, then it will
+      // not equal itself; in that case, do not try to fold.
+      if (result == result && Double.isFinite(result)) {
+        Node newNumber = Node.newNumber(result);
+        n.getParent().replaceChild(n, newNumber);
+        reportCodeChange();
+        return newNumber;
+      }
     }
-
     return n;
   }
-
   /**
    * Try to fold comparison nodes, e.g ==
    */
