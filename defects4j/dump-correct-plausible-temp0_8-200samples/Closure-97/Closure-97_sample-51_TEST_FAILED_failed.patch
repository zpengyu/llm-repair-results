diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0f2a6d44..67affd22 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -649,10 +649,9 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
   /**
    * Try to fold shift operations
    */
-  private Node tryFoldShift(Node n, Node left, Node right) {
+private Node tryFoldShift(Node n, Node left, Node right) {
     if (left.getType() == Token.NUMBER &&
         right.getType() == Token.NUMBER) {
-
       double result;
       double lval = left.getDouble();
       double rval = right.getDouble();
@@ -663,10 +661,9 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
         error(BITWISE_OPERAND_OUT_OF_RANGE, left);
         return n;
       }
-
       // only the lower 5 bits are used when shifting, so don't do anything
       // if the shift amount is outside [0,32)
-      if (!(rval >= 0 && rval < 32)) {
+      if (!(rval >= 0 && rval <= 32)) {
         error(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);
         return n;
       }
