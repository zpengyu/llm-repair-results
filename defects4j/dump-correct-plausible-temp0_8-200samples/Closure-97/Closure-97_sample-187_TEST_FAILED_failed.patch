diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0f2a6d44..7082e0ba 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -667,23 +664,18 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
       // only the lower 5 bits are used when shifting, so don't do anything
       // if the shift amount is outside [0,32)
       if (!(rval >= 0 && rval < 32)) {
-        error(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);
         return n;
       }
-
       // Convert the numbers to ints
       int lvalInt = (int) lval;
       if (lvalInt != lval) {
         error(FRACTIONAL_BITWISE_OPERAND, left);
         return n;
       }
-
       int rvalInt = (int) rval;
       if (rvalInt != rval) {
-        error(FRACTIONAL_BITWISE_OPERAND, right);
         return n;
       }
-
       switch (n.getType()) {
         case Token.LSH:
           result = lvalInt << rvalInt;
