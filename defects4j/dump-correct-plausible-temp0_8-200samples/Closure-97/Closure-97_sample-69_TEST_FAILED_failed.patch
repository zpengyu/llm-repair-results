diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0f2a6d44..53bf9cb8 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -689,13 +683,13 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
           result = lvalInt << rvalInt;
           break;
         case Token.RSH:
-          result = lvalInt >> rvalInt;
+          result = (lvalInt >> rvalInt) & 0xffffffff;
           break;
         case Token.URSH:
           // JavaScript handles zero shifts on signed numbers differently than
           // Java as an Java int can not represent the unsigned 32-bit number
           // where JavaScript can so use a long here.
-          result = lvalInt >>> rvalInt;
+          result = (lvalInt >>> rvalInt) & 0xffffffff;
           break;
         default:
           throw new AssertionError("Unknown shift operator: " +
