diff --git a/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java b/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java
index 81b90fed..27bca701 100644
--- a/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java
+++ b/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java
@@ -194,4 +168,70 @@ public abstract class JsonGeneratorImpl extends GeneratorBase
         writeFieldName(fieldName);
         writeString(value);
     }
+    @Override
+    public final void writeBooleanField(String fieldName, boolean value) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeBoolean(value);
+    }
+    @Override
+    public final void writeNullField(String fieldName) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeNull();
+    }
+    @Override
+    public final void writeNumberField(String fieldName, int value) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeNumber(value);
+    }
+    @Override
+    public final void writeNumberField(String fieldName, long value) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeNumber(value);
+    }
+    @Override
+    public final void writeNumberField(String fieldName, double value) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeNumber(value);
+    }
+    @Override
+    public final void writeNumberField(String fieldName, float value) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeNumber(value);
+    }
+    @Override
+    public final void writeNumberField(String fieldName, BigDecimal value) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeNumber(value);
+    }
+    @Override
+    public final void writeBinaryField(String fieldName, byte[] data) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeBinary(data);
+    }
+    @Override
+    public final void writeArrayFieldStart(String fieldName) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeStartArray();
+    }
+    @Override
+    public final void writeObjectFieldStart(String fieldName) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeStartObject();
+    }
+    @Override
+    public final void writeObjectField(String fieldName, Object pojo) throws IOException
+    {
+        writeFieldName(fieldName);
+        writeObject(pojo);
+    }
 }
\ No newline at end of file
