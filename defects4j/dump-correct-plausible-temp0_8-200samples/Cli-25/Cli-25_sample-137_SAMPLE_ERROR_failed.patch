diff --git a/src/java/org/apache/commons/cli/HelpFormatter.java b/src/java/org/apache/commons/cli/HelpFormatter.java
index da89f9d..d0fe904 100644
--- a/src/java/org/apache/commons/cli/HelpFormatter.java
+++ b/src/java/org/apache/commons/cli/HelpFormatter.java
@@ -809,47 +809,21 @@ public class HelpFormatter
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
+        if (text == null)
         {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
+            return null;
         }
-
-        // all following lines must be padded with nextLineTabStop space
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
+        int pos = findWrapPos(text, width, 0);
+        if (pos == -1)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
-            }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            return renderString(sb, text, width, nextLineTabStop);
         }
+        return renderString(sb, text.substring(0, pos), width, nextLineTabStop)
+            .append(defaultNewLine)
+            .append(renderWrappedText(new StringBuffer(), 
+                                      width, nextLineTabStop, 
+                                      text.substring(pos).trim()));
     }
-
     /**
      * Finds the next text wrap position after <code>startPos</code> for the
      * text in <code>text</code> with the column width <code>width</code>.
