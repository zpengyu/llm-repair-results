diff --git a/src/java/org/apache/commons/cli/HelpFormatter.java b/src/java/org/apache/commons/cli/HelpFormatter.java
index da89f9d..734b532 100644
--- a/src/java/org/apache/commons/cli/HelpFormatter.java
+++ b/src/java/org/apache/commons/cli/HelpFormatter.java
@@ -806,50 +806,43 @@ public class HelpFormatter
      *
      * @return the StringBuffer with the rendered Options contents.
      */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+protected StringBuffer renderWrappedText(StringBuffer sb, int width,
+                                         int nextLineTabStop, String text)
+{
+    int pos = findWrapPos(text, width, 0);
+    if (pos == -1)
     {
-        int pos = findWrapPos(text, width, 0);
-
+        sb.append(rtrim(text));
+        return sb;
+    }
+    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+    if (nextLineTabStop >= width)
+    {
+        // stops infinite loop happening
+        nextLineTabStop = width - 1;
+    }
+    // all following lines must be padded with nextLineTabStop space 
+    // characters
+    final String padding = createPadding(nextLineTabStop);
+    while (true)
+    {
+        text = padding + text.substring(pos).trim();
+        pos = findWrapPos(text, width, 0);
         if (pos == -1)
         {
-            sb.append(rtrim(text));
-
+            sb.append(text);
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
+        else if (pos != nextLineTabStop)
         {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
+            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
-
-        // all following lines must be padded with nextLineTabStop space
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
+        else if ((text.length() > width) && (pos == nextLineTabStop - 1))
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
-            }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            pos = width;
         }
     }
-
+}
     /**
      * Finds the next text wrap position after <code>startPos</code> for the
      * text in <code>text</code> with the column width <code>width</code>.
