diff --git a/src/com/google/javascript/jscomp/InlineObjectLiterals.java b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
index 5b8fedb1..b2b5b7d6 100644
--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java
+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
@@ -340,17 +337,15 @@ class InlineObjectLiterals implements CompilerPass {
         Node cur = replacement;
         int i;
         for (i = 0; i < nodes.size() - 2; i++) {
-          cur.addChildToFront(nodes.get(i));
+          cur.addChildToBack(nodes.get(i));
           Node t = new Node(Token.COMMA);
-          cur.addChildToFront(t);
+          cur.addChildToBack(t);
           cur = t;
         }
-        cur.addChildToFront(nodes.get(i));
-        cur.addChildToFront(nodes.get(i + 1));
-
+        cur.addChildToBack(nodes.get(i));
+        cur.addChildToBack(nodes.get(i + 1));
       Node replace = ref.getParent();
       replacement.copyInformationFromForTree(replace);
-
       if (replace.getType() == Token.VAR) {
         replace.getParent().replaceChild(
             replace, NodeUtil.newExpr(replacement));
