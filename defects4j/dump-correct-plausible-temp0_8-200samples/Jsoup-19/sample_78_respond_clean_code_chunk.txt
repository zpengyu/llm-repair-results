    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
        // rels without a baseuri get removed
        String value = el.absUrl(attr.getKey());
        if (!preserveRelativeLinks)
            attr.setValue(value);
        for (Protocol protocol : protocols) {
            String prot = protocol.toString() + ":";
            if (value.toLowerCase().startsWith(prot)) {
                return true;
            }
        }
        if (protocols.contains(Protocol.rel)) {
            return isRelativeUri(value);
        }
        return false;
    }
    private boolean isRelativeUri(String uri) {
        if (uri.startsWith("//")) {
            return false;
        }
        int pos = uri.indexOf(':');
        if (pos >= 0) {
            String scheme = uri.substring(0, pos);
            if (scheme.matches("^[a-zA-Z][a-zA-Z0-9+-.]*$")) {
                return false;
            }
        }
        return true;
    }