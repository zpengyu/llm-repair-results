diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index a067f341..b1eb2d84 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1738,20 +1738,19 @@ final class TypedScopeCreator implements ScopeCreator {
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
-          Node jsDocParameter = jsDocParameters.getFirstChild();
-          for (Node astParameter : astParameters.children()) {
-            if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
-              jsDocParameter = jsDocParameter.getNext();
-            } else {
-              defineSlot(astParameter, functionNode, null, true);
-            }
+          int astParameterIndex = 0;
+          for (Node jsDocParameter : jsDocParameters.children()) {
+            // NodeUtil.getFunctionParameters always creates a parameter node
+            // for a function, so there is always an AST parameter node
+            // corresponding to each JSDoc parameter node.
+            Node astParameter = astParameters.getChildAtIndex(astParameterIndex);
+            defineSlot(astParameter, functionNode, jsDocParameter.getJSType(),
+                       true);
+            ++astParameterIndex;
           }
         }
       }
-    } // end declareArguments
-  } // end LocalScopeBuilder
+    } // end declareArguments  } // end LocalScopeBuilder
 
 
   /** Find the best JSDoc for the given node. */
