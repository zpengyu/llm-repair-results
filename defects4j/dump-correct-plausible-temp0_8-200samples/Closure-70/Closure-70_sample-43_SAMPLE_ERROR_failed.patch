diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index a067f341..2d02a3cc 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1731,27 +1731,29 @@ final class TypedScopeCreator implements ScopeCreator {
     /**
      * Declares all of a function's arguments.
      */
-    private void declareArguments(Node functionNode) {
-      Node astParameters = functionNode.getFirstChild().getNext();
-      Node body = astParameters.getNext();
-      FunctionType functionType = (FunctionType) functionNode.getJSType();
-      if (functionType != null) {
-        Node jsDocParameters = functionType.getParametersNode();
-        if (jsDocParameters != null) {
-          Node jsDocParameter = jsDocParameters.getFirstChild();
-          for (Node astParameter : astParameters.children()) {
+      private void declareArguments(Node functionNode) {
+        Node astParameters = functionNode.getFirstChild().getNext();
+        Node body = astParameters.getNext();
+        FunctionType functionType = (FunctionType) functionNode.getJSType();
+        if (functionType != null) {
+          Node jsDocParameters = functionType.getParametersNode();
+          if (jsDocParameters != null) {
+            Node jsDocParameter = jsDocParameters.getFirstChild();
+            for (Node astParameter : astParameters.children()) {
+              if (jsDocParameter != null) {
+                defineSlot(astParameter, functionNode,
+                    jsDocParameter.getJSType(), true);
+                jsDocParameter = jsDocParameter.getNext();
+              } else {
+                defineSlot(astParameter, functionNode, null, true);
+              }
+            }
             if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
-              jsDocParameter = jsDocParameter.getNext();
-            } else {
-              defineSlot(astParameter, functionNode, null, true);
+              throw new IllegalStateException("Too many jsDoc parameters.");
             }
           }
         }
-      }
-    } // end declareArguments
-  } // end LocalScopeBuilder
+      } // end declareArguments  } // end LocalScopeBuilder
 
 
   /** Find the best JSDoc for the given node. */
