diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..bc55af32 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -90,10 +86,18 @@ final class TypeInfoFactory {
         int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);
         Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();
         return actualTypeArguments[indexOfActualTypeArgument];
-
-
+      } else if (parentType instanceof Class<?>) {
+        Class<?> parentClass = (Class<?>) parentType;
+        if (parentClass.getTypeParameters().length == 0) {
+          // TypeVariable not defined in parent class; evaluate type on this type
+          return getActualType(parentType, null, parentClass);
+        }
+        // Parent is a class that has type parameters.  In this case, we have to get the
+        // information from the generic superclass.
+        // see TypeInfoTest.testGetActualType_classWithTypeParameter_typeVariablePresentInGenericSuperclass
+        return getActualType(parentType, parentClass.getGenericSuperclass(),
+            TypeUtils.toRawClass(parentClass.getGenericSuperclass()));
       }
-
       throw new UnsupportedOperationException("Expecting parameterized type, got " + parentType
           + ".\n Are you missing the use of TypeToken idiom?\n See "
           + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
