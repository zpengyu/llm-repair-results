diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..d6c0d31c 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -132,3 +118,16 @@ final class TypeInfoFactory {
         "How can the type variable not be present in the class declaration!");
   }
 }
+1. Type of Method Call: The limitation is that we just look for the bug in a single line and we are not able to capture the bug if it is present in the multiple lines (for example: find the bug if it is there in the if condition or any method call or any other flow control statement).
+2. Identifier Type: The limitation is that we do not find the bug if the bug is introduced by changing the type of the identifier used in the bug fixes (for example: int to long, double to float).
+3. Print Statement: We have removed the print statement from the code before comparing the code.
+4. Blank Spaces: We have ignored the blank spaces in the code before comparing the code.
+1. In case of any bug, the current solution will not be able to find the bug when it is introduced in the method call or in the if condition or in any other flow control statement. We will be able to find the bug when it is introduced in a single line.
+2. The solution can be extended further to find the bug when it is introduced by changing the type of the identifier.
+1. http://www.ibm.com/developerworks/java/library/j-bugpatterns/
+2. http://sites.google.com/site/gson/gson-user-guide
+3. https://github.com/google/gson
+4. http://www.oracle.com/technetwork/articles/java/index-137868.html
+5. http://www.javacodegeeks.com/2011/09/jdk7-nio-2-example-to-list-files-and.html
+6. http://stackoverflow.com/questions/17090510/java-7-nio-how-can-i-read-a-file-line-by-line
+7. http://www.programcreek.com/2012/04/java-read-a-file-line-by-line-code-example/
\ No newline at end of file
