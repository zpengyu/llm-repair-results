diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..f31495c6 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -99,18 +92,14 @@ final class TypeInfoFactory {
           + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
     } else if (typeToEvaluate instanceof WildcardType) {
       WildcardType castedType = (WildcardType) typeToEvaluate;
-      return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);
+      Type[] upperBounds = castedType.getUpperBounds();
+      return upperBounds.length == 0 ? Object.class : getActualType(upperBounds[0], parentType, rawParentClass);
     } else {
       throw new IllegalArgumentException("Type \'" + typeToEvaluate + "\' is not a Class, "
           + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.");
     }
   }
-
-
-      // Evaluate type on this type
-
-
-
+  // Evaluate type on this type
   private static Type[] extractRealTypes(
       Type[] actualTypeArguments, Type parentType, Class<?> rawParentClass) {
     Preconditions.checkNotNull(actualTypeArguments);
