diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..6fa9b273 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -90,10 +86,14 @@ final class TypeInfoFactory {
         int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);
         Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();
         return actualTypeArguments[indexOfActualTypeArgument];
-
-
+      } else if (parentType instanceof WildcardType) {
+        // Evaluate type on this type
+        // int myArray = (int[]) new ArrayList<Integer>().get(0); // Verify error: Cannot cast from ArrayList<Integer> to int[]
+        // Extract the type from the wild card
+        WildcardType castedType = (WildcardType) parentType;
+        Type upperBound = castedType.getUpperBounds()[0];
+        return getActualType(typeToEvaluate, upperBound, rawParentClass);
       }
-
       throw new UnsupportedOperationException("Expecting parameterized type, got " + parentType
           + ".\n Are you missing the use of TypeToken idiom?\n See "
           + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
