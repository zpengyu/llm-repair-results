diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..54792357 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -77,6 +73,7 @@ final class TypeInfoFactory {
           TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))
           : new GenericArrayTypeImpl(actualType);
     } else if (typeToEvaluate instanceof TypeVariable<?>) {
+      TypeVariable<?> fieldTypeVariable = (TypeVariable<?>) typeToEvaluate;
       if (parentType instanceof ParameterizedType) {
         // The class definition has the actual types used for the type variables.
         // Find the matching actual type for the Type Variable used for the field.
@@ -84,7 +81,6 @@ final class TypeInfoFactory {
         // new Foo<Integer>(); defines the actual type of A to be Integer.
         // So, to find the type of the field a, we will have to look at the class'
         // actual type arguments.
-        TypeVariable<?> fieldTypeVariable = (TypeVariable<?>) typeToEvaluate;
         TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters();
         ParameterizedType objParameterizedType = (ParameterizedType) parentType;
         int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);
