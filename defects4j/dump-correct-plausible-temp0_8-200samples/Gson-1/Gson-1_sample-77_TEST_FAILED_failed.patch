diff --git a/gson/src/main/java/com/google/gson/TypeInfoFactory.java b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
index 0aa1455a..51b962fd 100644
--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java
+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java
@@ -77,6 +73,7 @@ final class TypeInfoFactory {
           TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))
           : new GenericArrayTypeImpl(actualType);
     } else if (typeToEvaluate instanceof TypeVariable<?>) {
+      TypeVariable<?> typeVariable = (TypeVariable<?>) typeToEvaluate;
       if (parentType instanceof ParameterizedType) {
         // The class definition has the actual types used for the type variables.
         // Find the matching actual type for the Type Variable used for the field.
@@ -90,10 +87,9 @@ final class TypeInfoFactory {
         int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);
         Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();
         return actualTypeArguments[indexOfActualTypeArgument];
-
-
+      } else if (typeVariable.getGenericDeclaration() instanceof Class<?>) {
+        return typeVariable;
       }
-
       throw new UnsupportedOperationException("Expecting parameterized type, got " + parentType
           + ".\n Are you missing the use of TypeToken idiom?\n See "
           + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");
