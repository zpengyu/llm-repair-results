diff --git a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
index bfedfd0b..7a6a218f 100644
--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
@@ -196,38 +196,39 @@ public class BZip2CompressorInputStream extends CompressorInputStream implements
     }
 
     private int read0() throws IOException {
-        final int retChar = this.currentChar;
-        switch (currentState) {
-        case EOF:
-            return -1;
-
-        case START_BLOCK_STATE:
-            throw new IllegalStateException();
-
-        case RAND_PART_A_STATE:
-            throw new IllegalStateException();
-
-        case RAND_PART_B_STATE:
-            setupRandPartB();
-            break;
-
-        case RAND_PART_C_STATE:
-            setupRandPartC();
-            break;
-
-        case NO_RAND_PART_A_STATE:
-            throw new IllegalStateException();
-
-        case NO_RAND_PART_B_STATE:
-            setupNoRandPartB();
-            break;
-
-        case NO_RAND_PART_C_STATE:
-            setupNoRandPartC();
-            break;
-
-        default:
-            throw new IllegalStateException();
+        final int retChar;
+        if (currentState == EOF) {
+            retChar = -1;
+        } else {
+            switch (currentState) {
+            case START_BLOCK_STATE:
+                retChar = currentChar;
+                break;
+            case RAND_PART_A_STATE:
+                retChar = currentChar;
+                break;
+            case RAND_PART_B_STATE:
+                setupRandPartB();
+                retChar = currentChar;
+                break;
+            case RAND_PART_C_STATE:
+                setupRandPartC();
+                retChar = currentChar;
+                break;
+            case NO_RAND_PART_A_STATE:
+                retChar = currentChar;
+                break;
+            case NO_RAND_PART_B_STATE:
+                setupNoRandPartB();
+                retChar = currentChar;
+                break;
+            case NO_RAND_PART_C_STATE:
+                setupNoRandPartC();
+                retChar = currentChar;
+                break;
+            default:
+                throw new IllegalStateException();
+            }
         }
         return retChar;
     }
