diff --git a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
index bfedfd0b..562890d8 100644
--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
@@ -195,43 +195,36 @@ public class BZip2CompressorInputStream extends CompressorInputStream implements
         this.nInUse = nInUseShadow;
     }
 
-    private int read0() throws IOException {
-        final int retChar = this.currentChar;
-        switch (currentState) {
-        case EOF:
-            return -1;
-
-        case START_BLOCK_STATE:
-            throw new IllegalStateException();
-
-        case RAND_PART_A_STATE:
-            throw new IllegalStateException();
-
-        case RAND_PART_B_STATE:
-            setupRandPartB();
-            break;
-
-        case RAND_PART_C_STATE:
-            setupRandPartC();
-            break;
-
-        case NO_RAND_PART_A_STATE:
-            throw new IllegalStateException();
-
-        case NO_RAND_PART_B_STATE:
-            setupNoRandPartB();
-            break;
-
-        case NO_RAND_PART_C_STATE:
-            setupNoRandPartC();
-            break;
-
-        default:
-            throw new IllegalStateException();
-        }
-        return retChar;
+private int read0() throws IOException {
+    final int retChar = this.currentChar;
+    switch (currentState) {
+    case EOF:
+        return -1;
+    case START_BLOCK_STATE:
+        currentChar = nextChar();
+        updateState();
+        break;
+    case RAND_PART_A_STATE:
+        throw new IllegalStateException();
+    case RAND_PART_B_STATE:
+        setupRandPartB();
+        break;
+    case RAND_PART_C_STATE:
+        setupRandPartC();
+        break;
+    case NO_RAND_PART_A_STATE:
+        throw new IllegalStateException();
+    case NO_RAND_PART_B_STATE:
+        setupNoRandPartB();
+        break;
+    case NO_RAND_PART_C_STATE:
+        setupNoRandPartC();
+        break;
+    default:
+        throw new IllegalStateException();
     }
-
+    return retChar;
+}
     private boolean init(boolean isFirstStream) throws IOException {
         if (null == in) {
             throw new IOException("No InputStream");
