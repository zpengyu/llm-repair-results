diff --git a/source/org/jfree/chart/axis/Axis.java b/source/org/jfree/chart/axis/Axis.java
index 78a6c66..21f8415 100644
--- a/source/org/jfree/chart/axis/Axis.java
+++ b/source/org/jfree/chart/axis/Axis.java
@@ -1185,7 +1180,44 @@ public abstract class Axis implements Cloneable, Serializable {
                     labely - h / 2.0f, w, h);
             state.cursorRight(insets.getLeft() + labelBounds.getWidth() 
                     + insets.getRight());
-
+        }
+        else if (edge == null) {
+            float x = (float) dataArea.getCenterX();
+            TextAnchor anchor = TextAnchor.CENTER;
+            float xx = 0.0f;
+            if (edge == RectangleEdge.TOP) {
+                xx = (float) (state.getCursor() - insets.getBottom() 
+                        - labelBounds.getHeight() / 2.0);
+            }
+            else if (edge == RectangleEdge.BOTTOM) {
+                xx = (float) (state.getCursor() + insets.getTop() 
+                        + labelBounds.getHeight() / 2.0);
+            }
+            else if (edge == RectangleEdge.LEFT) {
+                xx = (float) (state.getCursor() - insets.getRight() 
+                        - labelBounds.getWidth() / 2.0);
+                anchor = TextAnchor.CENTER_RIGHT;
+            }
+            else if (edge == RectangleEdge.RIGHT) {
+                xx = (float) (state.getCursor() + insets.getLeft() 
+                        + labelBounds.getWidth() / 2.0);
+                anchor = TextAnchor.CENTER_LEFT;
+            }
+            TextUtilities.drawAlignedString(label, g2, x, xx, anchor);
+            double ww = labelBounds.getWidth();
+            double hh = labelBounds.getHeight();
+            if (edge == RectangleEdge.TOP) {
+                state.cursorUp(insets.getTop() + hh + insets.getBottom());
+            }
+            else if (edge == RectangleEdge.BOTTOM) {
+                state.cursorDown(insets.getTop() + hh + insets.getBottom());
+            }
+            else if (edge == RectangleEdge.LEFT) {
+                state.cursorLeft(insets.getLeft() + ww + insets.getRight());
+            }
+            else if (edge == RectangleEdge.RIGHT) {
+                state.cursorRight(insets.getLeft() + ww + insets.getRight());
+            }
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
