    protected AxisState drawLabel(String label, Graphics2D g2, 
            Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, 
            AxisState state, PlotRenderingInfo plotState) {

        // it is unlikely that 'state' will be null, but check anyway...
        if (state == null) {
            throw new IllegalArgumentException("Null 'state' argument.");
        }
        
        if ((label == null) || (label.equals(""))) {
            return state;
        }

        Font font = getLabelFont();
        RectangleInsets insets = getLabelInsets();
        g2.setFont(font);
        g2.setPaint(getLabelPaint());
        FontMetrics fm = g2.getFontMetrics();
        Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);
        Shape hotspot = null;
        
        if (edge == RectangleEdge.TOP) {
            float x = (float) calculateLabelX(labelBounds.getWidth(), 
                    dataArea, edge);
            float y = (float) (state.getCursor() - insets.getBottom() 
                    - labelBounds.getHeight());
            drawAlignedString(label, g2, x, y, TextAnchor.BOTTOM_CENTER);
            hotspot = new Rectangle2D.Float(x, y, 
                    (float) labelBounds.getWidth(), 
                    (float) labelBounds.getHeight());
            state.cursorUp(insets.getTop() + labelBounds.getHeight() 
                    + insets.getBottom());
        }
        else if (edge == RectangleEdge.BOTTOM) {
            float x = (float) calculateLabelX(labelBounds.getWidth(), 
                    dataArea, edge);
            float y = (float) (state.getCursor() + insets.getTop());
            drawAlignedString(label, g2, x, y, TextAnchor.TOP_CENTER);
            hotspot = new Rectangle2D.Float(x, y, 
                    (float) labelBounds.getWidth(), 
                    (float) labelBounds.getHeight());
            state.cursorDown(insets.getTop() + labelBounds.getHeight() 
                    + insets.getBottom());
        }
        else if (edge == RectangleEdge.LEFT) {
            float x = (float) (state.getCursor() - insets.getRight() 
                    - labelBounds.getWidth());
            float y = (float) calculateLabelY(labelBounds.getHeight(), 
                    dataArea, edge);
            drawAlignedString(label, g2, x, y, TextAnchor.CENTER_RIGHT);
            hotspot = new Rectangle2D.Float(x, y, 
                    (float) labelBounds.getWidth(), 
                    (float) labelBounds.getHeight());
            state.cursorLeft(insets.getLeft() + labelBounds.getWidth() 
                    + insets.getRight());
        }
        else if (edge == RectangleEdge.RIGHT) {
            float x = (float) (state.getCursor() + insets.getLeft());
            float y = (float) calculateLabelY(labelBounds.getHeight(), 
                    dataArea, edge);
            drawAlignedString(label, g2, x, y, TextAnchor.CENTER_LEFT);
            hotspot = new Rectangle2D.Float(x, y, 
                    (float) labelBounds.getWidth(), 
                    (float) labelBounds.getHeight());
            state.cursorRight(insets.getLeft() + labelBounds.getWidth() 
                    + insets.getRight());

        }
        if (plotState != null && hotspot != null) {
            ChartRenderingInfo owner = plotState.getOwner();
                EntityCollection entities = owner.getEntityCollection();
                if (entities != null) {
                    entities.add(new AxisLabelEntity(this, hotspot, 
                            this.labelToolTip, this.labelURL));
                }
        }
        return state;

    }

