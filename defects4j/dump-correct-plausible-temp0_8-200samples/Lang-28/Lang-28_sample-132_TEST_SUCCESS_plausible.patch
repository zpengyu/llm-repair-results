diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index 34d6109a..c1f7e1d5 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -33,22 +33,28 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        int length = input.length();
+        if(input.charAt(index) == '&' && index + 1 < length && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
-
             int end = start;
-            while(input.charAt(end) != ';') {
+            while(end < length) {
+                char c = input.charAt(end);
+                if(c == ';') {
+                    break;
+                } else if(!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+                    return 0;
+                }
                 end++;
             }
-
+            if(end >= length) {
+                return 0;
+            }
             int entityValue;
             try {
                 if(isHex) {
@@ -59,10 +65,14 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             } catch(NumberFormatException nfe) {
                 return 0;
             }
-
+            if(entityValue > 0xFFFF) {
+                char[] chrs = Character.toChars(entityValue);
+                out.write(chrs[0]);
+                out.write(chrs[1]);
+            } else {
                 out.write(entityValue);
+            }
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
-    }
-}
+    }}
