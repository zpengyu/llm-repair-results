diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index 34d6109a..7cfaa18f 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -33,36 +33,38 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
-            int start = index + 2;
+        int length = input.length();
+        if (input.charAt(index) == '&' && index + 1 < length) {
+            int start = index + 1;
             boolean isHex = false;
-
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+            if (input.charAt(start) == '#') {
+                if (start + 1 >= length) {
+                    return 0;
+                }
                 start++;
-                isHex = true;
+                if (input.charAt(start) == 'x' || input.charAt(start) == 'X') {
+                    start++;
+                    isHex = true;
+                }
             }
-
             int end = start;
-            while(input.charAt(end) != ';') {
+            while (end < length && input.charAt(end) != ';') {
                 end++;
             }
-
-            int entityValue;
-            try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+            if (end > start) {
+                int entityValue;
+                try {
+                    if (isHex) {
+                        entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+                    } else {
+                        entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+                    }
+                } catch (NumberFormatException nfe) {
+                    return 0;
                 }
-            } catch(NumberFormatException nfe) {
-                return 0;
-            }
-
                 out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+                return (end - index) + 1;
+            }
         }
         return 0;
-    }
-}
+    }}
