    private JavaType _mapType(Class<?> rawClass)
    {
        // 28-May-2015, tatu: Properties are special, as per [databind#810]
        JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
        // ok to have no types ("raw")
        if (typeParams == null) {
            return MapType.construct(rawClass, _unknownType(), _unknownType());
        }
        if (typeParams.length != 2) {
            throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
        }
        JavaType keyType = typeParams[0];
        JavaType valueType = typeParams[1];
        // NOTE: due to [databind#295] need to widen primitives
        if (keyType.isPrimitive()) {
            keyType = _boxedType(keyType);
        }
        if (valueType.isPrimitive()) {
            valueType = _boxedType(valueType);
        }
        return MapType.construct(rawClass, keyType, valueType);
    }