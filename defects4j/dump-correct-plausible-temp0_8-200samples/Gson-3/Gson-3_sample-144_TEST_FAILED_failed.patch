diff --git a/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java b/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
index cd5c2f6c..0183f2bc 100644
--- a/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
+++ b/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
@@ -169,34 +169,29 @@ public final class ConstructorConstructor {
           }
         };
       }
+    } else if (!Map.class.isAssignableFrom(rawType)) {
+      return null;
+    } else if (SortedMap.class.isAssignableFrom(rawType)) {
+      return new ObjectConstructor<T>() {
+        @Override public T construct() {
+          return (T) new TreeMap<Object, Object>();
+        }
+      };
+    } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom(
+        TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) {
+      return new ObjectConstructor<T>() {
+        @Override public T construct() {
+          return (T) new LinkedHashMap<Object, Object>();
+        }
+      };
+    } else {
+      return new ObjectConstructor<T>() {
+        @Override public T construct() {
+          return (T) new LinkedTreeMap<String, Object>();
+        }
+      };
     }
-
-    if (Map.class.isAssignableFrom(rawType)) {
-      if (SortedMap.class.isAssignableFrom(rawType)) {
-        return new ObjectConstructor<T>() {
-          @Override public T construct() {
-            return (T) new TreeMap<Object, Object>();
-          }
-        };
-      } else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom(
-          TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) {
-        return new ObjectConstructor<T>() {
-          @Override public T construct() {
-            return (T) new LinkedHashMap<Object, Object>();
-          }
-        };
-      } else {
-        return new ObjectConstructor<T>() {
-          @Override public T construct() {
-            return (T) new LinkedTreeMap<String, Object>();
-          }
-        };
-      }
-    }
-
-    return null;
   }
-
   private <T> ObjectConstructor<T> newUnsafeAllocator(
       final Type type, final Class<? super T> rawType) {
     return new ObjectConstructor<T>() {
