diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
index 3f61ac74..1dd2aa76 100644
--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
@@ -710,7 +710,7 @@ public class NumberUtils {
      * @return converted <code>BigDecimal</code> (or null if the input is null)
      * @throws NumberFormatException if the value cannot be converted
      */
-    public static BigDecimal createBigDecimal(String str) {
+public static BigDecimal createBigDecimal(String str) {
         if (str == null) {
             return null;
         }
@@ -718,13 +718,17 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
-            // this is protection for poorness in java.lang.BigDecimal.
-            // it accepts this as a legal value, but it does not appear
-            // to be in specification of class. OS X Java parses it to
-            // a wrong value.
+        // this is protection for poorness in java.lang.BigDecimal.
+        // see comment in NumberUtils.createBigInteger(java.lang.String)
+        // TODO: do we need this protection for BigDecimal???
+        if (str.charAt(0) == '-') {
+            str = str.substring(1);
+        }
+        if (str.startsWith("0x") || str.startsWith("-0x")) {
+            return new BigDecimal(new BigInteger(str));
+        }
         return new BigDecimal(str);
     }
-
     // Min in array
     //--------------------------------------------------------------------
     /**
