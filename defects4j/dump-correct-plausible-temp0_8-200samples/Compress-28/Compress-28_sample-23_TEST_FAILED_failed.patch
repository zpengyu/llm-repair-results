diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 0c76c60a..57f2460e 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -566,31 +566,33 @@ public class TarArchiveInputStream extends ArchiveInputStream {
      * @throws IOException on error
      */
     @Override
-    public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
-        if (hasHitEOF || entryOffset >= entrySize) {
-            return -1;
-        }
-
-        if (currEntry == null) {
-            throw new IllegalStateException("No current tar entry");
-        }
-
-        numToRead = Math.min(numToRead, available());
-
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
-
-        if (totalRead == -1) {
-            hasHitEOF = true;
-        } else {
-            entryOffset += totalRead;
-        }
-
-        return totalRead;
-    }
-
+   public int read(byte[] buf, int offset, int numToRead) throws IOException {
+       int totalRead = 0;
+       int numToReadCopy = numToRead;
+       if (hasHitEOF) {
+           return -1;
+       }
+       if (currEntry == null) {
+           throw new IllegalStateException("No current tar entry");
+       }
+       if (entryOffset >= entrySize) {
+           return -1;
+       }
+       if ((numToRead + entryOffset) > entrySize) {
+           numToRead = (int)(entrySize - entryOffset);
+       }
+       totalRead = is.read(buf, offset, numToRead);
+       if (totalRead == -1) {
+           hasHitEOF = true;
+       } else {
+           if (totalRead < numToReadCopy) {
+               entryOffset += totalRead;
+           } else {
+               entryOffset = entrySize;
+           }
+       }
+       return totalRead;
+   }
     /**
      * Whether this class is able to read the given entry.
      *
