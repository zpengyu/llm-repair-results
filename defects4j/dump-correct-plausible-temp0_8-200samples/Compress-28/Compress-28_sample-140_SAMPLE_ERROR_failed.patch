diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 0c76c60a..0767e661 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -568,29 +568,24 @@ public class TarArchiveInputStream extends ArchiveInputStream {
     @Override
     public int read(byte[] buf, int offset, int numToRead) throws IOException {
     	int totalRead = 0;
-
-        if (hasHitEOF || entryOffset >= entrySize) {
-            return -1;
-        }
-
-        if (currEntry == null) {
-            throw new IllegalStateException("No current tar entry");
-        }
-
-        numToRead = Math.min(numToRead, available());
-
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
-
-        if (totalRead == -1) {
-            hasHitEOF = true;
-        } else {
-            entryOffset += totalRead;
+        while (totalRead < numToRead) {
+            if (hasHitEOF || entryOffset >= entrySize) {
+                return totalRead;
+            }
+            if (currEntry == null) {
+                throw new IllegalStateException("No current tar entry");
+            }
+            int numRead = is.read(buf, offset+totalRead, numToRead-totalRead);
+            count(numRead);
+            if (numRead == -1) {
+                hasHitEOF = true;
+            } else {
+                entryOffset += numRead;
+                totalRead += numRead;
+            }
         }
-
         return totalRead;
     }
-
     /**
      * Whether this class is able to read the given entry.
      *
