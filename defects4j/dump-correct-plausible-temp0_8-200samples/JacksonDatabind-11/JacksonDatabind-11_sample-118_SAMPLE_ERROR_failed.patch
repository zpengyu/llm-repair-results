diff --git a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
index 87b165830..665da0b61 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
@@ -926,9 +923,15 @@ public final class TypeFactory
          *   for resolution to catch those.
          */
         context._addPlaceholder(name);
-        return _constructType(bounds[0], context);
+        // 17-Aug-2015, tatu: [databind#1120]: Need to ensure bound is not
+        //    "unbounded", and that things are not recursive. Easiest is
+        //    to use "unknown type" (as is done in other places too)
+        JavaType boundType = _constructType(bounds[0], context);
+        if (!boundType.isTypeOrSubTypeOf(type)) {
+            boundType = _unknownType();
+        }
+        return boundType;
     }
-
     protected JavaType _fromWildcard(WildcardType type, TypeBindings context)
     {
         /* Similar to challenges with TypeVariable, we may have
