diff --git a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
index 87b165830..e84e34927 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
@@ -886,7 +886,7 @@ public final class TypeFactory
         return ArrayType.construct(compType, null, null);
     }
 
-    protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)
+protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)
     {
         final String name = type.getName();
         // 19-Mar-2015: Without context, all we can check are bounds.
@@ -903,8 +903,12 @@ public final class TypeFactory
             if (actualType != null) {
                 return actualType;
             }
+            // And if not, need to check placeholders now
+            Type type2 = context.resolveTypePlaceholder(name);
+            if (type2 != null) {
+                return _constructType(type2, context);
+            }
         }
-
         /* 29-Jan-2010, tatu: We used to throw exception here, if type was
          *   bound: but the problem is that this can occur for generic "base"
          *   method, overridden by sub-class. If so, we will want to ignore
