diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
index 73531dc5..1a4bb3b5 100644
--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -489,14 +487,28 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                (parent.getFirstChild() == n))) {
               // Don't count lhs of top-level assignment chain
               numUsesWithinCfgNode++;
+            }
+          if (n.isAssign()
+              && parent.isExprResult()
+              && parent.getParent() == cfgNode
+              && t.inGlobalScope()) {
+            Node first = n.getFirstChild();
+            Node second = n.getLastChild();
+            if (first.isName() && first.getString().equals(varName)) {
+              // Account for the fact that the assignment statement is still
+              // in the CFG, but will be removed.
+              numUsesWithinCfgNode++;
+            }
+            if (second.isName() && second.getString().equals(varName)) {
+              // Account for the fact that the assignment statement is still
+              // in the CFG, but will be removed.
+              numUsesWithinCfgNode++;
+            }
           }
         }
-
-      };
-
-      NodeTraversal.traverse(compiler, cfgNode, gatherCb);
-    }
-  }
+    };
+    NodeTraversal.traverse(compiler, cfgNode, gatherCb);
+  }  }
 
   /**
    * Given an expression by its root and sub-expression n, return true if there
