diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
index 73531dc5..2a027ddc 100644
--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -472,7 +472,10 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
      * numUseWithinUseCfgNode.
      */
     private void getNumUseInUseCfgNode(final Node cfgNode) {
-
+      // TODO(johnlenz): check if this is necessary, it seems unlikely that
+      // n.isName would ever be null.
+      checkNotNull(n);
+      checkNotNull(varName);
       numUsesWithinCfgNode = 0;
       AbstractCfgNodeTraversalCallback gatherCb =
           new AbstractCfgNodeTraversalCallback() {
@@ -491,12 +493,9 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
               numUsesWithinCfgNode++;
           }
         }
-
       };
-
       NodeTraversal.traverse(compiler, cfgNode, gatherCb);
-    }
-  }
+    }  }
 
   /**
    * Given an expression by its root and sub-expression n, return true if there
