    public int read(byte b[], int offset, int len) throws IOException {
        if (b == null) {
            throw new NullPointerException();
        } else if (offset < 0 || len < 0) {
            throw new IndexOutOfBoundsException();
        } else if (offset > b.length || offset + len > b.length) {
            throw new IndexOutOfBoundsException();
        } else if (len == 0) {
            return 0;
        } else {
            int readLen;
            if (!base64.hasData()) {
                byte[] buf = new byte[doEncode ? 4096 : 8192];
                int c = in.read(buf);
                // A little optimization to avoid System.arraycopy()
                // when possible.
                if (c > 0 && b.length == len) {
                    base64.setInitialBuffer(b, offset, len);
                }
                if (doEncode) {
                    base64.encode(buf, 0, c);
                } else {
                    base64.decode(buf, 0, c);
                }
            }
            readLen = base64.readResults(b, offset, len);
            if (readLen == 0) {
                // We may have read 0 because of non-base64 data.  Keep
                // trying until we encounter base64 data or EOF.
                while (readLen == 0) {
                    if (doEncode) {
                        base64.encode(EMPTY_BYTES, 0, -1);
                    } else {
                        base64.decode(EMPTY_BYTES, 0, -1);
                    }
                    readLen = base64.readResults(b, offset, len);
                }
            }
            return readLen;
        }
    }