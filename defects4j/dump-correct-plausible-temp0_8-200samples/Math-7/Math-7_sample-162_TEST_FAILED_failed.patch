diff --git a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
index d91085010..a4982bd53 100644
--- a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
@@ -359,20 +346,16 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
                     }
                     return eventT;
                 }
-
-                boolean needReset = currentEvent.reset(eventT, eventY);
-                if (needReset) {
-                    // some event handler has triggered changes that
-                    // invalidate the derivatives, we need to recompute them
+                // check if the event handler has triggered changes that
+                // invalidate the derivatives, we need to recompute them
+                if (currentEvent.reset(eventT, eventY)) {
                     System.arraycopy(eventY, 0, y, 0, y.length);
                     computeDerivatives(eventT, y, yDot);
                     resetOccurred = true;
-                    for (final EventState remaining : occuringEvents) {
-                        remaining.stepAccepted(eventT, eventY);
-                    }
-                    return eventT;
                 }
-
+                for (final EventState remaining : occuringEvents) {
+                    remaining.stepAccepted(eventT, eventY);
+                }
                 // prepare handling of the remaining part of the step
                 previousT = eventT;
                 interpolator.setSoftPreviousTime(eventT);
