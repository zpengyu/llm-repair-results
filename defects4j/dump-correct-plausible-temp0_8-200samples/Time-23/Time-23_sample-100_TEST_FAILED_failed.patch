diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java
index f7e3d277..1907f36d 100644
--- a/src/main/java/org/joda/time/DateTimeZone.java
+++ b/src/main/java/org/joda/time/DateTimeZone.java
@@ -562,13 +562,13 @@ public abstract class DateTimeZone implements Serializable {
             map = new HashMap<String, String>();
             map.put("GMT", "UTC");
             map.put("MIT", "Pacific/Apia");
-            map.put("HST", "Pacific/Honolulu");  // JDK 1.1 compatible
+            map.put("HST", "Pacific/Honolulu");
             map.put("AST", "America/Anchorage");
             map.put("PST", "America/Los_Angeles");
-            map.put("MST", "America/Denver");  // JDK 1.1 compatible
+            map.put("MST", "America/Denver");
             map.put("PNT", "America/Phoenix");
             map.put("CST", "America/Chicago");
-            map.put("EST", "America/New_York");  // JDK 1.1 compatible
+            map.put("EST", "America/New_York");
             map.put("IET", "America/Indianapolis");
             map.put("PRT", "America/Puerto_Rico");
             map.put("CNT", "America/St_Johns");
@@ -594,9 +594,21 @@ public abstract class DateTimeZone implements Serializable {
             map.put("NST", "Pacific/Auckland");
             cZoneIdConversion = map;
         }
-        return map.get(id);
+        String converted = map.get(id);
+        if (converted != null) {
+            return converted;
+        }
+        if (id != null && id.length() == 6 &&
+                Character.isDigit(id.charAt(0)) &&
+                Character.isDigit(id.charAt(1)) &&
+                id.charAt(2) == ':' &&
+                Character.isDigit(id.charAt(3)) &&
+                Character.isDigit(id.charAt(4)) &&
+                id.charAt(5) == ':') {
+            return "UTC";
+        }
+        return id;
     }
-
     private static int parseOffset(String str) {
         // Can't use a real chronology if called during class
         // initialization. Offset parser doesn't need it anyhow.
