diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
index 24fa134a..71339173 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
@@ -124,26 +121,33 @@ public class FastDateParser implements DateParser, Serializable {
         if(!patternMatcher.lookingAt()) {
             throw new IllegalArgumentException("Invalid pattern");
         }
-
+        int currentFormatFieldStart= patternMatcher.regionStart();
+        int currentFormatFieldEnd= patternMatcher.end();
         currentFormatField= patternMatcher.group();
         Strategy currentStrategy= getStrategy(currentFormatField);
         for(;;) {
-            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
+            patternMatcher.region(currentFormatFieldEnd, patternMatcher.regionEnd());
             if(!patternMatcher.lookingAt()) {
                 nextStrategy = null;
                 break;
             }
             String nextFormatField= patternMatcher.group();
+            int nextFormatFieldStart= patternMatcher.regionStart();
+            int nextFormatFieldEnd= patternMatcher.end();
             nextStrategy = getStrategy(nextFormatField);
             if(currentStrategy.addRegex(this, regex)) {
                 collector.add(currentStrategy);
             }
+            currentFormatFieldStart= nextFormatFieldStart;
+            currentFormatFieldEnd= nextFormatFieldEnd;
             currentFormatField= nextFormatField;
             currentStrategy= nextStrategy;
         }
         if(currentStrategy.addRegex(this, regex)) {
             collector.add(currentStrategy);
         }
+        currentFormatFieldStart= -1;
+        currentFormatFieldEnd= -1;
         currentFormatField= null;
         strategies= collector.toArray(new Strategy[collector.size()]);
         parsePattern= Pattern.compile(regex.toString());
