diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
index 9a6ac9b16..451891892 100644
--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
@@ -290,17 +272,13 @@ public abstract class EmbeddedRungeKuttaIntegrator
       System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length);
       stepStart = acceptStep(interpolator, y, yDotTmp, t);
       System.arraycopy(y, 0, yTmp, 0, y.length);
-
       if (!isLastStep) {
-
           // prepare next step
           interpolator.storeTime(stepStart);
-
           if (fsal) {
               // save the last evaluation for the next step
-              System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0.length);
+              System.arraycopy(yDotK[stages - 1], 0, yDotK[0], 0, y0.length);
           }
-
           // stepsize control for next step
           final double factor =
               FastMath.min(maxGrowth, FastMath.max(minReduction, safety * FastMath.pow(error, exp)));
