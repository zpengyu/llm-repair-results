diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
index 88312dac2..542e52c66 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
@@ -104,17 +103,24 @@ public class StdKeyDeserializer extends KeyDeserializer
         } else if (raw == Class.class) {
             kind = TYPE_CLASS;
         } else if (raw == Locale.class) {
-            FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Locale.class);
-            return new StdKeyDeserializer(TYPE_LOCALE, raw, deser);
+            kind = TYPE_LOCALE;
         } else if (raw == Currency.class) {
-            FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Currency.class);
-            return new StdKeyDeserializer(TYPE_CURRENCY, raw, deser);
+            kind = TYPE_CURRENCY;
         } else {
             return null;
         }
-        return new StdKeyDeserializer(kind, raw);
+        FromStringDeserializer<?> deser;
+        switch(kind) {
+            case TYPE_LOCALE:
+                deser = FromStringDeserializer.findDeserializer(Locale.class);
+                return new StdKeyDeserializer(TYPE_LOCALE, raw, deser);
+            case TYPE_CURRENCY:
+                deser = FromStringDeserializer.findDeserializer(Currency.class);
+                return new StdKeyDeserializer(TYPE_CURRENCY, raw, deser);
+            default:
+                return new StdKeyDeserializer(kind, raw);
+        }
     }    
-    
     @Override
     public Object deserializeKey(String key, DeserializationContext ctxt)
         throws IOException
