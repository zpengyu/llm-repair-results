    public boolean hasSameMethod(Invocation candidate) {        
        //not using method.equals() for 1 good reason:
        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
        Method m1 = invocation.getMethod();
        Method m2 = candidate.getMethod();
        
        //return methodName.equals(candidateMethodName) && equals(m1.getParameterTypes(), m2.getParameterTypes());
        return methodName.equals(candidateMethodName) && equals(m1.getParameterTypes(), m2.getParameterTypes()) && equals(m1.getReturnType(), m2.getReturnType());
    }
    private boolean equals(Class<?>[] c1, Class<?>[] c2) {
        return Arrays.equals(c1, c2);
    }
