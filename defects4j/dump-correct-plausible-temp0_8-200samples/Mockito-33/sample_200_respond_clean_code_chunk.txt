    public boolean hasSameMethod(Invocation candidate) {        
        //not using method.equals() for 1 good reason:
        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
        Method m1 = invocation.getMethod();
        Method m2 = candidate.getMethod();
        /* Avoid unnecessary cloning */
        boolean equalNames = m1.getName().equals(m2.getName());
		boolean equalReturnTypes = m1.getReturnType().equals(m2.getReturnType());
		boolean equalParameterTypes = Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());
		boolean equalModifiers = m1.getModifiers() == m2.getModifiers();
        return equalNames && equalReturnTypes && equalParameterTypes && equalModifiers;
    }