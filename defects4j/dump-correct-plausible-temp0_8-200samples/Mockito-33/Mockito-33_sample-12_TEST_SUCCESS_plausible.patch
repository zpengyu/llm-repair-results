diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java
index e2f181f07..39227cb6f 100644
--- a/src/org/mockito/internal/invocation/InvocationMatcher.java
+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java
@@ -90,15 +90,22 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI
     }
 
     public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
         Method m1 = invocation.getMethod();
         Method m2 = candidate.getMethod();
-
-		/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+        /* Avoid unnecessary cloning */
+        if (m1.getName().equals(m2.getName())) {
+            if (m1.getParameterTypes().length == m2.getParameterTypes().length) {
+                for (int i = 0; i < m1.getParameterTypes().length; i++) {
+                    if (!m1.getParameterTypes()[i].equals(m2.getParameterTypes()[i])) {
+                        return false;
+                    }
+                }
+                return true;
+            }
+            return false;
+        }
+        return false;
     }
-
     public Location getLocation() {
         return invocation.getLocation();
     }
