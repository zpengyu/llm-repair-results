diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index ab353933..6f727637 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1110,7 +1110,7 @@ class TypeInference
    * If we give the anonymous object an inferred property of (number|undefined),
    * then this code will type-check appropriately.
    */
-  private void inferPropertyTypesToMatchConstraint(
+private void inferPropertyTypesToMatchConstraint(
       JSType type, JSType constraint) {
     if (type == null || constraint == null) {
       return;
@@ -1124,12 +1123,10 @@ class TypeInference
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);
           if (!objType.isPropertyTypeDeclared(prop)) {
-            JSType typeToInfer = propType;
             if (!objType.hasProperty(prop)) {
-              typeToInfer =
-                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
+              objType.defineInferredProperty(prop,
+                 propType, null);
             }
-            objType.defineInferredProperty(prop, typeToInfer, null);
           }
         }
       }
