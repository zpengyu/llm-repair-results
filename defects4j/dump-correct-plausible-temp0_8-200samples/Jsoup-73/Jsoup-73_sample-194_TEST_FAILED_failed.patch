diff --git a/src/main/java/org/jsoup/helper/W3CDom.java b/src/main/java/org/jsoup/helper/W3CDom.java
index fb864f5..e5426a2 100644
--- a/src/main/java/org/jsoup/helper/W3CDom.java
+++ b/src/main/java/org/jsoup/helper/W3CDom.java
@@ -80,10 +77,10 @@ public class W3CDom {
         public void head(org.jsoup.nodes.Node source, int depth) {
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
-
-                String prefix = updateNamespaces(sourceEl);
+                // get the tag prefix if any
+                int pos = sourceEl.tagName().indexOf(":");
+                String prefix = pos > 0 ? sourceEl.tagName().substring(0, pos) : "";
                 String namespace = namespaces.get(prefix);
-
                 Element el = doc.createElementNS(namespace, sourceEl.tagName());
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
@@ -92,6 +89,9 @@ public class W3CDom {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
+                // find any namespaces defined in this element.
+                // like: xmlns="blah" or xmlns:prefix="blah"
+                updateNamespaces(sourceEl);
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
@@ -127,7 +124,7 @@ public class W3CDom {
         /**
          * Finds any namespaces defined in this element. Returns any tag prefix.
          */
-        private String updateNamespaces(org.jsoup.nodes.Element el) {
+        private void updateNamespaces(org.jsoup.nodes.Element el) {
             // scan the element for namespace declarations
             // like: xmlns="blah" or xmlns:prefix="blah"
             Attributes attributes = el.attributes();
@@ -143,14 +140,8 @@ public class W3CDom {
                 }
                 namespaces.put(prefix, attr.getValue());
             }
-
-            // get the element prefix if any
-            int pos = el.tagName().indexOf(":");
-            return pos > 0 ? el.tagName().substring(0, pos) : "";
         }
-
     }
-
     /**
      * Serialize a W3C document to a String.
      * @param doc Document
