diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index dee765a1..ba43e2c4 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -209,7 +209,7 @@ class PeepholeSubstituteAlternateSyntax
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
-          callTarget.getString().equals("String")) {
+        callTarget.getString().equals("String")) {
       // Fold String(a) to '' + (a) on immutable literals,
       // which allows further optimizations
       //
@@ -220,7 +220,7 @@ class PeepholeSubstituteAlternateSyntax
       if (value != null) {
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
-            value.detachFromParent());
+            value.detachFromParent()).srcref(value);
         n.getParent().replaceChild(n, addition);
         reportCodeChange();
         return addition;
