  private Node tryFoldSimpleFunctionCall(Node n) {
    Preconditions.checkState(n.isCall());
    Node callTarget = n.getFirstChild();
    if (callTarget != null && callTarget.isName() &&
          callTarget.getString().equals("String")) {
      // Fold String(a) to '' + (a) on immutable literals,
      // which allows further optimizations
      //
      // We can't do this in the general case, because String(a) has
      // slightly different semantics than '' + (a). See
      // http://code.google.com/p/closure-compiler/issues/detail?id=759
      Node value = callTarget.getNext();
      if (value != null) {
        Node addition = IR.add(
            IR.string("").srcref(callTarget),
            value.detachFromParent());
        n.getParent().replaceChild(n, addition);
        reportCodeChange();
        return addition;
      }
    } else if (callTarget.isGetProp() &&
        callTarget.getFirstChild().isName() &&
        callTarget.getFirstChild().getString().equals("goog") &&
        callTarget.getLastChild().getString().equals("bind")) {
      Node thisNode = callTarget.getNext();
      if (thisNode != null && thisNode.isThis()) {
        n.replaceChild(callTarget,
            IR.function(IR.name(""), IR.paramList(), IR.block())
                .srcref(callTarget));
      }
    }
    return n;
  }