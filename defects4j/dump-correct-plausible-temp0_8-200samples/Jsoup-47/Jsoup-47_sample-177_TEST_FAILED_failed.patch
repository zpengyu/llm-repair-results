diff --git a/src/main/java/org/jsoup/nodes/Entities.java b/src/main/java/org/jsoup/nodes/Entities.java
index 5a2b368..f7d647a 100644
--- a/src/main/java/org/jsoup/nodes/Entities.java
+++ b/src/main/java/org/jsoup/nodes/Entities.java
@@ -86,7 +85,12 @@ public class Entities {
         final CoreCharset coreCharset = CoreCharset.byName(encoder.charset().name());
         final Map<Character, String> map = escapeMode.getMap();
         final int length = string.length();
-
+        char[] chars;
+        // pre-flight check if we need to escape:
+        if (!encoder.canEncode(string))
+            chars = string.toCharArray();
+        else
+            chars = null;
         int codePoint;
         for (int offset = 0; offset < length; offset += Character.charCount(codePoint)) {
             codePoint = string.codePointAt(offset);
@@ -137,17 +140,18 @@ public class Entities {
                             accum.append(c);
                         break;
                     default:
-                        if (canEncode(coreCharset, c, encoder))
+                        if (chars == null && canEncode(coreCharset, c, encoder))
                             accum.append(c);
                         else if (map.containsKey(c))
                             accum.append('&').append(map.get(c)).append(';');
-                        else
+                        else if (chars != null) // disable fallback encoder
                             accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
+                        else
+                            accum.append(c);
                 }
             } else {
-                final String c = new String(Character.toChars(codePoint));
-                if (encoder.canEncode(c)) // uses fallback encoder for simplicity
-                    accum.append(c);
+                if (chars == null)
+                    accum.append(Character.toChars(codePoint));
                 else
                     accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
             }
