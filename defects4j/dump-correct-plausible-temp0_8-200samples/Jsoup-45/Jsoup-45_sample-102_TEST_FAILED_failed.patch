diff --git a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java
index 5a46c4c..5564652 100644
--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java
@@ -379,55 +379,55 @@ public class HtmlTreeBuilder extends TreeBuilder {
         queue.set(i, in);
     }
 
-    void resetInsertionMode() {
-        boolean last = false;
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
-            Element node = stack.get(pos);
-            if (pos == 0) {
-                last = true;
-                node = contextElement;
-            }
-            String name = node.nodeName();
-            if ("select".equals(name)) {
-                transition(HtmlTreeBuilderState.InSelect);
-                break; // frag
-            } else if (("td".equals(name) || "td".equals(name) && !last)) {
-                transition(HtmlTreeBuilderState.InCell);
-                break;
-            } else if ("tr".equals(name)) {
-                transition(HtmlTreeBuilderState.InRow);
-                break;
-            } else if ("tbody".equals(name) || "thead".equals(name) || "tfoot".equals(name)) {
-                transition(HtmlTreeBuilderState.InTableBody);
-                break;
-            } else if ("caption".equals(name)) {
-                transition(HtmlTreeBuilderState.InCaption);
-                break;
-            } else if ("colgroup".equals(name)) {
-                transition(HtmlTreeBuilderState.InColumnGroup);
-                break; // frag
-            } else if ("table".equals(name)) {
-                transition(HtmlTreeBuilderState.InTable);
-                break;
-            } else if ("head".equals(name)) {
-                transition(HtmlTreeBuilderState.InBody);
-                break; // frag
-            } else if ("body".equals(name)) {
-                transition(HtmlTreeBuilderState.InBody);
-                break;
-            } else if ("frameset".equals(name)) {
-                transition(HtmlTreeBuilderState.InFrameset);
-                break; // frag
-            } else if ("html".equals(name)) {
-                transition(HtmlTreeBuilderState.BeforeHead);
-                break; // frag
-            } else if (last) {
-                transition(HtmlTreeBuilderState.InBody);
-                break; // frag
-            }
+void resetInsertionMode() {
+    int pos;
+    boolean last = false;
+    for (pos = stack.size() - 1; pos >= 0; pos--) {
+        Element node = stack.get(pos);
+        if (pos == 0) {
+            last = true;
+            node = contextElement;
+        }
+        String name = node.nodeName();
+        if ("select".equals(name)) {
+            transition(HtmlTreeBuilderState.InSelect);
+            break; // frag
+        } else if (("td".equals(name) || "td".equals(name) && !last)) {
+            transition(HtmlTreeBuilderState.InCell);
+            break;
+        } else if ("tr".equals(name)) {
+            transition(HtmlTreeBuilderState.InRow);
+            break;
+        } else if ("tbody".equals(name) || "thead".equals(name) || "tfoot".equals(name)) {
+            transition(HtmlTreeBuilderState.InTableBody);
+            break;
+        } else if ("caption".equals(name)) {
+            transition(HtmlTreeBuilderState.InCaption);
+            break;
+        } else if ("colgroup".equals(name)) {
+            transition(HtmlTreeBuilderState.InColumnGroup);
+            break; // frag
+        } else if ("table".equals(name)) {
+            transition(HtmlTreeBuilderState.InTable);
+            break;
+        } else if ("head".equals(name)) {
+            transition(HtmlTreeBuilderState.InBody);
+            break; // frag
+        } else if ("body".equals(name)) {
+            transition(HtmlTreeBuilderState.InBody);
+            break;
+        } else if ("frameset".equals(name)) {
+            transition(HtmlTreeBuilderState.InFrameset);
+            break; // frag
+        } else if ("html".equals(name)) {
+            transition(HtmlTreeBuilderState.BeforeHead);
+            break; // frag
+        } else if (last) {
+            transition(HtmlTreeBuilderState.InBody);
+            break; // frag
         }
     }
-
+}
     // todo: tidy up in specific scope methods
     private String[] specificScopeTarget = {null};
 
