diff --git a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java
index cc45a8f..edf926b 100644
--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java
+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java
@@ -49,11 +49,12 @@ public abstract class CoreOperationCompare extends CoreOperation {
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
+        boolean equal = equal(l, r);
+        if (!equal) {
+            System.err.println("COMPARING: " +
+                (l == null ? "null" : l.getClass().getName()) + " " +
+                (r == null ? "null" : r.getClass().getName()));
+        }
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
@@ -79,9 +76,8 @@ public abstract class CoreOperationCompare extends CoreOperation {
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
-        return equal(l, r);
+        return equal;
     }
-
     protected boolean contains(Iterator it, Object value) {
         while (it.hasNext()) {
             Object element = it.next();
