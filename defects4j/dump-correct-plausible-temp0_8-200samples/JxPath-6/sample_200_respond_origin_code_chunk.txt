    protected boolean equal(
        EvalContext context,
        Expression left,
        Expression right) 
    {
        Object l = left.compute(context);
        Object r = right.compute(context);

//        System.err.println("COMPARING: " +
//            (l == null ? "null" : l.getClass().getName()) + " " +
//            (r == null ? "null" : r.getClass().getName()));

        if (l instanceof InitialContext || l instanceof SelfContext) {
            l = ((EvalContext) l).getSingleNodePointer();
        }

        if (r instanceof InitialContext || r instanceof SelfContext) {
            r = ((EvalContext) r).getSingleNodePointer();
        }

        if (l instanceof Collection) {
            l = ((Collection) l).iterator();
        }

        if (r instanceof Collection) {
            r = ((Collection) r).iterator();
        }

        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
            return contains((Iterator) l, r);
        }
        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
            return contains((Iterator) r, l);
        }
        if (l instanceof Iterator && r instanceof Iterator) {
            return findMatch((Iterator) l, (Iterator) r);
        }
        return equal(l, r);
    }

    private boolean equal(Object l, Object r) {
        if (l instanceof String) {
            return ((String) l).equals(r);
        }
        if (r instanceof String) {
            return ((String) r).equals(l);
        }
        return l.equals(r);
    }

    private boolean contains(Iterator it, Object r) {
        while (it.hasNext()) {
            if (equal(it.next(), r)) {
                return true;
            }
        }
        return false;
    }

    private boolean findMatch(Iterator l, Iterator r) {
        while (l.hasNext()) {
            if (contains(r, l.next())) {
                return true;
            }
        }
        return false;
    }
