diff --git a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java
index cc45a8f..3819dc5 100644
--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java
+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java
@@ -42,7 +42,7 @@ public abstract class CoreOperationCompare extends CoreOperation {
     /**
      * Compares two values
      */
-    protected boolean equal(
+protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
@@ -79,9 +73,26 @@ public abstract class CoreOperationCompare extends CoreOperation {
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
+        if (l instanceof Iterator && r instanceof NodePointer) {
+            Iterator it = (Iterator) l;
+            while(it.hasNext()) {
+                if(equal(it.next(), r)) {
+                    return true;
+                }
+            }
+            return false;
+        }
+        if (r instanceof Iterator && l instanceof NodePointer) {
+            Iterator it = (Iterator) r;
+            while(it.hasNext()) {
+                if(equal(it.next(), l)) {
+                    return true;
+                }
+            }
+            return false;
+        }
         return equal(l, r);
     }
-
     protected boolean contains(Iterator it, Object value) {
         while (it.hasNext()) {
             Object element = it.next();
