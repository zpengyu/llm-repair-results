diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index 7709acdcd..421174913 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -53,27 +53,22 @@ public abstract class DateTimeSerializerBase<T>
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
-                JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
+                Boolean B = format.getShape().isNumeric() ? Boolean.TRUE : null;
+                if (B != null) {
+                    return withFormat(B, null);
                 }
-
                 if (format.getShape() == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
-                    df.setTimeZone(tz);
-                    return withFormat(Boolean.FALSE, df);
+                    final Locale loc = format.hasLocale()
+                                    ? format.getLocale()
+                                    : serializers.getLocale();
+                    final String pattern = format.hasPattern()
+                                    ? format.getPattern()
+                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    return withFormat(Boolean.FALSE, new SimpleDateFormat(pattern, loc));
                 }
             }
         }
