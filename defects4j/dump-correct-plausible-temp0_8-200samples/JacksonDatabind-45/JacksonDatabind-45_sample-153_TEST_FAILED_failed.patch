diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index 7709acdcd..0cadf465a 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -53,21 +53,20 @@ public abstract class DateTimeSerializerBase<T>
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
+                // Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Do we have a String format? If yes, can further refine:
+                if (shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                            ? format.getPattern()
+                            : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
+                            ? format.getLocale()
+                            : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
@@ -75,6 +74,10 @@ public abstract class DateTimeSerializerBase<T>
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+                if ((shape == JsonFormat.Shape.STRING) || (shape == JsonFormat.Shape.NUMBER)
+                        || (shape == JsonFormat.Shape.NUMBER_INT) || (shape == JsonFormat.Shape.ARRAY)) {
+                    return withFormat(Boolean.TRUE, null);
+                }
             }
         }
         return this;
