diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index 051f5c8e..1f3e9433 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1442,12 +1442,6 @@ final class TypedScopeCreator implements ScopeCreator {
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
-      if (n.getType() == Token.LP && parent == scope.getRootNode()) {
-        handleFunctionInputs(parent);
-        return;
-      }
-
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
@@ -1464,7 +1458,24 @@ final class TypedScopeCreator implements ScopeCreator {
           break;
       }
     }
-
+    private void handleFunctionInputs(Node fn) {
+      if (fn.getFirstChild().getType() != Token.NAME) {
+        return;
+      }
+      Node args = fn.getFirstChild().getNext();
+      if (args == null || args.getType() != Token.PARAM_LIST) {
+        return;
+      }
+      int index = 0;
+      while (args != null) {
+        Node arg = args.getFirstChild();
+        if (arg != null) {
+          defineArg(arg, fn, index);
+          index++;
+        }
+        args = args.getNext();
+      }
+    }
     /** Handle bleeding functions and function parameters. */
     private void handleFunctionInputs(Node fnNode) {
       // Handle bleeding functions.
