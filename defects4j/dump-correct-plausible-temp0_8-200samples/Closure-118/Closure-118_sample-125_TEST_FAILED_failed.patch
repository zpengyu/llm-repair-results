diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index 96c66201..add79158 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -489,10 +489,9 @@ class DisambiguateProperties<T> implements CompilerPass {
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
+           child != null;
+           child = child.getNext()) {
         // Maybe STRING, GET, SET
-
         // We should never see a mix of numbers and strings.
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
@@ -502,10 +500,11 @@ class DisambiguateProperties<T> implements CompilerPass {
                                    processProperty(t, prop, type, null))) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
-          if (propertiesToErrorFor.containsKey(name)) {
+          String propName = name;
+          if (propertiesToErrorFor.containsKey(propName)) {
             compiler.report(JSError.make(
-                t.getSourceName(), child, propertiesToErrorFor.get(name),
-                Warnings.INVALIDATION, name,
+                t.getSourceName(), child, propertiesToErrorFor.get(propName),
+                Warnings.INVALIDATION, propName,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
