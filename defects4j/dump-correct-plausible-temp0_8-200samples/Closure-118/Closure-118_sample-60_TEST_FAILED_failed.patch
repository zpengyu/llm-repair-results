diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index 96c66201..5c75ec64 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -488,15 +488,15 @@ class DisambiguateProperties<T> implements CompilerPass {
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
+      boolean first = true;
       for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
+           child != null;
+           child = child.getNext()) {
         // Maybe STRING, GET, SET
-
         // We should never see a mix of numbers and strings.
-        String name = child.getString();
+        String name = first && !child.isGetterDef() && !child.isSetterDef() ?
+            "*default*" : child.getString();
         T type = typeSystem.getType(getScope(), n, name);
-
         Property prop = getProperty(name);
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
@@ -509,9 +509,9 @@ class DisambiguateProperties<T> implements CompilerPass {
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
+        first = false;
       }
     }
-
     private void printErrorLocations(List<String> errors, JSType t) {
       if (!t.isObject() || t.isAllType()) {
         return;
