diff --git a/src/java/org/apache/commons/lang/time/DateUtils.java b/src/java/org/apache/commons/lang/time/DateUtils.java
index 324dd037..5dfb886f 100644
--- a/src/java/org/apache/commons/lang/time/DateUtils.java
+++ b/src/java/org/apache/commons/lang/time/DateUtils.java
@@ -620,24 +620,48 @@ public class DateUtils {
         if (val.get(Calendar.YEAR) > 280000000) {
             throw new ArithmeticException("Calendar value too large for accurate calculations");
         }
-
-
-        // ----------------- Fix for LANG-59 ---------------------- START ---------------
-        // see http://issues.apache.org/jira/browse/LANG-59
+        if (field == DateUtils.SEMI_MONTH) {
+            if (val.get(Calendar.DATE) == 1) {
+                val.add(Calendar.DATE, 15);
+            } else {
+                val.add(Calendar.DATE, -15);
+                val.add(Calendar.MONTH, 1);
+            }
+            return;
+        }
+        Date date = val.getTime();
+        boolean useMonth = false;
+        if (field == DateUtils.ROUND_HALF_UP) {
+            field = DateUtils.ROUND_HALF_EVEN;
+        }
+        switch (field) {
+            case DateUtils.ROUND_HALF_DOWN:
+            case DateUtils.ROUND_HALF_EVEN:
+            case DateUtils.ROUND_HALF_UP:
+                // Rounding modes round to nearest
+                // Rounding mode round towards zero. On a tie, round up.
+            case DateUtils.TRUNCATE:
+                // Truncating modes only change the later fields
+                if (val.get(Calendar.YEAR) > 0) {
+                    val.set(Calendar.YEAR, 0);
+                }
+                if (val.get(Calendar.MONTH) > Calendar.JANUARY) {
+                    val.set(Calendar.MONTH, Calendar.JANUARY);
+                }
+                break;
+            default:
+                throw new IllegalArgumentException("The field " + field + " is not supported");
+        }
+        // ----------------- Fix for LANG-440 ---------------------- START ---------------
+        // see http://issues.apache.org/jira/browse/LANG-440
         //
         // Manually truncate milliseconds, seconds and minutes, rather than using
         // Calendar methods.
-
-
         // truncate milliseconds
-
         // truncate seconds
-
         // truncate minutes
-
         // reset time
-        // ----------------- Fix for LANG-59 ----------------------- END ----------------
-
+        // ----------------- Fix for LANG-440 ----------------------- END ----------------
         boolean roundUp = false;
         for (int i = 0; i < fields.length; i++) {
             for (int j = 0; j < fields[i].length; j++) {
@@ -706,12 +730,12 @@ public class DateUtils {
                 roundUp = offset > ((max - min) / 2);
             }
             //We need to remove this field
+            if (offset != 0) {
                 val.set(fields[i][0], val.get(fields[i][0]) - offset);
+            }
         }
         throw new IllegalArgumentException("The field " + field + " is not supported");
-
     }
-
     //-----------------------------------------------------------------------
     /**
      * <p>This constructs an <code>Iterator</code> over each day in a date
