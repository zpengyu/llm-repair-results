public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {
    // rescale both vectors without losing precision,
    // to ensure their norm are the same order of magnitude
    final double norm2 = v2.getNormSq();
    final double s2 = FastMath.sqrt(norm2);
    final double rho = Vector3D.dotProduct(v1, v2) / norm2;
    final Vector3D v3 = new Vector3D(1, v1.subtract(v2.scalarMultiply(rho / s2)));
    // compute cross product from v3 and v2 instead of v1 and v2
    return new Vector3D(v3.y * v2.z - v3.z * v2.y, v3.z * v2.x - v3.x * v2.z, v3.x * v2.y - v3.y * v2.x);
}
