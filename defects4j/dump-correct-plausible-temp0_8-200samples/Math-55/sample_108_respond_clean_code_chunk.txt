  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {
      // compute rho as an 8 bits approximation of v1.v2 / v2.v2
      final double rho     = v1.dotProduct(v2) / v2.dotProduct(v2);
      final Vector3D v3    = v1.subtract(v2.scalarMultiply(rho));
      // compute cross product from v3 and v2 instead of v1 and v2
      return new Vector3D(v3.y * v2.z - v3.z * v2.y, v3.z * v2.x - v3.x * v2.z, v3.x * v2.y - v3.y * v2.x);
  }