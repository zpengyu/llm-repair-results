    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                  int hourOfDay, int minuteOfHour,
                                  int secondOfMinute, int millisOfSecond)
        throws IllegalArgumentException
    {
        Chronology base;
        if ((base = getBase()) != null) {
            return base.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        }

        // Assume date is Gregorian.
        long instant;
        try {
            instant = iGregorianChronology.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        } catch (IllegalArgumentException e) {
            if (year == 1582 && monthOfYear == 10) {
                if (dayOfMonth < 15) {
                    instant = iJulianChronology.getDateTimeMillis
                        (year, monthOfYear, dayOfMonth,
                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                } else if (dayOfMonth == 15) {
                    instant = iGregorianChronology.getDateTimeMillis
                        (year, monthOfYear, dayOfMonth,
                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                } else {
                    throw new IllegalArgumentException
                        ("Specified date does not exist");
                }
            } else {
                throw e;
            }
        }

        return instant;
    }
