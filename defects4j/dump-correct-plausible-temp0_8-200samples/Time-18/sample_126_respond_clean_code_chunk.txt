    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                  int hourOfDay, int minuteOfHour,
                                  int secondOfMinute, int millisOfSecond)
        throws IllegalArgumentException
    {
        Chronology base;
        if ((base = getBase()) != null) {
            return base.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        }
        // Assume date is Gregorian.
        long instant;
        // Check for illegal cutover.
        if (year == iCutoverYear &&
            monthOfYear == iCutoverMonth &&
            dayOfMonth == iCutoverDayOfMonth)
        {
            // Okay, it's in the illegal cutover gap.
            throw new IllegalArgumentException("Specified date does not exist");
        }
        else if (year < iCutoverYear ||
                 (year == iCutoverYear && monthOfYear < iCutoverMonth) ||
                 (year == iCutoverYear && monthOfYear == iCutoverMonth && dayOfMonth < iCutoverDayOfMonth))
        {
            // Before cutover, use Julian.
            instant = iJulianChronology.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        }
        else
        {
            // After cutover, use Gregorian.
            instant = iGregorianChronology.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        }
        return instant;
    }