    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                  int hourOfDay, int minuteOfHour,
                                  int secondOfMinute, int millisOfSecond)
        throws IllegalArgumentException
    {
        Chronology base;
        if ((base = getBase()) != null) {
            return base.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        }
        long instant = iGregorianChronology.getDateTimeMillis
            (year, monthOfYear, dayOfMonth,
             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
        if (instant < iCutoverMillis) {
            // Maybe it's Julian.
            try {
                instant = iJulianChronology.getDateTimeMillis
                    (year, monthOfYear, dayOfMonth,
                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                if (instant >= iCutoverMillis) {
                    // Okay, it's in the illegal cutover gap.
                    throw new IllegalArgumentException("Specified date does not exist");
                }
            } catch (IllegalArgumentException e) {
                if (year == 1582 && monthOfYear == 10) {
                    // October 1582 didn't exist in the Julian calendar, but it
                    // did in the Gregorian calendar. If the exception is
                    // because of October, then readjust the date and try
                    // again.
                    instant = iGregorianChronology.getDateTimeMillis
                        (year, monthOfYear, dayOfMonth,
                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                } else {
                    // Rethrow the exception.
                    throw e;
                }
            }
        }
        return instant;
    }