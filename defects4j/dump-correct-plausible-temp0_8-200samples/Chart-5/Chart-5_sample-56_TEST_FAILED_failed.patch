diff --git a/source/org/jfree/data/xy/XYSeries.java b/source/org/jfree/data/xy/XYSeries.java
index 0b37e6e..a8b7f33 100644
--- a/source/org/jfree/data/xy/XYSeries.java
+++ b/source/org/jfree/data/xy/XYSeries.java
@@ -537,44 +537,48 @@ public class XYSeries extends Series implements Cloneable, Serializable {
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
-    public XYDataItem addOrUpdate(Number x, Number y) {
+        public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
-
-        // if we get to here, we know that duplicate X values are not permitted
-        XYDataItem overwritten = null;
-        int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
-            XYDataItem existing = (XYDataItem) this.data.get(index);
-            try {
-                overwritten = (XYDataItem) existing.clone();
+        if (this.autoSort) {
+            int index = Collections.binarySearch(this.data, new XYDataItem(x, null));
+            if (index < 0) {
+                this.data.add(-index - 1, new XYDataItem(x, y));
+                return null;
             }
-            catch (CloneNotSupportedException e) {
-                throw new SeriesException("Couldn't clone XYDataItem!");
+            else {
+                XYDataItem overwritten = (XYDataItem) this.data.get(index);
+                try {
+                    overwritten = (XYDataItem) overwritten.clone();
+                }
+                catch (CloneNotSupportedException e) {
+                    throw new SeriesException("Couldn't clone XYDataItem!");
+                }
+                XYDataItem oldItem = (XYDataItem) this.data.get(index);
+                oldItem.setY(y);
+                return overwritten;
             }
-            existing.setY(y);
         }
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
-            if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            XYDataItem overwritten = null;
+            int index = indexOf(x);
+            if (index >= 0) {
+                XYDataItem oldItem = (XYDataItem) this.data.get(index);
+                try {
+                    overwritten = (XYDataItem) oldItem.clone();
+                }
+                catch (CloneNotSupportedException e) {
+                    throw new SeriesException("Couldn't clone XYDataItem!");
+                }
+                oldItem.setY(y);
             }
             else {
-                this.data.add(new XYDataItem(x, y));
-            }
-            // check if this addition will exceed the maximum item count...
-            if (getItemCount() > this.maximumItemCount) {
-                this.data.remove(0);
+                this.data.add(-index - 1, new XYDataItem(x, y));
             }
+            return overwritten;
         }
-        fireSeriesChanged();
-        return overwritten;
     }
-
     /**
      * Returns the index of the item with the specified x-value, or a negative
      * index if the series does not contain an item with that x-value.  Be
