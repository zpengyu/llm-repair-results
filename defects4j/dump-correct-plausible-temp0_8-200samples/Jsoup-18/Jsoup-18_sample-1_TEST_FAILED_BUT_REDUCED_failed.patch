diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index 7f39fc5..8127872 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -5,9 +5,9 @@ import org.jsoup.helper.Validate;
 /**
  CharacterReader cosumes tokens off a string. To replace the old TokenQueue.
  */
+import java.util.Objects;
 class CharacterReader {
     static final char EOF = (char) -1;
-
     private final String input;
     private final int length;
     private int pos = 0;
@@ -68,8 +56,8 @@ class CharacterReader {
             return consumeToEnd();
         }
     }
-
     String consumeTo(String seq) {
+        Objects.requireNonNull(seq);
         int offset = input.indexOf(seq, pos);
         if (offset != -1) {
             String consumed = input.substring(pos, offset);
@@ -91,12 +77,10 @@ class CharacterReader {
             }
             pos++;
         }
-
         return pos > start ? input.substring(start, pos) : "";
     }
-
     String consumeToEnd() {
-        String data = input.substring(pos, input.length() - 1);
+        String data = input.substring(pos, input.length());
         pos = input.length();
         return data;
     }
@@ -137,20 +117,17 @@ class CharacterReader {
         }
         return input.substring(start, pos);
     }
-
     boolean matches(char c) {
         return !isEmpty() && input.charAt(pos) == c;
-
     }
-
     boolean matches(String seq) {
+        Objects.requireNonNull(seq);
         return input.startsWith(seq, pos);
     }
-
     boolean matchesIgnoreCase(String seq) {
+        Objects.requireNonNull(seq);
         return input.regionMatches(true, pos, seq, 0, seq.length());
     }
-
     boolean matchesAny(char... seq) {
         if (isEmpty())
             return false;
