diff --git a/src/main/java/org/jsoup/parser/CharacterReader.java b/src/main/java/org/jsoup/parser/CharacterReader.java
index 7f39fc5..88365e1 100644
--- a/src/main/java/org/jsoup/parser/CharacterReader.java
+++ b/src/main/java/org/jsoup/parser/CharacterReader.java
@@ -37,11 +30,6 @@ class CharacterReader {
         pos++;
         return val;
     }
-
-    void unconsume() {
-        pos--;
-    }
-
     void advance() {
         pos++;
     }
@@ -53,11 +39,6 @@ class CharacterReader {
     void rewindToMark() {
         pos = mark;
     }
-
-    String consumeAsString() {
-        return input.substring(pos, pos++);
-    }
-
     String consumeTo(char c) {
         int offset = input.indexOf(c, pos);
         if (offset != -1) {
@@ -91,16 +69,8 @@ class CharacterReader {
             }
             pos++;
         }
-
         return pos > start ? input.substring(start, pos) : "";
     }
-
-    String consumeToEnd() {
-        String data = input.substring(pos, input.length() - 1);
-        pos = input.length();
-        return data;
-    }
-
     String consumeLetterSequence() {
         int start = pos;
         while (!isEmpty()) {
@@ -146,11 +110,6 @@ class CharacterReader {
     boolean matches(String seq) {
         return input.startsWith(seq, pos);
     }
-
-    boolean matchesIgnoreCase(String seq) {
-        return input.regionMatches(true, pos, seq, 0, seq.length());
-    }
-
     boolean matchesAny(char... seq) {
         if (isEmpty())
             return false;
@@ -185,16 +140,6 @@ class CharacterReader {
             return false;
         }
     }
-
-    boolean matchConsumeIgnoreCase(String seq) {
-        if (matchesIgnoreCase(seq)) {
-            pos += seq.length();
-            return true;
-        } else {
-            return false;
-        }
-    }
-
     boolean containsIgnoreCase(String seq) {
         // used to check presence of </title>, </style>. only finds consistent case.
         String loScan = seq.toLowerCase();
