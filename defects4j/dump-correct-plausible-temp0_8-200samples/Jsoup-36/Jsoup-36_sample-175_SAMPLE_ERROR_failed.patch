diff --git a/src/main/java/org/jsoup/helper/DataUtil.java b/src/main/java/org/jsoup/helper/DataUtil.java
index 3626928..58023c4 100644
--- a/src/main/java/org/jsoup/helper/DataUtil.java
+++ b/src/main/java/org/jsoup/helper/DataUtil.java
@@ -165,6 +153,25 @@ public class DataUtil {
         }
         return null;
     }
-    
-    
+    /**
+     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
+     * will kick in.)
+     * @param contentType e.g. "text/html; charset=EUC-JP"
+     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+     */
+    static String getCharsetFromContentType(String contentType) {
+        if (contentType == null) return null;
+        Matcher m = charsetPattern.matcher(contentType);
+        if (m.find()) {
+            String charset = m.group(1).trim();
+            // need to check for charset string before decoding, since the string is case insensitive and can have white space.
+            if (StringUtil.in(charset.toUpperCase(Locale.ENGLISH), "UTF-8", "ISO-8859-1", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5",
+                    "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "ISO-8859-10", "ISO-8859-11", "ISO-8859-13", "ISO-8859-14", "ISO-8859-15",
+                    "ISO-8859-16", "UTF-16", "UTF-16BE", "UTF-16LE", "US-ASCII", "EUC-JP", "EUC-KR", "EUC-CN", "EUC-TW", "GB18030", "GBK", "ISCII91",
+                    "KOI8-R", "Shift_JIS", "Big5", "MacRoman"))
+                return charset;
+            // if our advanced charset matching fails.... we just take the default
+        }
+        return null;
+    }
 }
\ No newline at end of file
