diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
index 0c2e4a7b..0be6a18d 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
@@ -493,7 +487,7 @@ public class FastDateFormat extends Format {
                 break;
             case 'y': // year (number)
                 if (tokenLen >= 4) {
-                    rule = selectNumberRule(Calendar.YEAR, tokenLen);
+                    rule = new NumberRule(Calendar.YEAR, tokenLen, true);
                 } else {
                     rule = TwoDigitYearField.INSTANCE;
                 }
@@ -510,46 +504,46 @@ public class FastDateFormat extends Format {
                 }
                 break;
             case 'd': // day in month (number)
-                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);
+                rule = new NumberRule(Calendar.DAY_OF_MONTH, tokenLen, true);
                 break;
             case 'h': // hour in am/pm (number, 1..12)
-                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));
+                rule = new TwelveHourField(new NumberRule(Calendar.HOUR, tokenLen, true));
                 break;
             case 'H': // hour in day (number, 0..23)
-                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);
+                rule = new NumberRule(Calendar.HOUR_OF_DAY, tokenLen, true);
                 break;
             case 'm': // minute in hour (number)
-                rule = selectNumberRule(Calendar.MINUTE, tokenLen);
+                rule = new NumberRule(Calendar.MINUTE, tokenLen, true);
                 break;
             case 's': // second in minute (number)
-                rule = selectNumberRule(Calendar.SECOND, tokenLen);
+                rule = new NumberRule(Calendar.SECOND, tokenLen, true);
                 break;
             case 'S': // millisecond (number)
-                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);
+                rule = new NumberRule(Calendar.MILLISECOND, tokenLen, true);
                 break;
             case 'E': // day in week (text)
                 rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);
                 break;
             case 'D': // day in year (number)
-                rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);
+                rule = new NumberRule(Calendar.DAY_OF_YEAR, tokenLen, true);
                 break;
             case 'F': // day of week in month (number)
-                rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);
+                rule = new NumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen, true);
                 break;
             case 'w': // week in year (number)
-                rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);
+                rule = new NumberRule(Calendar.WEEK_OF_YEAR, tokenLen, true);
                 break;
             case 'W': // week in month (number)
-                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);
+                rule = new NumberRule(Calendar.WEEK_OF_MONTH, tokenLen, true);
                 break;
             case 'a': // am/pm marker (text)
                 rule = new TextField(Calendar.AM_PM, AmPmStrings);
                 break;
             case 'k': // hour in day (1..24)
-                rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));
+                rule = new TwentyFourHourField(new NumberRule(Calendar.HOUR_OF_DAY, tokenLen, true));
                 break;
             case 'K': // hour in am/pm (0..11)
-                rule = selectNumberRule(Calendar.HOUR, tokenLen);
+                rule = new NumberRule(Calendar.HOUR, tokenLen, true);
                 break;
             case 'z': // time zone (text)
                 if (tokenLen >= 4) {
