diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
index 0c2e4a7b..f75af9a4 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
@@ -483,22 +479,20 @@ public class FastDateFormat extends Format {
             if (tokenLen == 0) {
                 break;
             }
-
             Rule rule;
-            char c = token.charAt(0);
-
+            String c = token;
             switch (c) {
-            case 'G': // era designator (text)
+            case "G": // era designator (text)
                 rule = new TextField(Calendar.ERA, ERAs);
                 break;
-            case 'y': // year (number)
+            case "y": // year (number)
                 if (tokenLen >= 4) {
                     rule = selectNumberRule(Calendar.YEAR, tokenLen);
                 } else {
                     rule = TwoDigitYearField.INSTANCE;
                 }
                 break;
-            case 'M': // month in year (text and number)
+            case "M": // month in year (text and number)
                 if (tokenLen >= 4) {
                     rule = new TextField(Calendar.MONTH, months);
                 } else if (tokenLen == 3) {
@@ -509,63 +503,63 @@ public class FastDateFormat extends Format {
                     rule = UnpaddedMonthField.INSTANCE;
                 }
                 break;
-            case 'd': // day in month (number)
+            case "d": // day in month (number)
                 rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);
                 break;
-            case 'h': // hour in am/pm (number, 1..12)
+            case "h": // hour in am/pm (number, 1..12)
                 rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));
                 break;
-            case 'H': // hour in day (number, 0..23)
+            case "H": // hour in day (number, 0..23)
                 rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);
                 break;
-            case 'm': // minute in hour (number)
+            case "m": // minute in hour (number)
                 rule = selectNumberRule(Calendar.MINUTE, tokenLen);
                 break;
-            case 's': // second in minute (number)
+            case "s": // second in minute (number)
                 rule = selectNumberRule(Calendar.SECOND, tokenLen);
                 break;
-            case 'S': // millisecond (number)
+            case "S": // millisecond (number)
                 rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);
                 break;
-            case 'E': // day in week (text)
+            case "E": // day in week (text)
                 rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);
                 break;
-            case 'D': // day in year (number)
+            case "D": // day in year (number)
                 rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);
                 break;
-            case 'F': // day of week in month (number)
+            case "F": // day of week in month (number)
                 rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);
                 break;
-            case 'w': // week in year (number)
+            case "w": // week in year (number)
                 rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);
                 break;
-            case 'W': // week in month (number)
+            case "W": // week in month (number)
                 rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);
                 break;
-            case 'a': // am/pm marker (text)
+            case "a": // am/pm marker (text)
                 rule = new TextField(Calendar.AM_PM, AmPmStrings);
                 break;
-            case 'k': // hour in day (1..24)
+            case "k": // hour in day (1..24)
                 rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));
                 break;
-            case 'K': // hour in am/pm (0..11)
+            case "K": // hour in am/pm (0..11)
                 rule = selectNumberRule(Calendar.HOUR, tokenLen);
                 break;
-            case 'z': // time zone (text)
+            case "z": // time zone (text)
                 if (tokenLen >= 4) {
                     rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);
                 } else {
                     rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);
                 }
                 break;
-            case 'Z': // time zone (value)
+            case "Z": // time zone (value)
                 if (tokenLen == 1) {
                     rule = TimeZoneNumberRule.INSTANCE_NO_COLON;
                 } else {
                     rule = TimeZoneNumberRule.INSTANCE_COLON;
                 }
                 break;
-            case '\'': // literal text
+            case "'": // literal text
                 String sub = token.substring(1);
                 if (sub.length() == 1) {
                     rule = new CharacterLiteral(sub.charAt(0));
