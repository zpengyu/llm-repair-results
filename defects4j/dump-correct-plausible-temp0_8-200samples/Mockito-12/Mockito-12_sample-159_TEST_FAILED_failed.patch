diff --git a/src/org/mockito/internal/util/reflection/GenericMaster.java b/src/org/mockito/internal/util/reflection/GenericMaster.java
index 64bf1540f..006b8645c 100644
--- a/src/org/mockito/internal/util/reflection/GenericMaster.java
+++ b/src/org/mockito/internal/util/reflection/GenericMaster.java
@@ -13,14 +13,16 @@ public class GenericMaster {
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
-        }
-        
-        return Object.class;
-    }
-}
+	public Class getGenericType(Field field) {
+		if (field.getGenericType() != null) {
+			if (field.getGenericType() instanceof ParameterizedType) {
+				ParameterizedType parameterizedType = (ParameterizedType) field.getGenericType();
+				if (parameterizedType.getActualTypeArguments().length > 0) {
+					Type actual = parameterizedType.getActualTypeArguments()[0];
+					return (Class) actual;
+					// in case of nested generics we don't go deep
+				}
+			}
+		}
+		return Object.class;
+	}}
