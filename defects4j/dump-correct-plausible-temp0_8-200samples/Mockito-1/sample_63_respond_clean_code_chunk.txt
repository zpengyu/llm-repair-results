    public void captureArgumentsFrom(Invocation invocation) {
        if (invocation.getMethod().isVarArgs()) {
            int indexOfVararg = invocation.getRawArguments().length - 1;
            if (indexOfVararg >= matchers.size()) {
                indexOfVararg = matchers.size() - 1;
            }
            Object[] vararg = (Object[]) invocation.getRawArguments()[indexOfVararg];
            for (int i = 0; i < vararg.length; i++) {
                Matcher m = matchers.get(indexOfVararg + i);
                if (m instanceof CapturesArguments) {
                    ((CapturesArguments) m).captureFrom(vararg[i]);
                }
            }
            //since we've captured all varargs already, it does not make sense to process other matchers.
            return;
        } else {
            for (int position = 0; position < matchers.size(); position++) {
                Matcher m = matchers.get(position);
                if (m instanceof CapturesArguments) {
                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
                }
            }
        }
    }