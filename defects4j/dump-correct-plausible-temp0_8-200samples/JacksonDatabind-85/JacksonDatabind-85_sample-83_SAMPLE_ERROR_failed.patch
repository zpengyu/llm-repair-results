diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..5a2e3f69d 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -61,39 +61,55 @@ public abstract class DateTimeSerializerBase<T>
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+        if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimeZone()) {
+            TimeZone tz = format.getTimeZone();
+            final String pattern = format.hasPattern()
+                            ? format.getPattern()
+                            : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+            SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+            if (tz == null) {
+                tz = serializers.getTimeZone();
+            }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        if (this._customFormat == null) {
+            StdDateFormat df = new StdDateFormat();
+            // 12-Mar-2015, tatu: Special case, we can (must) use shared instance here
+        if (format.hasTimeZone()) {
+            TimeZone tz = format.getTimeZone();
+            if (tz != null) {
+                df = (StdDateFormat) df.withTimeZone(tz);
+            }
+        }
+        if (format.hasLocale()) {
+            Locale loc = format.getLocale();
+            if (loc != null) {
+                df = (StdDateFormat) df.withLocale(loc);
+            }
+        }
+            return withFormat(Boolean.FALSE, df);
+        }
+        // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        if (format.hasLocale()) {
+            Locale loc = format.getLocale();
+            if (loc != null) {
+                SimpleDateFormat df = (SimpleDateFormat) _customFormat.clone();
+                df.setTimeZone(serializers.getTimeZone());
+                df.setLocale(loc);
+                return withFormat(Boolean.FALSE, df);
+            }
+        }
         return this;
     }
-
     /*
     /**********************************************************
     /* Accessors
