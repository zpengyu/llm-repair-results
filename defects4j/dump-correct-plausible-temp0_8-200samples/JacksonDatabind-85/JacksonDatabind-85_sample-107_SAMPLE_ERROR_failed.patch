diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..06125411f 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -61,39 +61,63 @@ public abstract class DateTimeSerializerBase<T>
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+        if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                || format.hasLocale() || format.hasTimeZone()) {
+            TimeZone tz = format.getTimeZone();
+            final String pattern = format.hasPattern()
+                    ? format.getPattern()
+                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
-                            ? format.getLocale()
-                            : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+                    ? format.getLocale()
+                    : serializers.getLocale();
+            SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+            if (tz == null) {
+                tz = serializers.getTimeZone();
+            }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
+        final DateFormat df = serializers.getConfig().getDateFormat();
+        if (df != null) {
+            if (df instanceof StdDateFormat) {
+                StdDateFormat sdf = ((StdDateFormat) df).withShape(shape);
+                if (format.hasLocale()) {
+                    sdf = sdf.withLocale(format.getLocale());
+                }
+                if (format.hasTimeZone()) {
+                    sdf = sdf.withTimeZone(format.getTimeZone());
+                }
+                return withFormat(Boolean.FALSE, sdf);
+            }
+            // 08-Jun-2017, tatu: Unfortunately there's no generally usable
+            //    mechanism for changing `DateFormat` instances (or even clone()ing)
+            //    So: require it be `SimpleDateFormat`; can't config other types
             // Ugh. No way to change `Locale`, create copy; must re-crete completely:
-        return this;
+            return this;
+        }
+        // If no DateFormat, need to create one.
+        // One wrinkle is that "natural" dates (aka "timestamps") must use
+        // different format from date-only ones.
+        if (shape.isStandard()) {
+            return withFormat(Boolean.FALSE, StdDateFormat.getISO8601Format(format.hasTimeZone() ? format.getTimeZone() : serializers.getTimeZone(), format.hasLocale() ? format.getLocale() : serializers.getLocale(),
+                    shape));
+        }
+        // otherwise need to create a default instance:
+        final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();
+        final TimeZone tz = format.hasTimeZone() ? format.getTimeZone() : serializers.getTimeZone();
+        if (shape == JsonFormat.Shape.STRING) {
+            return withFormat(Boolean.FALSE, StdDateFormat.getBlueprintISO8601Format(tz, loc));
+        }
+        if (shape == JsonFormat.Shape.NUMBER_INT) {
+            return withFormat(Boolean.FALSE, StdDateFormat.getBlueprintISO8601Format(tz, loc));
+        }
+        // Since we may have gotten here with non-standard shape, need to check it.
+        throw new IllegalArgumentException("Unsupported shape ("+shape+"), cannot construct DefaultSerializer");
     }
-
     /*
     /**********************************************************
     /* Accessors
