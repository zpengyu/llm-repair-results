diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..f0a4d82ce 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -80,20 +79,27 @@ public abstract class DateTimeSerializerBase<T>
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
+        if (_format instanceof StdDateFormat) {
+            return withFormat(Boolean.FALSE, ((StdDateFormat) _format).withShape(shape));
+        }
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
 //            serializers.reportBadDefinition(handledType(), String.format(
             // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        if (_format instanceof SimpleDateFormat) {
+            SimpleDateFormat df = (SimpleDateFormat) _format;
+            df = new SimpleDateFormat(df.toPattern(), df.getDateFormatSymbols());
+            df.setTimeZone(df.getTimeZone());
+            return withFormat(Boolean.FALSE, df);
+        }
+        serializers.reportBadDefinition(handledType(), String.format(
+                "Cannot change configuration of `java.text.DateFormat` subtype `%s`; can only use `java.text.SimpleDateFormat` (and subtypes) or `com.fasterxml.jackson.databind.util.StdDateFormat`",
+                _format.getClass().getName()));
         return this;
     }
-
     /*
     /**********************************************************
     /* Accessors
