diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..b374fa3de 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -66,34 +65,46 @@ public abstract class DateTimeSerializerBase<T>
         // First: custom pattern will override things
                 if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                                 || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+            TimeZone tz = format.getTimeZone();
+            final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+            SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+            if (tz == null) {
+                tz = serializers.getTimeZone();
+            }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        if (_serializationFormat != null) {
+            SimpleDateFormat df = _serializationFormat.clone();
+            if (format.hasTimeZone()) {
+                df.setTimeZone(format.getTimeZone());
+            }
+            return withFormat(Boolean.FALSE, df);
+        }
+        // Jackson's own `StdDateFormat` is quite easy to deal with...
+        StdDateFormat df = serializers.getConfig().getDateFormat();
+        if (df instanceof StdDateFormat) {
+            StdDateFormat std = (StdDateFormat) df;
+            if (format.hasLocale()) {
+                std = std.withLocale(format.getLocale());
+            }
+            if (format.hasTimeZone()) {
+                std = std.withTimeZone(format.getTimeZone());
+            }
+            return withFormat(Boolean.FALSE, std);
+        }
+        // Ugh. No way to change `Locale`, create copy; must re-crete completely:
         return this;
     }
-
     /*
     /**********************************************************
     /* Accessors
