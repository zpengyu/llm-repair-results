diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..94652188d 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -61,31 +61,30 @@ public abstract class DateTimeSerializerBase<T>
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-            final Locale loc = format.hasLocale()
-                            ? format.getLocale()
-                            : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+        if (format.hasPattern()) {
+            TimeZone tz = format.hasTimeZone() ? format.getTimeZone() : serializers.getTimeZone();
+            Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();
+            SimpleDateFormat df = new SimpleDateFormat(format.getPattern(), loc);
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
+        if ((shape == JsonFormat.Shape.STRING) || format.hasLocale() || format.hasTimeZone()) {
+            // Jackson's own `StdDateFormat` is quite easy to deal with...
+            StdDateFormat fmt = serializers.getConfig().getDateFormat();
+            TimeZone tz = format.getTimeZone();
+            if (tz == null) {
+                tz = serializers.getTimeZone();
+            }
+            if (format.hasLocale()) {
+                // Ugh. No way to change `Locale`, create copy; must re-create completely:
+                fmt = (StdDateFormat) fmt.clone();
+                fmt.setTimeZone(tz);
+            }
+            return withFormat(Boolean.FALSE, fmt);
+        }
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
