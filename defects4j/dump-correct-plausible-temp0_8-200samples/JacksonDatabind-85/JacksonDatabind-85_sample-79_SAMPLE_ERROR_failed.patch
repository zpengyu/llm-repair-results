diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..cbedfaf1c 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -61,39 +61,40 @@ public abstract class DateTimeSerializerBase<T>
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+        if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimeZone()) {
+            TimeZone tz = format.getTimeZone();
+            final String pattern = format.hasPattern()
+                            ? format.getPattern()
+                            : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+            SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+            if (tz == null) {
+                tz = serializers.getTimeZone();
+            }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
+        // ... but `DateFormat` is trickier. We do know
+        //    that `StdDateFormat` is used for JSON, so if so, use that.
+        if (StdDateFormat.class.isAssignableFrom(dateFormat.getClass())) {
+            return withFormat(Boolean.FALSE, ((StdDateFormat) dateFormat).withShape(shape));
+        }
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        serializers.reportBadDefinition(handledType(), String.format(
+                "Cannot change JsonFormat shape for %s; must be a `java.text.SimpleDateFormat` (but was: %s)",
+                handledType().getName(), dateFormat.getClass().getName()));
+        // Ugh. No way to change `Locale`, create copy; must re-crete completely:
         return this;
     }
-
     /*
     /**********************************************************
     /* Accessors
