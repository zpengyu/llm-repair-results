    public JsonSerializer<?> createContextual(SerializerProvider serializers,
            BeanProperty property) throws JsonMappingException
    {
        if (property == null) {
            return this;
        }
        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
        if (format == null) {
            return this;
        }
        // Simple case first: serialize as numeric timestamp?
        JsonFormat.Shape shape = format.getShape();
        if (shape.isNumeric()) {
            return withFormat(Boolean.TRUE, null);
        }

        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
        // First: custom pattern will override things
        if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                || format.hasLocale() || format.hasTimeZone()) {
            TimeZone tz = format.getTimeZone();
            final String pattern = format.hasPattern()
                    ? format.getPattern()
                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
            final Locale loc = format.hasLocale()
                    ? format.getLocale()
                    : serializers.getLocale();
            SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
            if (tz == null) {
                tz = serializers.getTimeZone();
            }
            df.setTimeZone(tz);
            return withFormat(Boolean.FALSE, df);
        }

        // Otherwise, need one of these changes:


        // Jackson's own `StdDateFormat` is quite easy to deal with...
        DateFormat df = serializers.getConfig().getDateFormat();
        // but do NOT expect StdDateFormat if explicitly set to something else
        if (df.getClass() == StdDateFormat.class) {
            StdDateFormat sdf = (StdDateFormat) df;

            // 08-Jun-2017, tatu: Unfortunately there's no generally usable
            //    mechanism for changing `DateFormat` instances (or even clone()ing)
            //    So: require it be `SimpleDateFormat`; can't config other types
//            serializers.reportBadDefinition(handledType(), String.format(
            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
            sdf = sdf.withTimeZone(tz).withLocale(loc);
            return withFormat(sdf, shape);
        }

        // 29-May-2018, tatu: As per [databind#1814], can try to patch locale/tz...
        if (df instanceof SimpleDateFormat) {
            SimpleDateFormat sdf = (SimpleDateFormat) df;
            if (format.hasLocale() || format.hasTimeZone()) {
                sdf = (SimpleDateFormat) sdf.clone();
                if (format.hasTimeZone()) {
                    sdf.setTimeZone(format.getTimeZone());
                }
                if (format.hasLocale()) {
                    sdf.setDateFormatSymbols(new DateFormatSymbols(format.getLocale()));
                }
            }
            return withFormat(sdf, shape);
        }
        return this;
    }

