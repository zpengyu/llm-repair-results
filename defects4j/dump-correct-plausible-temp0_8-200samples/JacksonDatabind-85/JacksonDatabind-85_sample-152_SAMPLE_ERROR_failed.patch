diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..864079b96 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -46,7 +46,7 @@ public abstract class DateTimeSerializerBase<T>
     public abstract DateTimeSerializerBase<T> withFormat(Boolean timestamp, DateFormat customFormat);
 
     @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
+ public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
@@ -80,12 +79,26 @@ public abstract class DateTimeSerializerBase<T>
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
+        if (_dateFormat instanceof StdDateFormat) {
+            final StdDateFormat std = (StdDateFormat) _dateFormat;
+            // 05-Sep-2017, tatu: [databind#1549] We may also need to change
+            //    `Locale`, so need to reconstruct `StdDateFormat` completely
+            //    if so.
+            if (!format.hasLocale() && !format.hasTimeZone()) {
+                // let's start by seeing if we can avoid construction of new `StdDateFormat`
+                // (note: this is a bit of a hack; unlikely to be a problem, since there's
+                // not a way to generally serialize into `DateFormat` instances)
+                StdDateFormat newStd = std.withShape(shape);
+                if (newStd == std) {
+                    return this;
+                }
+                return withFormat(Boolean.FALSE, newStd);
+            }
+            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+            return withFormat(Boolean.FALSE, std.withShape(shape).withLocale(format.getLocale()));
+        }
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
