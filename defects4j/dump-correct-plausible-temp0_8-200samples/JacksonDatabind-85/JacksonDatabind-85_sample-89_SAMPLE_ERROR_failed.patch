diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..4ec5e7bec 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -47,7 +47,7 @@ public abstract class DateTimeSerializerBase<T>
 
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
+                                              BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
@@ -61,39 +61,26 @@ public abstract class DateTimeSerializerBase<T>
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-            final Locale loc = format.hasLocale()
-                            ? format.getLocale()
-                            : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
-            df.setTimeZone(tz);
-            return withFormat(Boolean.FALSE, df);
-        }
-
         // Otherwise, need one of these changes:
-
-
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
 //            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
-        return this;
+        // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        DateFormat df = (DateFormat) _format.clone();
+        if (format.hasPattern()) {
+            df = cloneFormat(df, format.getPattern(), serializers.getLocale());
+        }
+        if (format.hasLocale()) {
+            df = cloneFormat(df, serializers.getLocale());
+        }
+        if (format.hasTimeZone()) {
+            TimeZone tz = format.getTimeZone();
+            df.setTimeZone(tz);
+        }
+        return withFormat(Boolean.FALSE, df);
     }
-
     /*
     /**********************************************************
     /* Accessors
