diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
index ae5fd6538..aa74de7ca 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java
@@ -80,20 +79,25 @@ public abstract class DateTimeSerializerBase<T>
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
         // Otherwise, need one of these changes:
-
-
+        if (shape == JsonFormat.Shape.STRING) {
+            if (_format == null || (_format instanceof SimpleDateFormat)) {
+                // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+                return withFormat(Boolean.FALSE,
+                        (SimpleDateFormat) (_format == null ? new SimpleDateFormat() : ((SimpleDateFormat)_format).clone()));
+            }
+            // Otherwise assume it's something we can reuse as-is:
+            return this;
+        }
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        serializers.reportBadDefinition(handledType(), String.format(
+                "Cannot change configuration of `%s` (of type %s): can only change `Locale` (via `withFormat()`), `TimeZone`, `pattern` and `Shape` via `withFormat()`: not (re)set to `%s`",
+                property.getName(), getClass().getName(), format));
         return this;
     }
-
     /*
     /**********************************************************
     /* Accessors
