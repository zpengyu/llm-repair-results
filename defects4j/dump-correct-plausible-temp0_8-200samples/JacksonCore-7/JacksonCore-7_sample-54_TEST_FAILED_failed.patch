diff --git a/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java b/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java
index e7db7dd9..b8d3608d 100644
--- a/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java
+++ b/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java
@@ -163,27 +163,24 @@ public class JsonWriteContext extends JsonStreamContext
         if (dd.isDup(name)) { throw new JsonGenerationException("Duplicate field '"+name+"'"); }
     }
     
-    public int writeValue() {
-        // Most likely, object:
-        if (_type == TYPE_OBJECT) {
-            _gotName = false;
-            ++_index;
-            return STATUS_OK_AFTER_COLON;
-        }
-
-        // Ok, array?
-        if (_type == TYPE_ARRAY) {
-            int ix = _index;
-            ++_index;
-            return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;
-        }
-        
-        // Nope, root context
-        // No commas within root context, but need space
-        ++_index;
-        return (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;
-    }
-
+     public int writeValue() {
+         // Most likely, object:
+         if (_type == TYPE_OBJECT) {
+             _gotName = false;
+             ++_index;
+             return STATUS_OK_AFTER_COLON;
+         }
+         // Ok, array?
+         if (_type == TYPE_ARRAY) {
+             int ix = _index;
+             ++_index;
+             return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;
+         }
+         // Nope, root context
+         // No commas within root context, but need space
+         ++_index;
+         return (_index <= 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;
+     }
     // // // Internally used abstract methods
 
     protected void appendDesc(StringBuilder sb) {
