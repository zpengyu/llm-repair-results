diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
index 1ff78bfe..0bd0dac7 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
@@ -2765,15 +2765,12 @@ public class DateTimeFormatterBuilder {
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             DateTimeParser[] parsers = iParsers;
             int length = parsers.length;
-
             final Object originalState = bucket.saveState();
             boolean isOptional = false;
-
             int bestValidPos = position;
             Object bestValidState = null;
-
             int bestInvalidPos = position;
-
+            int max = text.length();
             for (int i=0; i<length; i++) {
                 DateTimeParser parser = parsers[i];
                 if (parser == null) {
@@ -2787,9 +2784,7 @@ public class DateTimeFormatterBuilder {
                 int parsePos = parser.parseInto(bucket, text, position);
                 if (parsePos >= position) {
                     if (parsePos > bestValidPos) {
-                        if (parsePos >= text.length() ||
-                            (i + 1) >= length || parsers[i + 1] == null) {
-
+                        if (parsePos >= max || (i + 1) >= length || parsers[i + 1] == null) {
                             // Completely parsed text or no more parsers to
                             // check. Skip the rest.
                             return parsePos;
@@ -2815,9 +2809,7 @@ public class DateTimeFormatterBuilder {
                 }
                 return bestValidPos;
             }
-
             return ~bestInvalidPos;
-        }
-    }
+        }    }
 
 }
