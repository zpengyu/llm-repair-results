diff --git a/src/org/mockito/internal/util/Primitives.java b/src/org/mockito/internal/util/Primitives.java
index b44b8253d..1d19009b5 100644
--- a/src/org/mockito/internal/util/Primitives.java
+++ b/src/org/mockito/internal/util/Primitives.java
@@ -9,14 +9,9 @@ import java.util.Map;
 
 @SuppressWarnings("unchecked")
 public class Primitives {
-    
-    public static <T> Class<T> primitiveTypeOf(Class<T> clazz) {
-        if(clazz.isPrimitive()) {
-            return clazz;
-        }
-        return (Class<T>) primitiveTypes.get(clazz);
+    public static boolean isPrimitiveOrWrapper(Class<?> clazz) {
+        return clazz.isPrimitive() || isPrimitiveWrapper(clazz);
     }
-
     public static boolean isPrimitiveWrapper(Class<?> type) {
         return wrapperReturnValues.containsKey(type);
     }
@@ -28,6 +21,12 @@ public class Primitives {
     public static <T> T primitiveValueOrNullFor(Class<T> primitiveType) {
         return (T) primitiveValues.get(primitiveType);
     }
+    public static boolean isPrimitive(Class<?> type) {
+        return primitiveTypes.containsKey(type);
+    }
+    public static <T> Class<T> primitiveTypeOf(Class<T> type) {
+        return (Class<T>) primitiveTypes.get(type);
+    }
     private static Map<Class<?>, Class<?>> wrapperTypes = new HashMap<Class<?>, Class<?>>();
     private static Map<Class<?>, Class<?>> primitiveTypes = new HashMap<Class<?>, Class<?>>();
     private static Map<Class<?>, Object> wrapperReturnValues = new HashMap<Class<?>, Object>();
