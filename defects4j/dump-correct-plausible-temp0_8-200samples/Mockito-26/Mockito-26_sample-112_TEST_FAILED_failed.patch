diff --git a/src/org/mockito/internal/util/Primitives.java b/src/org/mockito/internal/util/Primitives.java
index b44b8253d..fdfd979d7 100644
--- a/src/org/mockito/internal/util/Primitives.java
+++ b/src/org/mockito/internal/util/Primitives.java
@@ -16,45 +15,38 @@ public class Primitives {
         }
         return (Class<T>) primitiveTypes.get(clazz);
     }
-
     public static boolean isPrimitiveWrapper(Class<?> type) {
-        return wrapperReturnValues.containsKey(type);
+        return wrapperTypes.containsKey(type);
     }
-
     public static <T> T primitiveWrapperOf(Class<T> type) {
-        return (T) wrapperReturnValues.get(type);
+        return (T) wrapperTypes.get(type);
     }
-
     public static <T> T primitiveValueOrNullFor(Class<T> primitiveType) {
         return (T) primitiveValues.get(primitiveType);
     }
     private static Map<Class<?>, Class<?>> wrapperTypes = new HashMap<Class<?>, Class<?>>();
     private static Map<Class<?>, Class<?>> primitiveTypes = new HashMap<Class<?>, Class<?>>();
-    private static Map<Class<?>, Object> wrapperReturnValues = new HashMap<Class<?>, Object>();
     private static Map<Class<?>, Object> primitiveValues = new HashMap<Class<?>, Object>();
-
     static {
-        primitiveTypes.put(Boolean.class, Boolean.TYPE);
-        primitiveTypes.put(Character.class, Character.TYPE);
-        primitiveTypes.put(Byte.class, Byte.TYPE);
-        primitiveTypes.put(Short.class, Short.TYPE);
-        primitiveTypes.put(Integer.class, Integer.TYPE);
-        primitiveTypes.put(Long.class, Long.TYPE);
-        primitiveTypes.put(Float.class, Float.TYPE);
-        primitiveTypes.put(Double.class, Double.TYPE);
+        primitiveTypes.put(Boolean.class, boolean.class);
+        primitiveTypes.put(Character.class, char.class);
+        primitiveTypes.put(Byte.class, byte.class);
+        primitiveTypes.put(Short.class, short.class);
+        primitiveTypes.put(Integer.class, int.class);
+        primitiveTypes.put(Long.class, long.class);
+        primitiveTypes.put(Float.class, float.class);
+        primitiveTypes.put(Double.class, double.class);
     }
-
     static {
-        wrapperReturnValues.put(Boolean.class, false);
-        wrapperReturnValues.put(Character.class, '\u0000');
-        wrapperReturnValues.put(Byte.class, (byte) 0);
-        wrapperReturnValues.put(Short.class, (short) 0);
-        wrapperReturnValues.put(Integer.class, 0);
-        wrapperReturnValues.put(Long.class, 0L);
-        wrapperReturnValues.put(Float.class, 0F);
-        wrapperReturnValues.put(Double.class, 0D);
+        wrapperTypes.put(boolean.class, Boolean.class);
+        wrapperTypes.put(char.class, Character.class);
+        wrapperTypes.put(byte.class, Byte.class);
+        wrapperTypes.put(short.class, Short.class);
+        wrapperTypes.put(int.class, Integer.class);
+        wrapperTypes.put(long.class, Long.class);
+        wrapperTypes.put(float.class, Float.class);
+        wrapperTypes.put(double.class, Double.class);
     }
-
     static {
         primitiveValues.put(boolean.class, false);
         primitiveValues.put(char.class, '\u0000');
