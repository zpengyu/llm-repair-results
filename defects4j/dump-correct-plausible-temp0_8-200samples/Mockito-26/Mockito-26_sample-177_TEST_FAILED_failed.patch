diff --git a/src/org/mockito/internal/util/Primitives.java b/src/org/mockito/internal/util/Primitives.java
index b44b8253d..32f248bb3 100644
--- a/src/org/mockito/internal/util/Primitives.java
+++ b/src/org/mockito/internal/util/Primitives.java
@@ -16,15 +15,12 @@ public class Primitives {
         }
         return (Class<T>) primitiveTypes.get(clazz);
     }
-
     public static boolean isPrimitiveWrapper(Class<?> type) {
-        return wrapperReturnValues.containsKey(type);
+        return primitiveTypes.containsValue(type);
     }
-
     public static <T> T primitiveWrapperOf(Class<T> type) {
-        return (T) wrapperReturnValues.get(type);
+        return (T) wrapperReturnValues.get(primitiveTypes.get(type));
     }
-
     public static <T> T primitiveValueOrNullFor(Class<T> primitiveType) {
         return (T) primitiveValues.get(primitiveType);
     }
@@ -43,18 +38,16 @@ public class Primitives {
         primitiveTypes.put(Float.class, Float.TYPE);
         primitiveTypes.put(Double.class, Double.TYPE);
     }
-
     static {
-        wrapperReturnValues.put(Boolean.class, false);
-        wrapperReturnValues.put(Character.class, '\u0000');
-        wrapperReturnValues.put(Byte.class, (byte) 0);
-        wrapperReturnValues.put(Short.class, (short) 0);
-        wrapperReturnValues.put(Integer.class, 0);
-        wrapperReturnValues.put(Long.class, 0L);
-        wrapperReturnValues.put(Float.class, 0F);
-        wrapperReturnValues.put(Double.class, 0D);
+        wrapperReturnValues.put(Boolean.TYPE, false);
+        wrapperReturnValues.put(Character.TYPE, '\u0000');
+        wrapperReturnValues.put(Byte.TYPE, (byte) 0);
+        wrapperReturnValues.put(Short.TYPE, (short) 0);
+        wrapperReturnValues.put(Integer.TYPE, 0);
+        wrapperReturnValues.put(Long.TYPE, 0L);
+        wrapperReturnValues.put(Float.TYPE, 0F);
+        wrapperReturnValues.put(Double.TYPE, 0D);
     }
-
     static {
         primitiveValues.put(boolean.class, false);
         primitiveValues.put(char.class, '\u0000');
