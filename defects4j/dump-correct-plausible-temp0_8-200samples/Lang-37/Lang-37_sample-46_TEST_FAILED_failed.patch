diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java
index 9ac66047..dc61fcc8 100644
--- a/src/java/org/apache/commons/lang3/ArrayUtils.java
+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java
@@ -2950,20 +2950,20 @@ public class ArrayUtils {
      * @since 2.1
      */
     @SuppressWarnings("unchecked")
-    public static <T> T[] addAll(T[] array1, T... array2) {
-        if (array1 == null) {
-            return clone(array2);
-        } else if (array2 == null) {
-            return clone(array1);
-        }
-        final Class<?> type1 = array1.getClass().getComponentType();
-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
-            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
-            // Check if problem is incompatible types
-        return joinedArray;
-    }
-
+public static <T> T[] addAll(T[] array1, T... array2) {
+    if (array1 == null) {
+        return clone(array2);
+    } else if (array2 == null) {
+        return clone(array1);
+    }
+    final Class<?> type1 = array1.getClass().getComponentType();
+    @SuppressWarnings("unchecked") // OK, because array is of type T
+    T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
+    System.arraycopy(array1, 0, joinedArray, 0, array1.length);
+        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
+        // Check if problem is incompatible types
+    return joinedArray;
+}
     /**
      * <p>Adds all the elements of the given arrays into a new array.</p>
      * <p>The new array contains all of the element of <code>array1</code> followed
