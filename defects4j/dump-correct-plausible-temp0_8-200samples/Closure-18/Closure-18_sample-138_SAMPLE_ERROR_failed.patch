diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java
index e0dc0d38..3c137808 100644
--- a/src/com/google/javascript/jscomp/Compiler.java
+++ b/src/com/google/javascript/jscomp/Compiler.java
@@ -1237,9 +1237,8 @@ public class Compiler extends AbstractCompiler {
    * @return A synthetic root node whose two children are the externs root
    *     and the main root
    */
-  Node parseInputs() {
+  private Node parseInputs() {
     boolean devMode = options.devMode != DevMode.OFF;
-
     // If old roots exist (we are parsing a second time), detach each of the
     // individual file parse trees.
     if (externsRoot != null) {
@@ -1297,7 +1286,7 @@ public class Compiler extends AbstractCompiler {
         try {
           inputs =
               (moduleGraph == null ? new JSModuleGraph(modules) : moduleGraph)
-              .manageDependencies(options.dependencyOptions, inputs);
+                  .manageDependencies(options.dependencyOptions, inputs);
           staleInputs = true;
         } catch (CircularDependencyException e) {
           report(JSError.make(
@@ -1337,10 +1320,7 @@ public class Compiler extends AbstractCompiler {
             return null;
           }
         }
-
-        if (options.sourceMapOutputPath != null ||
-            options.nameReferenceReportPath != null) {
-
+        if (options.sourceMapOutputPath != null || options.nameReferenceReportPath != null) {
           // Annotate the nodes in the tree with information from the
           // input file. This information is used to construct the SourceMap.
           SourceInformationAnnotator sia =
