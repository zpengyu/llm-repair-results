diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java
index 720944df..f272e95f 100644
--- a/src/com/google/javascript/jscomp/CodeGenerator.java
+++ b/src/com/google/javascript/jscomp/CodeGenerator.java
@@ -705,15 +705,18 @@ class CodeGenerator {
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
-  private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs
-        // are skipped.
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
-  }
-
+private boolean isOneExactlyFunctionOrDo(Node n) {
+    if (n.getType() == Token.LABEL && !n.getFirstChild().isBlock()) {
+      return false;
+    }
+    int count = 0;
+    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
+      if (c.getType() == Token.FUNCTION || c.getType() == Token.DO) {
+        count++;
+      }
+    }
+    return count == 1;
+}
   /**
    * Adds a node at the left-hand side of an expression. Unlike
    * {@link #addExpr(Node,int)}, this preserves information about the context.
