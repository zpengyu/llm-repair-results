diff --git a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java
index 2d1a815..3965411 100644
--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java
+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java
@@ -58,11 +50,9 @@ public class NullPropertyPointer extends PropertyPointer {
     public boolean isLeaf() {
         return true;
     }
-
     public NodePointer getValuePointer() {
-        return new NullPointer(this,  new QName(getPropertyName()));
+        return new NullPointer(this, new QName(getPropertyName()));
     }
-
     protected boolean isActualProperty() {
         return false;
     }
@@ -82,9 +69,9 @@ public class NullPropertyPointer extends PropertyPointer {
                     + asPath()
                     + ", the target object is null");
         }
-        else if (parent instanceof PropertyOwnerPointer &&
-                ((PropertyOwnerPointer) parent).
-                    isDynamicPropertyDeclarationSupported()){
+        else if (parent instanceof PropertyOwnerPointer
+                && ((PropertyOwnerPointer) parent)
+                    .isDynamicPropertyDeclarationSupported()) {
             // If the parent property owner can create
             // a property automatically - let it do so
             PropertyPointer propertyPointer =
@@ -130,7 +115,8 @@ public class NullPropertyPointer extends PropertyPointer {
     public NodePointer createPath(JXPathContext context, Object value) {
         NodePointer newParent = parent.createPath(context);
         if (isAttribute()) {
-            NodePointer pointer = newParent.createAttribute(context, getName());
+            NodePointer pointer =
+                newParent.createAttribute(context, getName());
             pointer.setValue(value);
             return pointer;
         }
