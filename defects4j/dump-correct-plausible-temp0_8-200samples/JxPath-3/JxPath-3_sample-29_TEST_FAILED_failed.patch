diff --git a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java
index 2d1a815..2dea3ba 100644
--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java
+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java
@@ -58,11 +50,9 @@ public class NullPropertyPointer extends PropertyPointer {
     public boolean isLeaf() {
         return true;
     }
-
     public NodePointer getValuePointer() {
-        return new NullPointer(this,  new QName(getPropertyName()));
+        return new NullPointer(this, new QName(getPropertyName()));
     }
-
     protected boolean isActualProperty() {
         return false;
     }
@@ -106,19 +92,6 @@ public class NullPropertyPointer extends PropertyPointer {
             return newParent.createAttribute(context, getName());
         }
         else {
-            // Consider these two use cases:
-            // 1. The parent pointer of NullPropertyPointer is
-            //    a PropertyOwnerPointer other than NullPointer. When we call
-            //    createPath on it, it most likely returns itself. We then
-            //    take a PropertyPointer from it and get the PropertyPointer
-            //    to expand the collection for the corresponding property.
-            //
-            // 2. The parent pointer of NullPropertyPointer is a NullPointer.
-            //    When we call createPath, it may return a PropertyOwnerPointer
-            //    or it may return anything else, like a DOMNodePointer.
-            //    In the former case we need to do exactly what we did in use 
-            //    case 1.  In the latter case, we simply request that the 
-            //    non-property pointer expand the collection by itself.
             if (newParent instanceof PropertyOwnerPointer) {
                 PropertyOwnerPointer pop = (PropertyOwnerPointer) newParent;
                 newParent = pop.getPropertyPointer();
@@ -146,20 +117,16 @@ public class NullPropertyPointer extends PropertyPointer {
     public NodePointer createChild(
             JXPathContext context,
             QName name,
-            int index)
-    {
+            int index) {
         return createPath(context).createChild(context, name, index);
     }
-        
     public NodePointer createChild(
             JXPathContext context,
             QName name,
             int index,
-            Object value) 
-    {
+            Object value) {
         return createPath(context).createChild(context, name, index, value);
     }
-
     public String getPropertyName() {
         return propertyName;
     }
