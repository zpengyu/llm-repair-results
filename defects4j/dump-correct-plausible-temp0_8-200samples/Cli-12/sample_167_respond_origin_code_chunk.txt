 protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
    {
        List<String> tokens = new ArrayList<String>();

        boolean eatTheRest = false;

        for (int i = 0; i < arguments.length; i++)
        {
            String arg = arguments[i];

            if ("--".equals(arg))
            {
                eatTheRest = true;
                tokens.add("--");
            }
            else if ("-".equals(arg))
            {
                tokens.add("-");
            }
            else if (arg.startsWith("-"))
            {
                String opt = Util.stripLeadingHyphens(arg);

                if (opt.indexOf('=') == -1)
                {
                    if (options.hasOption(opt))
                    {
                        tokens.add(arg);
                    }
                    else
                    {
                        if (options.hasOption(arg.substring(0, 2)))
                        {
                            // the format is --foo bar
                            tokens.add(arg.substring(0, 2));
                            tokens.add(arg.substring(2));
                        }
                        else
                        {
                            eatTheRest = stopAtNonOption;
                            tokens.add(arg);
                        }
                    }
                }
                else
                {
                    // the format is --foo=value or -foo=value
                    String[] nameValue = arg.split("=", 2);

                    String name = nameValue[0];
                    String value = nameValue[1];

                    if (options.hasOption(name))
                    {
                        tokens.add(name);
                        tokens.add(value);
                    }
                    else
                    {
                        eatTheRest = stopAtNonOption;
                        tokens.add(arg);
                    }
                }
            }
            else
            {
                tokens.add(arg);
            }

            if (eatTheRest)
            {
                for (i++; i < arguments.length; i++)
                {
                    tokens.add(arguments[i]);
                }
            }
        }

        return tokens.toArray(new String[tokens.size()]);
    }
