diff --git a/src/java/org/apache/commons/cli/GnuParser.java b/src/java/org/apache/commons/cli/GnuParser.java
index 14a9cc0..7be04da 100644
--- a/src/java/org/apache/commons/cli/GnuParser.java
+++ b/src/java/org/apache/commons/cli/GnuParser.java
@@ -51,10 +51,8 @@ public class GnuParser extends Parser {
      */
     protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
     {
-        List tokens = new ArrayList();
-
+        List<String> tokens = new ArrayList<String>();
         boolean eatTheRest = false;
-
         for (int i = 0; i < arguments.length; i++)
         {
             String arg = arguments[i];
@@ -78,9 +74,15 @@ public class GnuParser extends Parser {
                 }
                 else
                 {
-                    if (options.hasOption(arg.substring(0, 2)))
+                    if (opt.indexOf('=') != -1 && options.hasOption(opt.substring(0, opt.indexOf('='))))
                     {
                         // the format is --foo=value or -foo=value
+                        String[] parts = arg.split("=");
+                        tokens.add(parts[0]); // --foo
+                        tokens.add(parts[1]); // value
+                    }
+                    else if (arg.length() > 2 && options.hasOption(arg.substring(0, 2)))
+                    {
                         // the format is a special properties option (-Dproperty=value)
                         tokens.add(arg.substring(0, 2)); // -D
                         tokens.add(arg.substring(2)); // property=value
@@ -105,7 +106,5 @@ public class GnuParser extends Parser {
                 }
             }
         }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
-    }
-}
+        return tokens.toArray(new String[tokens.size()]);
+    }}
