diff --git a/src/java/org/apache/commons/cli/GnuParser.java b/src/java/org/apache/commons/cli/GnuParser.java
index 14a9cc0..a572edc 100644
--- a/src/java/org/apache/commons/cli/GnuParser.java
+++ b/src/java/org/apache/commons/cli/GnuParser.java
@@ -49,12 +49,10 @@ public class GnuParser extends Parser {
      * flattening when a non option has been encountered
      * @return a String array of the flattened arguments
      */
-    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
+ protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
     {
-        List tokens = new ArrayList();
-
+        List<String> tokens = new ArrayList<String>();
         boolean eatTheRest = false;
-
         for (int i = 0; i < arguments.length; i++)
         {
             String arg = arguments[i];
@@ -71,19 +68,37 @@ public class GnuParser extends Parser {
             else if (arg.startsWith("-"))
             {
                 String opt = Util.stripLeadingHyphens(arg);
-
-                if (options.hasOption(opt))
+                if (opt.indexOf('=') == -1)
                 {
-                    tokens.add(arg);
+                    if (options.hasOption(opt))
+                    {
+                        tokens.add(arg);
+                    }
+                    else
+                    {
+                        if (options.hasOption(arg.substring(0, 2)))
+                        {
+                            // the format is --foo bar
+                            tokens.add(arg.substring(0, 2));
+                            tokens.add(arg.substring(2));
+                        }
+                        else
+                        {
+                            eatTheRest = stopAtNonOption;
+                            tokens.add(arg);
+                        }
+                    }
                 }
                 else
                 {
-                    if (options.hasOption(arg.substring(0, 2)))
+                    // the format is --foo=value or -foo=value
+                    String[] nameValue = arg.split("=", 2);
+                    String name = nameValue[0];
+                    String value = nameValue[1];
+                    if (options.hasOption(name))
                     {
-                        // the format is --foo=value or -foo=value
-                        // the format is a special properties option (-Dproperty=value)
-                        tokens.add(arg.substring(0, 2)); // -D
-                        tokens.add(arg.substring(2)); // property=value
+                        tokens.add(name);
+                        tokens.add(value);
                     }
                     else
                     {
@@ -105,7 +119,5 @@ public class GnuParser extends Parser {
                 }
             }
         }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
-    }
-}
+        return tokens.toArray(new String[tokens.size()]);
+    }}
