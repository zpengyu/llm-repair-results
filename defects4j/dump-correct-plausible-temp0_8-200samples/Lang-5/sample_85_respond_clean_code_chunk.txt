    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.equals("_")) { 
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.startsWith("_")) {
            final int len = str.length();
            if (!Character.isUpperCase(str.charAt(1)) || len < 3 || len > 5) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 3) {
                return new Locale("", str.substring(1, 3));
            }
            char ch = str.charAt(2);
            if (ch == '_') {
                return new Locale("", str.substring(1, 3), str.substring(3));
            }
            if (!Character.isUpperCase(ch) || len > 6) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 4) {
                return new Locale("", str.substring(1, 4));
            }
            if (str.charAt(4) != '_') {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale("", str.substring(1, 4), str.substring(5));
        }
        final String[] split = str.split("_", -1);
        final int len = split.length;
        switch (len) {
        case 1:
            if (!isAllLowerCase(str)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale(str);
        case 2:
            if (!isAllLowerCase(split[0])) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (!isAllUpperCase(split[1])) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale(split[0], split[1]);
        case 3:
            if (!isAllLowerCase(split[0])) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (!isAllUpperCase(split[1])) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (split[2].length() > 0 && !isAllLowerCase(split[2])) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale(split[0], split[1], split[2]);
        default:
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
    }