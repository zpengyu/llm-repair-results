    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char ch0 = str.charAt(0);
        if (ch0 == '_') {
            if (str.length() < 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            final char ch1 = str.charAt(1);
            final char ch2 = str.charAt(2);
            if (!Character.isLowerCase(ch1) || !Character.isLowerCase(ch2)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (str.length() == 3) {
                return new Locale("", str.substring(1, 3));
            }
            if (str.length() < 5) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (str.charAt(3) != '_') {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale("", str.substring(1, 3), str.substring(4));
        }
        final int len = str.length();
        if (ch0 == ' ' || !Character.isLowerCase(ch0)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        for (int i = 1; i < len; i++) {
            final char ch = str.charAt(i);
            if (ch == '_') {
                if (i == 1 || i == len - 1) {
                    throw new IllegalArgumentException("Invalid locale format: " + str);
                }
            } else if (!Character.isLowerCase(ch) && !Character.isUpperCase(ch)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
        }
        final int pos = str.indexOf('_');
        if (pos == -1) {
            return new Locale(str);
        }
        if (pos == 0) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        return new Locale(
            str.substring(0, pos), str.substring(pos + 1).replace('_', '-'));
    }