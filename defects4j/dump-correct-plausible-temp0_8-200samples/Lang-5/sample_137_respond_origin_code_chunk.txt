    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.startsWith("_")) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }

        final char sep = '_';
        final int len = str.length();
        if (len < 2) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char ch0 = str.charAt(0);
        if (!Character.isLowerCase(ch0)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len == 2) {
            final char ch1 = str.charAt(1);
            if (Character.isLowerCase(ch1)) {
                return new Locale(str, "");
            }
            if (ch1 != sep) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            final String[] split = str.split("_#");
            switch (split.length) {
                case 3:
                    return new Locale(split[0], split[1], split[2]);
                case 2:
                    return new Locale(split[0], split[1]);
                case 1:
                    return new Locale(split[0]);
                default:
                    throw new IllegalArgumentException("Invalid locale format: " + str);
            }
        }
        if (str.charAt(1) != sep) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char ch2 = str.charAt(2);
        if (!Character.isUpperCase(ch2)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len == 3) {
            return new Locale(String.valueOf(ch0), String.valueOf(ch2));
        }
        if (len < 5) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (!str.startsWith(sep, 3)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        return new Locale(String.valueOf(ch0), String.valueOf(ch2), str.substring(4));
    }

