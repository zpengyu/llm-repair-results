diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java
index 57c074cd..1c554b1c 100644
--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java
+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java
@@ -89,44 +89,50 @@ public class LocaleUtils {
         if (str == null) {
             return null;
         }
+        if (str.isEmpty()) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        if (str.startsWith("_")) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
         final int len = str.length();
         if (len < 2) {
             throw new IllegalArgumentException("Invalid locale format: " + str);
         }
         final char ch0 = str.charAt(0);
-            final char ch1 = str.charAt(1);
-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {
+        if (ch0 == '_') {
+            if (!Character.isUpperCase(str.charAt(1))) {
                 throw new IllegalArgumentException("Invalid locale format: " + str);
             }
             if (len == 2) {
-                return new Locale(str);
-            }
-            if (len < 5) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+                return new Locale("", str.substring(1));
             }
             if (str.charAt(2) != '_') {
                 throw new IllegalArgumentException("Invalid locale format: " + str);
             }
-            final char ch3 = str.charAt(3);
-            if (ch3 == '_') {
-                return new Locale(str.substring(0, 2), "", str.substring(4));
-            }
-            final char ch4 = str.charAt(4);
-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (len == 5) {
-                return new Locale(str.substring(0, 2), str.substring(3, 5));
-            }
-            if (len < 7) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (str.charAt(5) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
+            return new Locale("", str.substring(1), str.substring(3));
+        }
+        if (!Character.isLowerCase(ch0)) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        if (len == 1) {
+            return new Locale(str);
+        }
+        if (str.charAt(1) != '_') {
+            return new Locale(str);
+        }
+        final char ch2 = str.charAt(2);
+        if (!Character.isUpperCase(ch2)) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        if (len == 2) {
+            return new Locale(str.substring(0, 2), "");
+        }
+        if (str.charAt(3) != '_') {
+            return new Locale(str.substring(0, 2), str.substring(2));
+        }
+        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(5));
     }
-
     //-----------------------------------------------------------------------
     /**
      * <p>Obtains the list of locales to search through when performing
