    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) { // since 3.2 (before only lowercase input)
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.startsWith("_")) {  // special case for leading "_"
            final int len = str.length();
            if (len < 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            final char ch1 = str.charAt(1);
            final char ch2 = str.charAt(2);
            if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 3) {
                return new Locale("", str.substring(1, 3));
            }
            if (len < 5) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (str.charAt(3) != '_') {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale("", str.substring(1, 3), str.substring(4));
        }

        final String[] split = str.split("_", -1);
        final int len = split.length;
        switch (len) {
        case 1:
            return new Locale(convertOldISOCodes(split[0]));
        case 2:
            return new Locale(convertOldISOCodes(split[0]), convertOldISOCodes(split[1]));
        case 3:
            return new Locale(convertOldISOCodes(split[0]), convertOldISOCodes(split[1]), convertOldISOCodes(split[2]));
        default:
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
    }
    private static String convertOldISOCodes(final String str) {
        if (str.equals("he")) {
            return "iw";
        } else if (str.equals("yi")) {
            return "ji";
        } else if (str.equals("id")) {
            return "in";
        } else {
            return str;
        }
    }

