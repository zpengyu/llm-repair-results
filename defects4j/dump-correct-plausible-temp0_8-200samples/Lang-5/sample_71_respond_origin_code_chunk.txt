    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        final int len = str.length();
        if (len < 2) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char ch0 = str.charAt(0);
        if (ch0 == '_') {
            if (len < 3) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            final char ch1 = str.charAt(1);
            final char ch2 = str.charAt(2);
            if (!Character.isLowerCase(ch1) || !Character.isLowerCase(ch2)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 3) {
                return new Locale("", str.substring(1, 3));
            }
            if (len < 5) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (str.charAt(3) != '_') {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale("", str.substring(1, 3), str.substring(4));
        }

        if (!Character.isLowerCase(ch0)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }

        if (len == 2) {
            final char ch1 = str.charAt(1);
            if (Character.isUpperCase(ch1)) {
                return new Locale(str.substring(0, 2));
            }
            if (!Character.isLowerCase(ch1)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
        }

        if (len < 5) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.charAt(2) != '_') {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }

        final char ch3 = str.charAt(3);
        if (!Character.isUpperCase(ch3)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len == 5) {
            final char ch4 = str.charAt(4);
            if (Character.isUpperCase(ch4)) {
                return new Locale(str.substring(0, 2), str.substring(3, 5));
            }
            if (!Character.isLowerCase(ch4)) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
        }

        if (len < 7) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.charAt(5) != '_') {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }

        final char ch6 = str.charAt(6);
        if (!Character.isUpperCase(ch6)) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }

        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
    }

