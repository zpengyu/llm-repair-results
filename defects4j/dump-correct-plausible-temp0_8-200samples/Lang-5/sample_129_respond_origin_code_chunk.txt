    public static Locale toLocale(final String str) {
        if (str == null) {
            return null;
        }
        if (str.isEmpty()) {  // (HK)
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.startsWith("_")) {  // (HK)
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }

        final int len = str.length();
        if (len < 2) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        final char ch0 = str.charAt(0);
        if (ch0 == '_') {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len == 1) {
            return new Locale(str);
        }
        final char ch1 = str.charAt(1);
        if (ch1 == '_') {
            if (len == 2) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (!Character.isUpperCase(str.charAt(2))) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (len == 3) {
                return new Locale(str.substring(0, 1), str.substring(2, 3));
            }
            if (len == 4) {
                return new Locale(str.substring(0, 1), str.substring(2, 4));
            }
            if (str.charAt(3) != '_') {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale(str.substring(0, 1), str.substring(2, 4), str.substring(4));
        }
        if (len == 2) {
            return new Locale(str);
        }
        if (str.charAt(2) != '_') {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len == 3) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len < 5) {
            if (!Character.isUpperCase(str.charAt(3))) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            return new Locale(str.substring(0, 2), str.substring(3, 4));
        }
        if (!Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (len == 5) {
            return new Locale(str.substring(0, 2), str.substring(3, 5));
        }
        if (len < 7) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.charAt(5) != '_') {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
    }
