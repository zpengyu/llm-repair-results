diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java
index 57c074cd..d9ed092b 100644
--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java
+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java
@@ -89,44 +89,38 @@ public class LocaleUtils {
         if (str == null) {
             return null;
         }
-        final int len = str.length();
-        if (len < 2) {
+        if (str.isEmpty()) {
             throw new IllegalArgumentException("Invalid locale format: " + str);
         }
-        final char ch0 = str.charAt(0);
-            final char ch1 = str.charAt(1);
-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (len == 2) {
-                return new Locale(str);
-            }
-            if (len < 5) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (str.charAt(2) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            final char ch3 = str.charAt(3);
-            if (ch3 == '_') {
-                return new Locale(str.substring(0, 2), "", str.substring(4));
-            }
-            final char ch4 = str.charAt(4);
-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (len == 5) {
-                return new Locale(str.substring(0, 2), str.substring(3, 5));
-            }
-            if (len < 7) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (str.charAt(5) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
+        if (str.startsWith("_")) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        final char[] separators = { '_', '_', '_' };
+        final int[] next = new int[3];
+        int len = str.length();
+        next[0] = str.indexOf(separators[0]);
+        if (next[0] == -1) {
+            len = next[0] = str.length();
+        }
+        next[1] = str.indexOf(separators[1], next[0] + 1);
+        if (next[1] == -1) {
+            len = next[1] = str.length();
+        }
+        next[2] = str.indexOf(separators[2], next[1] + 1);
+        if (next[2] == -1) {
+            len = next[2] = str.length();
+        }
+        if (len == 2 || len == 3 || len == 5 || len == 6 || len == 7 || len == 8) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        final String language = str.substring(0, next[0]);
+        if (language.isEmpty()) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        final String country = next[1] == len ? "" : str.substring(next[0] + 1, next[1]);
+        final String variant = next[2] == len ? "" : str.substring(next[1] + 1, next[2]);
+        return new Locale(language, country, variant);
     }
-
     //-----------------------------------------------------------------------
     /**
      * <p>Obtains the list of locales to search through when performing
