diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
index c4384f7fc..14dc3cf71 100644
--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
@@ -72,17 +62,6 @@ public class ReturnsDeepStubs implements Answer<Object>, Serializable {
         // deep stub
         return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);
     }
-
-    /**
-     * Creates a mock using the Generics Metadata.
-     *
-     * <li>Finally as we want to mock the actual type, but we want to pass along the contextual generics meta-data
-     * that was resolved for the current return type, for this to happen we associate to the mock an new instance of
-     * {@link ReturnsDeepStubs} answer in which we will store the returned type generic metadata.
-     *
-     * @param returnTypeGenericMetadata The metadata to use to create the new mock.
-     * @return The mock
-     */
     private Object createNewDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
         return mockitoCore.mock(
                 returnTypeGenericMetadata.rawType(),
