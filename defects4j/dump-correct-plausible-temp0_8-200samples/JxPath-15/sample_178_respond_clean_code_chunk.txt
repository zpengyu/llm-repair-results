public class UnionContext extends NodeSetContext {
    private EvalContext contexts[];
    private boolean prepared;
    private int position;
    public UnionContext(EvalContext parentContext, EvalContext contexts[]) {
        super(parentContext, new BasicNodeSet());
        this.contexts = contexts;
    }
    public int getDocumentOrder() {
        return contexts.length > 1 ? 1 : super.getDocumentOrder();
    }
    public boolean setPosition(int position) {
        this.position = position;
        return prepared;
    }
    public boolean nextSet() {
        if (prepared) {
            return super.nextSet();
        }
        BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();
        ArrayList pointers = new ArrayList();
        for (int i = 0; i < contexts.length; i++) {
            EvalContext ctx = (EvalContext) contexts[i];
            while (ctx.nextSet()) {
                ctx.setPosition(position);
                while (ctx.nextNode()) {
                    NodePointer ptr = ctx.getCurrentNodePointer();
                    if (!pointers.contains(ptr)) {
                        nodeSet.add(ptr);
                        pointers.add(ptr);
                    }
                }
            }
        }
        prepared = super.nextSet();
        return prepared;
    }
}