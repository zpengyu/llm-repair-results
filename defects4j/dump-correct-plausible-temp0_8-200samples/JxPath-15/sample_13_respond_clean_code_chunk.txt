public class UnionContext extends NodeSetContext {
    private EvalContext contexts[];
    private boolean prepared;
    public UnionContext(EvalContext parentContext, EvalContext contexts[]) {
        super(parentContext, new BasicNodeSet());
        this.contexts = contexts;
    }
    public int getDocumentOrder() {
        if (contexts.length > 1) {
            return 1;
        }
        EvalContext evalContext = contexts[0];
        return evalContext.getDocumentOrder();
    }
    public boolean setPosition(int position) {
        if (!prepared) {
            prepared = true;
            BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();
            ArrayList pointers = new ArrayList();
            for (EvalContext context : contexts) {
                while (context.nextSet()) {
                    while (context.nextNode()) {
                        NodePointer ptr = context.getCurrentNodePointer();
                        if (!pointers.contains(ptr)) {
                            nodeSet.add(ptr);
                            pointers.add(ptr);
                        }
                    }
                }
            }
        }
        return super.setPosition(position);
    }
}