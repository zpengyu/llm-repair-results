diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 958af286..3ed0086c 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -475,14 +475,14 @@ public class TarArchiveInputStream extends ArchiveInputStream {
                                 final int got = IOUtils.readFully(i, rest);
                                 if (got != restLen) {
                                     throw new IOException("Failed to read "
-                                                          + "Paxheader. Expected "
-                                                          + restLen
-                                                          + " bytes, read "
-                                                          + got);
+                                                            + "Paxheader. Expected "
+                                                            + restLen
+                                                            + " bytes, read "
+                                                            + got);
                                 }
                                 // Drop trailing NL
                                 final String value = new String(rest, 0,
-                                                          restLen - 1, CharsetNames.UTF_8);
+                                                                restLen - 1, CharsetNames.UTF_8);
                                 headers.put(keyword, value);
                             }
                             break;
@@ -491,8 +491,25 @@ public class TarArchiveInputStream extends ArchiveInputStream {
                     }
                     break; // Processed single header
                 }
-                len *= 10;
-                len += ch - '0';
+                else if (ch == '\n'){
+                    throw new IOException("Unexpected end of line encountered in header.");
+                }
+                else if (ch == '\r'){
+                    throw new IOException("Unexpected end of line encountered in header.");
+                }
+                else if (ch == '\t'){
+                    throw new IOException("Unexpected end of line encountered in header.");
+                }
+                else if (ch == '\f'){
+                    throw new IOException("Unexpected end of line encountered in header.");
+                }
+                else if (ch == '\b'){
+                    throw new IOException("Unexpected end of line encountered in header.");
+                }
+                else{
+                    len *= 10;
+                    len += ch - '0';
+                }
             }
             if (ch == -1){ // EOF
                 break;
