diff --git a/src/main/java/org/apache/commons/cli/TypeHandler.java b/src/main/java/org/apache/commons/cli/TypeHandler.java
index 775e0f2..57cfd81 100644
--- a/src/main/java/org/apache/commons/cli/TypeHandler.java
+++ b/src/main/java/org/apache/commons/cli/TypeHandler.java
@@ -99,6 +98,30 @@ public class TypeHandler
         {
             return createURL(str);
         }
+        else if (PatternOptionBuilder.BYTE_VALUE == clazz)
+        {
+            return createByte(str);
+        }
+        else if (PatternOptionBuilder.SHORT_VALUE == clazz)
+        {
+            return createShort(str);
+        }
+        else if (PatternOptionBuilder.INTEGER_VALUE == clazz)
+        {
+            return createInteger(str);
+        }
+        else if (PatternOptionBuilder.LONG_VALUE == clazz)
+        {
+            return createLong(str);
+        }
+        else if (PatternOptionBuilder.FLOAT_VALUE == clazz)
+        {
+            return createFloat(str);
+        }
+        else if (PatternOptionBuilder.DOUBLE_VALUE == clazz)
+        {
+            return createDouble(str);
+        }
         else
         {
             return null;
@@ -248,4 +261,70 @@ public class TypeHandler
         //        return FileW.findFiles(str);
         throw new UnsupportedOperationException("Not yet implemented");
     }
+    private static Byte createByte(final String str) throws ParseException
+    {
+        try
+        {
+            return Byte.decode(str);
+        }
+        catch (final NumberFormatException nfe)
+        {
+            throw new ParseException(nfe.getMessage());
+        }
+    }
+    private static Short createShort(final String str) throws ParseException
+    {
+        try
+        {
+            return Short.decode(str);
+        }
+        catch (final NumberFormatException nfe)
+        {
+            throw new ParseException(nfe.getMessage());
+        }
+    }
+    private static Integer createInteger(final String str) throws ParseException
+    {
+        try
+        {
+            return Integer.decode(str);
+        }
+        catch (final NumberFormatException nfe)
+        {
+            throw new ParseException(nfe.getMessage());
+        }
+    }
+    private static Long createLong(final String str) throws ParseException
+    {
+        try
+        {
+            return Long.decode(str);
+        }
+        catch (final NumberFormatException nfe)
+        {
+            throw new ParseException(nfe.getMessage());
+        }
+    }
+    private static Float createFloat(final String str) throws ParseException
+    {
+        try
+        {
+            return Float.valueOf(str);
+        }
+        catch (final NumberFormatException nfe)
+        {
+            throw new ParseException(nfe.getMessage());
+        }
+    }
+    private static Double createDouble(final String str) throws ParseException
+    {
+        try
+        {
+            return Double.valueOf(str);
+        }
+        catch (final NumberFormatException nfe)
+        {
+            throw new ParseException(nfe.getMessage());
+        }
+    }
 }
\ No newline at end of file
