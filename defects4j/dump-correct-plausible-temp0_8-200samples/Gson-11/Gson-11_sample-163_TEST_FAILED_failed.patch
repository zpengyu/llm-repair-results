diff --git a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
index 2364c717..9ddd1b0e 100644
--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
@@ -909,12 +909,13 @@ public final class TypeAdapters {
           @Override public T1 read(JsonReader in) throws IOException {
             T1 result = typeAdapter.read(in);
             if (result != null && !requestedType.isInstance(result)) {
+              // The Gson user code implicitly defines the name of the type parameter in the form of
+              // <T>. Even though the field is of type T1, the user code will refer to it as <T>.
               throw new JsonSyntaxException("Expected a " + requestedType.getName()
                   + " but was " + result.getClass().getName());
             }
             return result;
-          }
-        };
+          }        };
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
