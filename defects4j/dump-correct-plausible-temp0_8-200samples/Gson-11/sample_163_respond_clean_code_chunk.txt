          @Override public T1 read(JsonReader in) throws IOException {
            T1 result = typeAdapter.read(in);
            if (result != null && !requestedType.isInstance(result)) {
              // The Gson user code implicitly defines the name of the type parameter in the form of
              // <T>. Even though the field is of type T1, the user code will refer to it as <T>.
              throw new JsonSyntaxException("Expected a " + requestedType.getName()
                  + " but was " + result.getClass().getName());
            }
            return result;
          }