diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
index 747f80ac0..7eb011258 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
@@ -98,10 +98,8 @@ public class BrentSolver extends UnivariateRealSolverImpl {
     public double solve(final UnivariateRealFunction f,
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-
         clearResult();
-        verifySequence(min, initial, max);
-
+        verifyInterval(min, max);
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
@@ -137,12 +130,15 @@ public class BrentSolver extends UnivariateRealSolverImpl {
             throw MathRuntimeException.createIllegalArgumentException(
                   NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
         }
-
         // full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);
-
     }
-
+    /** {@inheritDoc} */
+    public double solve(final UnivariateRealFunction f,
+                        double min, final double max)
+        throws MaxIterationsExceededException, FunctionEvaluationException {
+        return solve(f, min, max, min + 0.5 * (max - min));
+    }
     /**
      * Find a zero in the given interval.
      * <p>
