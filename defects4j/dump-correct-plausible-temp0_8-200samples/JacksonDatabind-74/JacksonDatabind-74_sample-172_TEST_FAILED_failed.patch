diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
index 8bad30e7c..d38346e1e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
@@ -145,20 +145,13 @@ public class AsPropertyTypeDeserializer extends AsArrayTypeDeserializer
             }
             return deser.deserialize(p, ctxt);
         }
-        // or, perhaps we just bumped into a "natural" value (boolean/int/double/String)?
-        Object result = TypeDeserializer.deserializeIfNatural(p, ctxt, _baseType);
-        if (result != null) {
-            return result;
-        }
-        // or, something for which "as-property" won't work, changed into "wrapper-array" type:
         if (p.getCurrentToken() == JsonToken.START_ARRAY) {
+            // or, something for which "as-property" won't work, changed into "wrapper-array" type:
             return super.deserializeTypedFromAny(p, ctxt);
         }
-        ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,
-                "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");
-        return null;
+        // or, perhaps we just bumped into a "natural" value (boolean/int/double/String)?
+        return TypeDeserializer.deserializeIfNatural(p, ctxt, _baseType);
     }
-
     /* Also need to re-route "unknown" version. Need to think
      * this through bit more in future, but for now this does address issue and has
      * no negative side effects (at least within existing unit test suite).
