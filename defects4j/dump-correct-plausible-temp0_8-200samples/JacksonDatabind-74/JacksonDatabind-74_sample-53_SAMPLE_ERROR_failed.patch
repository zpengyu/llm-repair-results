diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
index 8bad30e7c..48da920f1 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
@@ -143,7 +143,20 @@ public class AsPropertyTypeDeserializer extends AsArrayTypeDeserializer
                 // must move to point to the first token:
                 p.nextToken();
             }
-            return deser.deserialize(p, ctxt);
+            Object result;
+            if (_typeIdVisible) {
+                if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+                    result = deser.deserialize(p, ctxt, _findTypeId(p, ctxt));
+                } else {
+                    result = deser.deserialize(p, ctxt);
+                }
+            } else {
+                result = deser.deserialize(p, ctxt);
+            }
+            if (_typeIdVisible && (p.getCurrentToken() == JsonToken.END_OBJECT)) {
+                p.nextToken();
+            }
+            return result;
         }
         // or, perhaps we just bumped into a "natural" value (boolean/int/double/String)?
         Object result = TypeDeserializer.deserializeIfNatural(p, ctxt, _baseType);
