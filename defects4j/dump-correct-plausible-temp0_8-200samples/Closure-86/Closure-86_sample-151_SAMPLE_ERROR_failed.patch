diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java
index 933d4ffa..72cc6f81 100644
--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -2428,7 +2428,8 @@ public final class NodeUtil {
         // same as returning a non-local name, but this doesn't matter if the
         // value is immutable.
         return NodeUtil.isImmutableValue(value.getLastChild())
-            || (locals.apply(value)
+            || (NodeUtil.isName(value.getFirstChild())
+                && locals.apply(value.getFirstChild())
                 && evaluatesToLocalValue(value.getLastChild(), locals));
       case Token.COMMA:
         return evaluatesToLocalValue(value.getLastChild(), locals);
@@ -2453,11 +2454,14 @@ public final class NodeUtil {
       case Token.GETELEM:
       case Token.GETPROP:
         // There is no information about the locality of object properties.
-        return locals.apply(value);
+        return NodeUtil.isImmutableValue(value.getFirstChild())
+            || locals.apply(value.getFirstChild());
       case Token.CALL:
         return callHasLocalResult(value)
             || isToStringMethodCall(value)
-            || locals.apply(value);
+            || locals.apply(value.getFirstChild())
+            || (value.getFirstChild().isGetProp()
+                && evaluatesToLocalValue(value.getFirstChild(), locals));
       case Token.NEW:
         // TODO(nicksantos): This needs to be changed so that it
         // returns true iff we're sure the value was never aliased from inside
