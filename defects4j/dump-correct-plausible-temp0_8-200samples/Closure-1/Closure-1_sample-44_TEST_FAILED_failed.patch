diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
index 41175cf3..96b10d70 100644
--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
@@ -366,7 +366,7 @@ class RemoveUnusedVars
    *
    * @param fnScope The scope inside the function
    */
-  private void removeUnreferencedFunctionArgs(Scope fnScope) {
+private void removeUnreferencedFunctionArgs(Scope fnScope) {
     // Notice that removing unreferenced function args breaks
     // Function.prototype.length. In advanced mode, we don't really care
     // about this: we consider "length" the equivalent of reflecting on
@@ -384,10 +382,8 @@ class RemoveUnusedVars
       // The parameters object literal setters can not be removed.
       return;
     }
-
     Node argList = getFunctionArgList(function);
-    boolean modifyCallers = modifyCallSites
-        && callSiteOptimizer.canModifyCallers(function);
+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);
     if (!modifyCallers) {
       // Strip unreferenced args off the end of the function declaration.
       Node lastArg;
@@ -400,7 +396,7 @@ class RemoveUnusedVars
           break;
         }
       }
-    } else {
+    } else if (argList.hasChildren()) {
       callSiteOptimizer.optimize(fnScope, referenced);
     }
   }
