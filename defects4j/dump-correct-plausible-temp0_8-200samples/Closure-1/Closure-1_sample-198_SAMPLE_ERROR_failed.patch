diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
index 41175cf3..9ee94915 100644
--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
@@ -366,7 +366,7 @@ class RemoveUnusedVars
    *
    * @param fnScope The scope inside the function
    */
-  private void removeUnreferencedFunctionArgs(Scope fnScope) {
+private void removeUnreferencedFunctionArgs(Scope fnScope) {
     // Notice that removing unreferenced function args breaks
     // Function.prototype.length. In advanced mode, we don't really care
     // about this: we consider "length" the equivalent of reflecting on
@@ -403,9 +400,18 @@ class RemoveUnusedVars
     } else {
       callSiteOptimizer.optimize(fnScope, referenced);
     }
+    // Remove the entire function if it's unreachable.
+    if (argList.getParent().isFunction() && !referenced.contains(
+        fnScope.getVar("arguments"))) {
+      compiler.reportCodeChange();
+      Node block = function.getLastChild();
+      Preconditions.checkState(block.isNormalBlock());
+      NodeUtil.redeclareVarsInsideBranch(block);
+      NodeUtil.markFunctionsDeleted(block, compiler);
+      NodeUtil.removeChild(function.getParent(), function);
+    }
   }
 
-
   /**
    * @return the LP node containing the function parameters.
    */
