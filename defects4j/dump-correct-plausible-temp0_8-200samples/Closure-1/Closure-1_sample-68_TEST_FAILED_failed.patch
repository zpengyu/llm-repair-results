diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
index 41175cf3..7e5e00a0 100644
--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
@@ -366,7 +366,7 @@ class RemoveUnusedVars
    *
    * @param fnScope The scope inside the function
    */
-  private void removeUnreferencedFunctionArgs(Scope fnScope) {
+private void removeUnreferencedFunctionArgs(Scope fnScope) {
     // Notice that removing unreferenced function args breaks
     // Function.prototype.length. In advanced mode, we don't really care
     // about this: we consider "length" the equivalent of reflecting on
@@ -376,11 +376,10 @@ class RemoveUnusedVars
     // is removing globals, then it's OK to remove unused function args.
     //
     // See http://code.google.com/p/closure-compiler/issues/detail?id=253
-
     Node function = fnScope.getRootNode();
-
+    Node parent = function.getParent();
     Preconditions.checkState(function.isFunction());
-    if (NodeUtil.isGetOrSetKey(function.getParent())) {
+    if (NodeUtil.isGetOrSetKey(parent)) {
       // The parameters object literal setters can not be removed.
       return;
     }
