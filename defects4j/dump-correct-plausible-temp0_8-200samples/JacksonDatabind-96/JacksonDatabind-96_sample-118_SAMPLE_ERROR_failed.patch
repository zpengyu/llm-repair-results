diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
index 81acbdb27..8c5cce5c7 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
@@ -705,16 +705,6 @@ nonAnnotatedParamIndex, ctor);
     {
         // Looks like there's bit of magic regarding 1-parameter creators; others simpler:
         if (1 != candidate.paramCount()) {
-            // Ok: for delegates, we want one and exactly one parameter without
-            // injection AND without name
-            int oneNotInjected = candidate.findOnlyParamWithoutInjection();
-            if (oneNotInjected >= 0) {
-                // getting close; but most not have name
-                if (candidate.paramName(oneNotInjected) == null) {
-                    _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);
-                    return;
-                }
-            }
             _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);
             return;
         }
@@ -728,10 +717,6 @@ nonAnnotatedParamIndex, ctor);
         if (!useProps && (paramDef != null)) {
             // One more thing: if implicit name matches property with a getter
             // or field, we'll consider it property-based as well
-
-            // 25-May-2018, tatu: as per [databind#2051], looks like we have to get
-            //    not implicit name, but name with possible strategy-based-rename
-//            paramName = candidate.findImplicitParamName(0);
             paramName = candidate.findImplicitParamName(0);
             useProps = (paramName != null) && paramDef.couldSerialize();
         }
@@ -742,8 +727,14 @@ nonAnnotatedParamIndex, ctor);
             creators.addPropertyCreator(candidate.creator(), true, properties);
             return;
         }
+        // 17-Feb-2016, tatu: Looks like there is one last thing: if we have
+        //   a delegate-based creator, need to be able to use it if we can
+        //   figure out what to use as delegate
+        if (param.hasAnnotation(JsonCreator.Delegate.class)) {
+            _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);
+            return;
+        }
         _handleSingleArgumentCreator(creators, candidate.creator(), true, true);
-
         // one more thing: sever link to creator property, to avoid possible later
         // problems with "unresolved" constructor property
         if (paramDef != null) {
