diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
index 81acbdb27..2d41952eb 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
@@ -698,7 +698,7 @@ nonAnnotatedParamIndex, ctor);
      *
      * @since 2.9.2
      */
-    protected void _addExplicitAnyCreator(DeserializationContext ctxt,
+protected void _addExplicitAnyCreator(DeserializationContext ctxt,
             BeanDescription beanDesc, CreatorCollector creators,
             CreatorCandidate candidate)
         throws JsonMappingException
@@ -728,10 +727,9 @@ nonAnnotatedParamIndex, ctor);
         if (!useProps && (paramDef != null)) {
             // One more thing: if implicit name matches property with a getter
             // or field, we'll consider it property-based as well
-
             // 25-May-2018, tatu: as per [databind#2051], looks like we have to get
             //    not implicit name, but name with possible strategy-based-rename
-//            paramName = candidate.findImplicitParamName(0);
+            //paramName = candidate.findImplicitParamName(0);
             paramName = candidate.findImplicitParamName(0);
             useProps = (paramName != null) && paramDef.couldSerialize();
         }
@@ -742,8 +740,7 @@ nonAnnotatedParamIndex, ctor);
             creators.addPropertyCreator(candidate.creator(), true, properties);
             return;
         }
-        _handleSingleArgumentCreator(creators, candidate.creator(), true, true);
-
+        _handleSingleArgumentCreator(creators, candidate.creator(), true, false);
         // one more thing: sever link to creator property, to avoid possible later
         // problems with "unresolved" constructor property
         if (paramDef != null) {
