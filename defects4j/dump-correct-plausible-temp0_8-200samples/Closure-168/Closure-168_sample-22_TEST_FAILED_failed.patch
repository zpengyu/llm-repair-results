diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index 5e7bfa3f..df0874a5 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -2022,7 +2018,8 @@ final class TypedScopeCreator implements ScopeCreator {
             data.get(ownerScope.getRootNode()).recordEscapedVarName(name);
           }
         }
-      } else if (n.isGetProp() && n.isUnscopedQualifiedName() &&
+      }
+      else if (n.isGetProp() && n.isUnscopedQualifiedName() &&
           NodeUtil.isLValue(n)) {
         String name = NodeUtil.getRootOfQualifiedName(n).getString();
         Scope scope = t.getScope();
@@ -2035,8 +2032,18 @@ final class TypedScopeCreator implements ScopeCreator {
           }
         }
       }
-    }
-  }
+      else if (n.isGetElem() &&
+          parent.isAssign() &&
+          parent.getFirstChild() == n &&
+          parent.getParent().isExprResult() &&
+          parent.getLastChild().isString()) {
+        String prop = parent.getLastChild().getString();
+        if (!prop.isEmpty()) {
+          data.get(t.getScopeRoot())
+              .recordEscapedQualifiedName(n.getFirstChild().getQualifiedName() + "[" + prop + "]");
+        }
+      }
+    }  }
 
   private AstFunctionContents getFunctionAnalysisResults(@Nullable Node n) {
     if (n == null) {
