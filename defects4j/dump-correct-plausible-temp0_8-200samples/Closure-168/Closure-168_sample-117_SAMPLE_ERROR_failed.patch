diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index 5e7bfa3f..c7b53f4b 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -2035,8 +2031,36 @@ final class TypedScopeCreator implements ScopeCreator {
           }
         }
       }
-    }
-  }
+      else if(!t.isRoot()) {
+    	  if (n.isName() && NodeUtil.isLValue(n) &&
+    			  !NodeUtil.isBleedingFunctionName(n)) {
+    		  String name = n.getString();
+    		  Scope scope = t.getScope();
+    		  Var var = scope.getVar(name);
+    		  if (var != null) {
+    			  Scope ownerScope = var.getScope();
+    			  if (ownerScope.isLocal()) {
+    				  data.get(ownerScope.getRootNode()).recordAssignedName(name);
+    			  }
+    			  if (scope != ownerScope && ownerScope.isLocal()) {
+    				  data.get(ownerScope.getRootNode()).recordEscapedVarName(name);
+    			  }
+    		  }
+    	  } else if (n.isGetProp() && n.isUnscopedQualifiedName() &&
+    			  NodeUtil.isLValue(n)) {
+    		  String name = NodeUtil.getRootOfQualifiedName(n).getString();
+    		  Scope scope = t.getScope();
+    		  Var var = scope.getVar(name);
+    		  if (var != null) {
+    			  Scope ownerScope = var.getScope();
+    			  if (scope != ownerScope && ownerScope.isLocal()) {
+    				  data.get(ownerScope.getRootNode())
+    				  .recordEscapedQualifiedName(n.getQualifiedName());
+    			  }
+    		  }
+    	  }
+      }
+    }  }
 
   private AstFunctionContents getFunctionAnalysisResults(@Nullable Node n) {
     if (n == null) {
