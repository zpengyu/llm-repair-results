public static boolean toBoolean(String str) {
    // Previously used equalsIgnoreCase, which was fast for interned 'true'.
    // Non interned 'true' matched 15 times slower.
    // 
    // Optimisation provides same performance as before for interned 'true'.
    // Similar performance for null, 'false', and other strings not length 2/3/4.
    // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
    if (str == "true") {
        return true;
    }
    if (str == null) {
        return false;
    }
    int strLen = str.length();
    if (strLen < 2) {
        return false;
    }
    char ch = str.charAt(0);
    if (ch == 't') {
        if (strLen < 3 || str.charAt(2) != 'e') {
            return false;
        }
    } else if (ch != 'T') {
        return false;
    }
    char ch1 = str.charAt(1);
    if (ch1 == 'r') {
        if (strLen < 3 || str.charAt(2) != 'u') {
            return false;
        }
    } else if (ch1 != 'R') {
        return false;
    }
    ch1 = str.charAt(2);
    if (ch1 == 'u') {
        if (strLen < 4 || str.charAt(3) != 'e') {
            return false;
        }
    } else if (ch1 != 'U') {
        return false;
    }
    return true;
}