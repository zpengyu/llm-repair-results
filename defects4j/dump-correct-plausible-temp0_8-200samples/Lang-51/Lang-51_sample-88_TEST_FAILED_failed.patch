diff --git a/src/java/org/apache/commons/lang/BooleanUtils.java b/src/java/org/apache/commons/lang/BooleanUtils.java
index 11593e68..ad1078c3 100644
--- a/src/java/org/apache/commons/lang/BooleanUtils.java
+++ b/src/java/org/apache/commons/lang/BooleanUtils.java
@@ -646,59 +646,83 @@ public class BooleanUtils {
      * @param str  the String to check
      * @return the boolean value of the string, <code>false</code> if no match
      */
-    public static boolean toBoolean(String str) {
-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.
-        // Non interned 'true' matched 15 times slower.
-        // 
-        // Optimisation provides same performance as before for interned 'true'.
-        // Similar performance for null, 'false', and other strings not length 2/3/4.
-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
-        if (str == "true") {
-            return true;
+public static boolean toBoolean(String str) {
+    if (str == null) {
+        return false;
+    }
+    switch (str.length()) {
+        case 1: {
+            char ch = str.charAt(0);
+            if (ch == 'y' || ch == 'Y' ||
+                ch == 't' || ch == 'T') {
+                return true;
+            }
+            if (ch == 'n' || ch == 'N' ||
+                ch == 'f' || ch == 'F') {
+                return false;
+            }
+            break;
         }
-        if (str == null) {
-            return false;
+        case 2: {
+            char ch0 = str.charAt(0);
+            char ch1 = str.charAt(1);
+            if ((ch0 == 'o' || ch0 == 'O') &&
+                (ch1 == 'n' || ch1 == 'N')) {
+                return true;
+            }
+            if ((ch0 == 'n' || ch0 == 'N') &&
+                (ch1 == 'o' || ch1 == 'O')) {
+                return false;
+            }
+            break;
         }
-        switch (str.length()) {
-            case 2: {
-                char ch0 = str.charAt(0);
-                char ch1 = str.charAt(1);
-                return 
-                    (ch0 == 'o' || ch0 == 'O') &&
-                    (ch1 == 'n' || ch1 == 'N');
+        case 3: {
+            char ch0 = str.charAt(0);
+            char ch1 = str.charAt(1);
+            char ch2 = str.charAt(2);
+            if ((ch0 == 'y' || ch0 == 'Y') &&
+                (ch1 == 'e' || ch1 == 'E') &&
+                (ch2 == 's' || ch2 == 'S')) {
+                return true;
             }
-            case 3: {
-                char ch = str.charAt(0);
-                if (ch == 'y') {
-                    return 
-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');
-                }
-                if (ch == 'Y') {
-                    return 
-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');
-                }
+            if ((ch0 == 'o' || ch0 == 'O') &&
+                (ch1 == 'f' || ch1 == 'F') &&
+                (ch2 == 'f' || ch2 == 'F')) {
+                return false;
             }
-            case 4: {
-                char ch = str.charAt(0);
-                if (ch == 't') {
-                    return 
-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&
-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&
-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');
-                }
-                if (ch == 'T') {
-                    return 
-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&
-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&
-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');
-                }
+            break;
+        }
+        case 4: {
+            char ch0 = str.charAt(0);
+            char ch1 = str.charAt(1);
+            char ch2 = str.charAt(2);
+            char ch3 = str.charAt(3);
+            if ((ch0 == 't' || ch0 == 'T') &&
+                (ch1 == 'r' || ch1 == 'R') &&
+                (ch2 == 'u' || ch2 == 'U') &&
+                (ch3 == 'e' || ch3 == 'E')) {
+                return true;
             }
+            break;
+        }
+        case 5: {
+            char ch0 = str.charAt(0);
+            char ch1 = str.charAt(1);
+            char ch2 = str.charAt(2);
+            char ch3 = str.charAt(3);
+            char ch4 = str.charAt(4);
+            if ((ch0 == 'f' || ch0 == 'F') &&
+                (ch1 == 'a' || ch1 == 'A') &&
+                (ch2 == 'l' || ch2 == 'L') &&
+                (ch3 == 's' || ch3 == 'S') &&
+                (ch4 == 'e' || ch4 == 'E')) {
+                return false;
+            }
+            break;
         }
-        return false;
     }
-    
+    throw new IllegalArgumentException("Not a boolean String: " + str);
+}    
 //    public static void main(String[] args) {
 //        long start = System.currentTimeMillis();
 //        boolean flag = true;
