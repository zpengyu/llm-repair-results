    public static boolean toBoolean(String str) {
        // Previously used equalsIgnoreCase, which was fast for interned 'true'.
        // Non interned 'true' matched 15 times slower.
        // 
        // Optimisation provides same performance as before for interned 'true'.
        // Similar performance for null, 'false', and other strings not length 2/3/4.
        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
        if (str == "true") {
            return true;
        }
        if (str == null) {
            return false;
        }
        int len = str.length();
        if (len == 2 || len == 3) {
            char ch0 = str.charAt(0);
            char ch1 = str.charAt(1);
            if (ch0 == 'o' || ch0 == 'O') {
                if ((ch1 == 'n' || ch1 == 'N') && (len == 2 || (str.charAt(2) == 'e' || str.charAt(2) == 'E'))) {
                    return true;
                }
            }
            else if (ch0 == 'y' || ch0 == 'Y') {
                if ((ch1 == 'e' || ch1 == 'E') && (len == 2 || (str.charAt(2) == 's' || str.charAt(2) == 'S'))) {
                    return true;
                }
            }
        }
        else if (len == 4) {
            char ch0 = str.charAt(0);
            char ch1 = str.charAt(1);
            char ch2 = str.charAt(2);
            char ch3 = str.charAt(3);
            if (ch0 == 't' || ch0 == 'T') {
                if ((ch1 == 'r' || ch1 == 'R') && (ch2 == 'u' || ch2 == 'U') && (ch3 == 'e' || ch3 == 'E')) {
                    return true;
                }
            }
        }
        return false;
    }

