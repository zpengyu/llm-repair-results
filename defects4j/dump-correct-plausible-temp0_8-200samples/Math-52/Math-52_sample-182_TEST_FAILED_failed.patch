diff --git a/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java b/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java
index bf99cbac2..16ae932e1 100644
--- a/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java
+++ b/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java
@@ -380,15 +370,12 @@ public class Rotation implements Serializable {
   q1 = inv * k.getX();
   q2 = inv * k.getY();
   q3 = inv * k.getZ();
-
   // compute the scalar part
-   k = new Vector3D(uRef.getY() * q3 - uRef.getZ() * q2,
-                    uRef.getZ() * q1 - uRef.getX() * q3,
-                    uRef.getX() * q2 - uRef.getY() * q1);
-  q0 = vRef.dotProduct(k) / (2 * k.getNormSq());
-
+  k = new Vector3D(vRef.getY() * q3 - vRef.getZ() * q2,
+                   vRef.getZ() * q1 - vRef.getX() * q3,
+                   vRef.getX() * q2 - vRef.getY() * q1);
+  q0 = uRef.dotProduct(k) / (2 * k.getNormSq());
   }
-
   /** Build one of the rotations that transform one vector into another one.
 
    * <p>Except for a possible scale factor, if the instance were
