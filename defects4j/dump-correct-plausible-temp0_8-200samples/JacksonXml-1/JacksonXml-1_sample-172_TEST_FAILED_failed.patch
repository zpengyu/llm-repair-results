diff --git a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
index 7fe9f45..311e3fa 100644
--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
@@ -509,15 +505,35 @@ public class FromXmlParser
             // Simple, except that if this is a leaf, need to suppress end:
             if (_mayBeLeaf) {
                 _mayBeLeaf = false;
-                    // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to
-                    //    expose as empty Object, not null
-                return (_currToken = JsonToken.VALUE_NULL);
+                /* One more refinement (pronunced like "hack") is that if
+                 * we had an empty String (or all white space), and we are
+                 * deserializing an array, we better hide the empty text.
+                 */
+                // Also: must skip following END_ELEMENT
+                _xmlTokens.skipEndElement();
+                if (_parsingContext.inArray()) {
+                    if (_isEmpty(_currText)) {
+                        _currToken = JsonToken.END_ARRAY;
+                        _parsingContext = _parsingContext.getParent();
+                        _namesToWrap = _parsingContext.getNamesToWrap();
+                        return _currToken;
+                    }
+                }
+                return (_currToken = JsonToken.VALUE_STRING);
+            } else {
+                // [dataformat-xml#177]: empty text may also need to be skipped
+                if (_parsingContext.inObject()
+                        && (_currToken != JsonToken.FIELD_NAME) && _isEmpty(_currText)) {
+                    _currToken = JsonToken.END_OBJECT;
+                    _parsingContext = _parsingContext.getParent();
+                    _namesToWrap = _parsingContext.getNamesToWrap();
+                    return _currToken;
+                }
             }
-            _currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;
-            _parsingContext = _parsingContext.getParent();
-            _namesToWrap = _parsingContext.getNamesToWrap();
-            return _currToken;
-            
+            // If not a leaf (or otherwise ignorable), need to transform into property...
+            _parsingContext.setCurrentName(_cfgNameForTextElement);
+            _nextToken = JsonToken.VALUE_STRING;
+            return (_currToken = JsonToken.FIELD_NAME);
         case XmlTokenStream.XML_ATTRIBUTE_NAME:
             // If there was a chance of leaf node, no more...
             if (_mayBeLeaf) {
