diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
index abff329b..8c11dbca 100644
--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
@@ -168,9 +166,18 @@ public abstract class ChainableReverseAbstractInterpreter
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
+      case Token.THIS:
+        JSType thisType = scope.getTypeOfThis();
+        if (thisType == null) {
+          thisType = type;
+        } else if (type != null) {
+          thisType = JSType.meet(thisType, type);
+        }
+        if (thisType.isUnknownType()) {
+          thisType = getNativeType(UNKNOWN_TYPE);
+        }
+        scope.inferSlotType("this", thisType);
+        break;
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
