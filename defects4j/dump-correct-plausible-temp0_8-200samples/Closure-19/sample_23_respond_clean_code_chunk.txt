  protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
    switch (node.getType()) {
      case Token.NAME:
        scope.inferSlotType(node.getString(), type);
        break;
      case Token.GETPROP:
        String qualifiedName = node.getQualifiedName();
        Preconditions.checkNotNull(qualifiedName);
        JSType origType = node.getJSType();
        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
        scope.inferQualifiedSlot(node, qualifiedName, origType, type);
        break;
      case Token.THIS:
        JSType thisType = scope.getTypeOfThis();
        if (thisType == null) {
          thisType = type;
        } else if (type != null) {
          thisType = JSType.meet(thisType, type);
        }
        if (thisType.isUnknownType()) {
          thisType = getNativeType(UNKNOWN_TYPE);
        }
        scope.inferSlotType("this", thisType);
        break;
      default:
        throw new IllegalArgumentException("Node cannot be refined. \n" +
            node.toStringTree());
    }
  }