diff --git a/src/main/java/org/jsoup/nodes/Entities.java b/src/main/java/org/jsoup/nodes/Entities.java
index 1fadc57..b1b62dc 100644
--- a/src/main/java/org/jsoup/nodes/Entities.java
+++ b/src/main/java/org/jsoup/nodes/Entities.java
@@ -42,35 +42,33 @@ public class Entities {
         return accum.toString();
     }
 
-    static String unescape(String string) {
+static String unescape(String string) {
         if (!string.contains("&"))
             return string;
-
-        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
         StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
-        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
-
+        StringBuffer num = new StringBuffer(4); // group(3) usually very short
+        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
         while (m.find()) {
-            int charval = -1;
-            String num = m.group(3);
-            if (num != null) {
-                try {
-                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
-                    charval = Integer.valueOf(num, base);
-                } catch (NumberFormatException e) {
-                } // skip
-            } else {
-                String name = m.group(1);
-                if (full.containsKey(name))
-                    charval = full.get(name);
+            int charval;
+            num.delete(0, num.length());
+            if (m.group(2) != null) {
+                num.append(m.group(3));
+                if (m.group(2).equals("x")) // hex
+                    charval = Integer.parseInt(num.toString(), 16);
+                else // no indicator (= decimal)
+                    charval = Integer.parseInt(num.toString(), 10);
+            } else if (full.containsKey(m.group(1))) { // named
+                charval = full.get(m.group(1));
+            } else { // no match
+                m.appendReplacement(accum, m.group(0));
+                continue;
             }
-
-            if (charval != -1 || charval > 0xFFFF) { // out of range
-                String c = Character.toString((char) charval);
-                m.appendReplacement(accum, c);
-            } else {
+            if (charval > 0xFFFF) { // out of range
                 m.appendReplacement(accum, m.group(0));
+                continue;
             }
+            String c = Character.toString((char) charval);
+            m.appendReplacement(accum, c);
         }
         m.appendTail(accum);
         return accum.toString();
