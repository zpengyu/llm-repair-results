diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..a0919e740 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,17 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                double max = 0;
+                for (int i = 0; i < lB.length; ++i) {
+                    double range = uB[i] - lB[i];
+                    if (range > max) {
+                        max = range;
+                    }
+                }
+                if (max > Integer.MAX_VALUE) {
+                    throw new MathIllegalArgumentException(LocalizedCoreFormats.NUMBER_TOO_LARGE, max, Integer.MAX_VALUE);
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
