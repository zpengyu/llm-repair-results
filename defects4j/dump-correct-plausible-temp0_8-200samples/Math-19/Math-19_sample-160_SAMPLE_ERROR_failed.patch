diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..515fb3be5 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,14 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                for (int i = 0; i < init.length; i++) {
+                    if (uB[i] - lB[i] >= Double.MAX_VALUE) {
+                        throw new MathUnsupportedOperationException("Initialization from a compact search space will "
+                                                                    + "exhaust the precision of "
+                                                                    + "double floating point numbers");
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
