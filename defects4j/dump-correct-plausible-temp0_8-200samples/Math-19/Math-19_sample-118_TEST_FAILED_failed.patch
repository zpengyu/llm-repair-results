diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..2b7159c10 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,31 +533,25 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                for (int i = 0; i < init.length; i++) {
+                    if (inputSigma != null) {
+                        if (inputSigma[i] < 0) {
+                            throw new NotPositiveException(inputSigma[i]);
+                        }
+                        if (boundaries != null) {
+                            if (inputSigma[i] > boundaries[1][i] - boundaries[0][i]) {
+                                throw new OutOfRangeException(inputSigma[i], 0, boundaries[1][i] - boundaries[0][i]);
+                            }
+                        }
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
             boundaries = null;
         }
-
-        if (inputSigma != null) {
-            if (inputSigma.length != init.length) {
-                throw new DimensionMismatchException(inputSigma.length, init.length);
-            }
-            for (int i = 0; i < init.length; i++) {
-                if (inputSigma[i] < 0) {
-                    throw new NotPositiveException(inputSigma[i]);
-                }
-                if (boundaries != null) {
-                    if (inputSigma[i] > boundaries[1][i] - boundaries[0][i]) {
-                        throw new OutOfRangeException(inputSigma[i], 0, boundaries[1][i] - boundaries[0][i]);
-                    }
-                }
-            }
-        }
     }
-
     /**
      * Initialization of the dynamic search parameters
      *
