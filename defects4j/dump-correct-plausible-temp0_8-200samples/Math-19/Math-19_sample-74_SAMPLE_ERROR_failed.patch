diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..e91295aab 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,18 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                double normalization = 1;
+                for (int i = 0; i < init.length; i++) {
+                    if (inputSigma != null) {
+                        normalization *= inputSigma[i];
+                    }
+                    normalization *= boundaries[1][i] - boundaries[0][i];
+                }
+                if (Double.isInfinite(normalization)) {
+                    throw new ConvergenceException(LocalizedCoreFormats.OVERFLOW_IN_FRACTION,
+                                                   1, boundaries[0][0], boundaries[1][0]);
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
