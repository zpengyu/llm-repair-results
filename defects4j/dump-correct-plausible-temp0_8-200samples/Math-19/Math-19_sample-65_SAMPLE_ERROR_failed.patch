diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..fc2664be0 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,20 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                normalization = new double[init.length];
+                for (int i = 0; i < init.length; i++) {
+                    if (Double.isInfinite(boundaries[0][i]) ||
+                        Double.isInfinite(boundaries[1][i]) ||
+                        boundaries[1][i] == boundaries[0][i]) {
+                        throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_BOUND, boundaries[0][i], boundaries[1][i]);
+                    }
+                    normalization[i] = (boundaries[1][i] - boundaries[0][i]) / 2;
+                    if (Double.isInfinite(normalization[i])) {
+                        throw new MathIllegalArgumentException(LocalizedFormats.OVERFLOW_IN_FRACTION,
+                                                               boundaries[1][i] - boundaries[0][i], 2);
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
