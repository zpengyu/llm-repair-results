diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..707466597 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,15 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
-                // Abort early if the normalization will overflow (cf. "encode" method).
+                // Check whether the normalization will not overflow.
+                for (int i = 0; i < boundaries[0].length; i++) {
+                    if (!Double.isInfinite(boundaries[0][i])) {
+                        if (boundaries[1][i] / boundaries[0][i] > Double.MAX_VALUE) {
+                            throw new MathArithmeticException(LocalizedCoreFormats.OVERFLOW_IN_FRACTION,
+                                                               boundaries[1][i], boundaries[0][i]);
+                        }
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
