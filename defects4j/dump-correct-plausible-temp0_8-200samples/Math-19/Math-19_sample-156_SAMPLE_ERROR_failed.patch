diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..df1aa56b3 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,21 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
-                // Abort early if the normalization will overflow (cf. "encode" method).
+            }
+            // Abort early if the normalization will overflow (cf. "encode" method).
+            for (int i = 0; i < init.length; i++) {
+                double a = lB[i];
+                double b = uB[i];
+                if (a == b) {
+                    throw new ZeroException();
+                }
+                double r = FastMath.max(1, FastMath.abs(a));
+                a /= r;
+                b /= r;
+                double max = FastMath.max(FastMath.abs(a), FastMath.abs(b));
+                if (max > Double.MAX_VALUE) {
+                    throw new TooManyEvaluationsException();
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
