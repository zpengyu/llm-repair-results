diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 140e9d4f9..d71591c17 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +533,13 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                for (int i = 0; i < getDimension(); i++) {
+                    final double span = boundaries[1][i] - boundaries[0][i];
+                    if (span > Double.MAX_VALUE / getDimension()) {
+                        throw new NumberIsTooLargeException(span, Double.MAX_VALUE / getDimension(), false);
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
