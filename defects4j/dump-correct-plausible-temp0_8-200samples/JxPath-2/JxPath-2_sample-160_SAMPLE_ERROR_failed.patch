diff --git a/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java b/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java
index 927f617..67dd523 100644
--- a/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java
+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java
@@ -68,9 +63,11 @@ public abstract class Expression {
      */
     public abstract Object computeValue(EvalContext context);
     public abstract Object compute(EvalContext context);
-
     public Iterator iterate(EvalContext context) {
         Object result = compute(context);
+        if (result == null) {
+            return ValueUtils.iterate(ONE);
+        }
         if (result instanceof EvalContext) {
             return new ValueIterator((EvalContext) result);
         }
@@ -80,16 +76,13 @@ public abstract class Expression {
     public Iterator iteratePointers(EvalContext context) {
         Object result = compute(context);
         if (result == null) {
-            return Collections.EMPTY_LIST.iterator();
+            return ValueUtils.iteratePointers(ONE, context.getRootContext());
         }
         if (result instanceof EvalContext) {
             return (EvalContext) result;
         }
-        return new PointerIterator(ValueUtils.iterate(result),
-                new QName(null, "value"),
-                context.getRootContext().getCurrentNodePointer().getLocale());
+        return ValueUtils.iteratePointers(result, context.getRootContext());
     }
-
     public static class PointerIterator implements Iterator {
         private Iterator iterator;
         private QName qname;
