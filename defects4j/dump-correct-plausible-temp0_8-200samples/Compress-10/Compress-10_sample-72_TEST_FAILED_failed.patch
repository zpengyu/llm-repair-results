diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
index fd5d1894..79c12c09 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
@@ -798,15 +798,20 @@ public class ZipFile {
      * <p>Also records the offsets for the data to read from the
      * entries.</p>
      */
-    private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
-                                            entriesWithoutUTF8Flag)
+    private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment> entriesWithoutUTF8Flag)
         throws IOException {
         // changing the name of a ZipArchiveEntry is going to change
         // the hashcode - see COMPRESS-164
         // Map needs to be reconstructed in order to keep central
         // directory order
-        for (ZipArchiveEntry ze : entries.keySet()) {
+        Map<ZipArchiveEntry, OffsetEntry> entriesWithoutUTF8FlagMap
+            = new LinkedHashMap<ZipArchiveEntry, OffsetEntry>();
+        for (ZipArchiveEntry ze : entriesWithoutUTF8Flag.keySet()) {
             OffsetEntry offsetEntry = entries.get(ze);
+            entriesWithoutUTF8FlagMap.put(ze, offsetEntry);
+        }
+        for (ZipArchiveEntry ze : entriesWithoutUTF8FlagMap.keySet()) {
+            OffsetEntry offsetEntry = entriesWithoutUTF8FlagMap.get(ze);
             long offset = offsetEntry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
