diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
index fd5d1894..9ea98c15 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
@@ -805,9 +805,13 @@ public class ZipFile {
         // the hashcode - see COMPRESS-164
         // Map needs to be reconstructed in order to keep central
         // directory order
-        for (ZipArchiveEntry ze : entries.keySet()) {
-            OffsetEntry offsetEntry = entries.get(ze);
-            long offset = offsetEntry.headerOffset;
+        Map<ZipArchiveEntry, OffsetEntry> copy =
+            new LinkedHashMap<ZipArchiveEntry, OffsetEntry>();
+        for (Map.Entry<ZipArchiveEntry, OffsetEntry>
+             offsetEntry : entries.entrySet()) {
+            ZipArchiveEntry ze = offsetEntry.getKey();
+            OffsetEntry entry = offsetEntry.getValue();
+            long offset = entry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
             archive.readFully(b);
@@ -826,9 +830,8 @@ public class ZipFile {
             byte[] localExtraData = new byte[extraFieldLen];
             archive.readFully(localExtraData);
             ze.setExtra(localExtraData);
-            offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
+            entry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
                 + SHORT + SHORT + fileNameLen + extraFieldLen;
-
             if (entriesWithoutUTF8Flag.containsKey(ze)) {
                 String orig = ze.getName();
                 NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
@@ -839,9 +842,11 @@ public class ZipFile {
                     nameMap.put(ze.getName(), ze);
                 }
             }
+            copy.put(ze, entry);
         }
+        entries.clear();
+        entries.putAll(copy);
     }
-
     /**
      * Checks whether the archive starts with a LFH.  If it doesn't,
      * it may be an empty archive.
