diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java
index 9542fbff..54bcf262 100644
--- a/src/com/google/javascript/jscomp/NameAnalyzer.java
+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java
@@ -558,6 +558,7 @@ final class NameAnalyzer implements CompilerPass {
     private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {
       Node nameNode = n.getFirstChild();
       Node parent = n.getParent();
+      Node rhs = nameNode.getNext();
       NameInformation ns = createNameInformation(t, nameNode);
       if (ns != null) {
         if (parent.isFor() && !NodeUtil.isForIn(parent)) {
@@ -582,7 +583,7 @@ final class NameAnalyzer implements CompilerPass {
           // caller expression, but it could be nested deeper in the caller and
           // we would still get a bug.
           // See testAssignWithCall2 for an example of this.
-          recordDepScope(recordNode, ns);
+          recordDepScope(rhs, ns);
         }
       }
     }
