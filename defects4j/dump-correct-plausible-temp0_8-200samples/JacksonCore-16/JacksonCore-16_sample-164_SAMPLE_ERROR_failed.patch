diff --git a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
index bed27f2b..621364f3 100644
--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java
@@ -32,7 +30,7 @@ public class JsonParserSequence extends JsonParserDelegate
      *
      * @since 2.8
      */
-
+    protected boolean _hasToken;
     /*
      *******************************************************
      * Construction
@@ -44,8 +41,8 @@ public class JsonParserSequence extends JsonParserDelegate
         super(parsers[0]);
         _parsers = parsers;
         _nextParser = 1;
+        _hasToken = false;
     }
-
     /**
      * Method that will construct a parser (possibly a sequence) that
      * contains all given sub-parsers.
@@ -103,15 +96,32 @@ public class JsonParserSequence extends JsonParserDelegate
     @Override
     public JsonToken nextToken() throws IOException, JsonParseException
     {
-        JsonToken t = delegate.nextToken();
-        if (t != null) return t;
-        while (switchToNext()) {
-            t = delegate.nextToken();
+        if (!_hasToken) {
+            JsonToken t = delegate.nextToken();
             if (t != null) return t;
+            while (switchToNext()) {
+                t = delegate.nextToken();
+                if (t != null) return t;
+            }
+            return null;
         }
-        return null;
+        _hasToken = false;
+        return delegate.getCurrentToken();
+    }
+    @Override
+    public JsonParser skipChildren() throws IOException, JsonParseException {
+        if (!_hasToken) {
+            JsonToken t = delegate.nextToken();
+            if (t != null) return t;
+            while (switchToNext()) {
+                t = delegate.nextToken();
+                if (t != null) return t;
+            }
+            return null;
+        }
+        _hasToken = false;
+        return delegate.skipChildren();
     }
-
     /*
     /*******************************************************
     /* Additional extended API
