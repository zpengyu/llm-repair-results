    public int getOffsetFromLocal(long instantLocal) {
        // get the offset at instantLocal (first estimate)
        final int offsetLocal = getOffset(instantLocal);
        // adjust instantLocal using the estimate and recalc the offset
        final long instantAdjusted = instantLocal - offsetLocal;
        final int offsetAdjusted = getOffset(instantAdjusted);
        // if the offsets differ, we must be near a DST boundary
        if (offsetLocal != offsetAdjusted) {
            // we need to ensure that time is always after the DST gap
            // this happens naturally for positive offsets, but not for negative
            if ((offsetLocal - offsetAdjusted) < 0) {
                // if we just return offsetAdjusted then the time is pushed
                // back before the transition, whereas it should be
                // on or after the transition
                long nextLocal = nextTransition(instantAdjusted);
                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);
                if (nextLocal != nextAdjusted) {
                    // Even though this adjustment is earlier, it is the
                    // correct adjustment to make.  Imagine a transition
                    // from 01:00 to 01:00.  Suppose the transition occurs
                    // at Jan 1 00:00.  The local time at that point is
                    // ambiguous, so an arbitrary choice is made, such as
                    // 01:00.  A later time is requested, perhaps Jan 1 00:10.
                    // Time zone data is used to determine the offset is
                    // still 01:00.  However, if 01:00 is adjusted to 02:00,
                    // then when the offset is applied the time will be
                    // 02:10 instead of 01:10, which is wrong.
                    return offsetLocal;
                }
            }
        } else if (offsetLocal > 0) {
            long prev = previousTransition(instantAdjusted);
            if (prev < instantAdjusted) {
                int offsetPrev = getOffset(prev);
                int diff = offsetLocal - offsetPrev;
                if (instantAdjusted - prev <= diff) {
                    return offsetPrev;
                }
            }
        }
        return offsetAdjusted;
    }