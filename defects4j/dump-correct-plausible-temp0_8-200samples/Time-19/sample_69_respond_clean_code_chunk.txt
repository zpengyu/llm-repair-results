    public int getOffsetFromLocal(long instantLocal) {
        // get the offset at instantLocal (first estimate)
        final int offsetLocal = getOffset(instantLocal);
        // adjust instantLocal using the estimate and recalc the offset
        final long instantAdjusted = instantLocal - offsetLocal;
        final int offsetAdjusted = getOffset(instantAdjusted);
        // if the offsets differ, we must be near a DST boundary
        if (offsetLocal != offsetAdjusted) {
            // we need to ensure that time is always after the DST gap
            // this happens naturally for positive offsets, but not for negative
            if ((offsetLocal - offsetAdjusted) < 0) {
                long nextLocal = nextTransition(instantLocal - offsetLocal);
                if (nextLocal == (instantLocal - offsetAdjusted)) {
                    return offsetAdjusted;
                }
            }
        } else if (offsetLocal > 0) {
            long prev = previousTransition(instantLocal - offsetLocal);
            if (prev < instantLocal - offsetLocal) {
                int offsetPrev = getOffset(prev);
                int diff = offsetLocal - offsetPrev;
                if (instantLocal - offsetLocal - prev <= diff) {
                    return offsetPrev;
                }
            }
        }
        return offsetAdjusted;
    }