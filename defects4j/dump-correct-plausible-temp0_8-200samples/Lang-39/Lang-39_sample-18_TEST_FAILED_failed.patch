diff --git a/src/java/org/apache/commons/lang3/StringUtils.java b/src/java/org/apache/commons/lang3/StringUtils.java
index f1b13417..fb73d36e 100644
--- a/src/java/org/apache/commons/lang3/StringUtils.java
+++ b/src/java/org/apache/commons/lang3/StringUtils.java
@@ -3603,18 +3603,13 @@ public class StringUtils {
      * @since 2.4
      */
     private static String replaceEach(String text, String[] searchList, String[] replacementList,
-                                      boolean repeat, int timeToLive) 
-    {
-
+                                      boolean repeat, int timeToLive) {
         // mchyzer Performance note: This creates very few new objects (one major goal)
         // let me know if there are performance requests, we can create a harness to measure
-
         if (text == null || text.length() == 0 || searchList == null ||
-            searchList.length == 0 || replacementList == null || replacementList.length == 0) 
-        {
+                searchList.length == 0 || replacementList == null || replacementList.length == 0) {
             return text;
         }
-
         // if recursing, this shouldnt be less than 0
         if (timeToLive < 0) {
             throw new IllegalStateException("TimeToLive of " + timeToLive + " is less than 0: " + text);
@@ -3626,14 +3619,12 @@ public class StringUtils {
         // make sure lengths are ok, these need to be equal
         if (searchLength != replacementLength) {
             throw new IllegalArgumentException("Search and Replace array lengths don't match: "
-                + searchLength
-                + " vs "
-                + replacementLength);
+                    + searchLength
+                    + " vs "
+                    + replacementLength);
         }
-
         // keep track of which still have matches
         boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
-
         // index on index that the match was found
         int textIndex = -1;
         int replaceIndex = -1;
@@ -3643,8 +3633,7 @@ public class StringUtils {
         // NOTE: logic duplicated below START
         for (int i = 0; i < searchLength; i++) {
             if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
-                searchList[i].length() == 0 || replacementList[i] == null) 
-            {
+                    searchList[i].length() == 0 || replacementList[i] == null) {
                 continue;
             }
             tempIndex = text.indexOf(searchList[i]);
@@ -3699,8 +3678,7 @@ public class StringUtils {
             // NOTE: logic mostly duplicated above START
             for (int i = 0; i < searchLength; i++) {
                 if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
-                    searchList[i].length() == 0 || replacementList[i] == null) 
-                {
+                        searchList[i].length() == 0 || replacementList[i] == null) {
                     continue;
                 }
                 tempIndex = text.indexOf(searchList[i], start);
