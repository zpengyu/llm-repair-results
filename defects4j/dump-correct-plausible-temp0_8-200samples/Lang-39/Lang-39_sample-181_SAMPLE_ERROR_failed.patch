diff --git a/src/java/org/apache/commons/lang3/StringUtils.java b/src/java/org/apache/commons/lang3/StringUtils.java
index f1b13417..ea8c35a6 100644
--- a/src/java/org/apache/commons/lang3/StringUtils.java
+++ b/src/java/org/apache/commons/lang3/StringUtils.java
@@ -3726,10 +3706,50 @@ public class StringUtils {
         if (!repeat) {
             return result;
         }
-
         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);
     }
-
+    /**
+     * Returns a string which is substring of the given string. This
+     * method is different from the Java String.substring method in that it
+     * will do its best to return a meaningful substring. It returns null if
+     * <code>start</code> is not meaningful. For example, null or an empty
+     * String will return null. It will return an empty String if <code>end</code>
+     * is not meaningful. If nothing is wrong with the arguments, it will
+     * return the substring as designated.
+     *
+     * @param start
+     *            the beginning index, inclusive.
+     * @param end
+     *            the ending index, exclusive.
+     * @return substring or null if no substring can be extracted.
+     */
+    public static String substring(String s, int start, int end) {
+        if (s == null) {
+            return null;
+        }
+        // handle negatives
+        if (end < 0) {
+            end = s.length() + end; // remember end is negative
+        }
+        if (start < 0) {
+            start = s.length() + start; // remember start is negative
+        }
+        // check length next
+        if (end > s.length()) {
+            end = s.length();
+        }
+        // if start is greater than end, return ""
+        if (start > end) {
+            return "";
+        }
+        if (start < 0) {
+            start = 0;
+        }
+        if (end < 0) {
+            end = 0;
+        }
+        return s.substring(start, end);
+    }
     // Replace, character based
     //-----------------------------------------------------------------------
     /**
