diff --git a/src/java/org/apache/commons/lang3/StringUtils.java b/src/java/org/apache/commons/lang3/StringUtils.java
index f1b13417..70a3b77c 100644
--- a/src/java/org/apache/commons/lang3/StringUtils.java
+++ b/src/java/org/apache/commons/lang3/StringUtils.java
@@ -3602,15 +3602,13 @@ public class StringUtils {
      *             and/or size 0)
      * @since 2.4
      */
-    private static String replaceEach(String text, String[] searchList, String[] replacementList, 
-                                      boolean repeat, int timeToLive) 
+private static String replaceEach(String text, String[] searchList, String[] replacementList,
+                                          boolean repeat, int timeToLive)
     {
-
         // mchyzer Performance note: This creates very few new objects (one major goal)
         // let me know if there are performance requests, we can create a harness to measure
-
         if (text == null || text.length() == 0 || searchList == null ||
-            searchList.length == 0 || replacementList == null || replacementList.length == 0) 
+                searchList.length == 0 || replacementList == null || replacementList.length == 0)
         {
             return text;
         }
@@ -3626,14 +3621,12 @@ public class StringUtils {
         // make sure lengths are ok, these need to be equal
         if (searchLength != replacementLength) {
             throw new IllegalArgumentException("Search and Replace array lengths don't match: "
-                + searchLength
-                + " vs "
-                + replacementLength);
+                    + searchLength
+                    + " vs "
+                    + replacementLength);
         }
-
         // keep track of which still have matches
         boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
-
         // index on index that the match was found
         int textIndex = -1;
         int replaceIndex = -1;
@@ -3643,7 +3635,7 @@ public class StringUtils {
         // NOTE: logic duplicated below START
         for (int i = 0; i < searchLength; i++) {
             if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
-                searchList[i].length() == 0 || replacementList[i] == null) 
+                    searchList[i].length() == 0 || replacementList[i] == null)
             {
                 continue;
             }
@@ -3659,8 +3650,7 @@ public class StringUtils {
                 }
             }
         }
-        // NOTE: logic mostly below END
-
+        // NOTE: logic duplicated below END
         // no search strings found, we are done
         if (textIndex == -1) {
             return text;
@@ -3696,10 +3678,10 @@ public class StringUtils {
             replaceIndex = -1;
             tempIndex = -1;
             // find the next earliest match
-            // NOTE: logic mostly duplicated above START
+            // NOTE: logic duplicated above START
             for (int i = 0; i < searchLength; i++) {
                 if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
-                    searchList[i].length() == 0 || replacementList[i] == null) 
+                        searchList[i].length() == 0 || replacementList[i] == null)
                 {
                     continue;
                 }
