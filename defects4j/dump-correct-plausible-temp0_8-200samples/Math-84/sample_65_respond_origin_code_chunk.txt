    protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {

        while (true) {

            incrementIterationsCounter();

            // save the original vertex
            final RealPointValuePair[] original = simplex;
            final RealPointValuePair best = original[0];

            // perform a reflection step
            final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
            if (comparator.compare(reflected, best) < 0) {

                // compute the expanded simplex
                final RealPointValuePair[] reflectedSimplex = simplex;
                final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                if (comparator.compare(reflected, expanded) < 0) {
                    // accept the expanded simplex
                    simplex = reflectedSimplex;
                    return;
                }

                // accept the reflected simplex
                simplex = reflectedSimplex;
                return;

            }

            // compute the contracted simplex
            final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
            if (comparator.compare(contracted, best) < 0) {
                // accept the contracted simplex
                return;
            }

            // perform a shrink step
            final RealPointValuePair[] contractedSimplex = simplex;
            evaluateNewSimplex(best, rho, comparator);
            if (comparator.compare(simplex[0], contracted) < 0) {
                // accept the contracted simplex
                simplex = contractedSimplex;
                return;
            }

            // check convergence
            return;
        }
    }

