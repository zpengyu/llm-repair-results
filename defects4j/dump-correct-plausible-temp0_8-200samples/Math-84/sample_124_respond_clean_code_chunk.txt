    protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
        while (true) {
            incrementIterationsCounter();
            // save the original vertex
            final RealPointValuePair[] original = simplex;
            final RealPointValuePair best = original[0];
            // perform a reflection step
            final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
            if (comparator.compare(reflected, best) < 0) {
                // compute the expanded simplex
                final RealPointValuePair[] reflectedSimplex = simplex;
                final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                if (comparator.compare(reflected, expanded) <= 0) {
                    // accept the reflected simplex
                    simplex = reflectedSimplex;
                } else {
                    // accept the expanded simplex
                    simplex = expandedSimplex;
                }
                return;
            }
            // perform an inside contraction step
            final RealPointValuePair insideContracted = evaluateNewSimplex(original, gamma, comparator);
            if (comparator.compare(insideContracted, best) <= 0) {
                // accept the reflected simplex
            // check convergence
                return;
            }
            // perform an outside contraction step
            final RealPointValuePair outsideContracted = evaluateNewSimplex(original, ro, comparator);
            if (comparator.compare(outsideContracted, best) <= 0) {
                // accept the outside contracted simplex
            // check convergence
                return;
            }
            // perform a reduction step
            reduceSimplex(epsilon, comparator);
        }
    }