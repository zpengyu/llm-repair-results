diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
index 6d0db8734..8cf82f246 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
@@ -19,6 +19,24 @@ import com.fasterxml.jackson.databind.ser.ContextualSerializer;
  * Container class for serializers used for handling standard JDK-provided types.
  */
 @SuppressWarnings("serial")
+import java.io.IOException;
+import java.lang.reflect.Type;
+import java.util.Map;
+import com.fasterxml.jackson.annotation.JsonFormat;
+import com.fasterxml.jackson.core.JsonGenerator;
+import com.fasterxml.jackson.core.JsonParser;
+import com.fasterxml.jackson.databind.*;
+import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;
+import com.fasterxml.jackson.databind.jsonFormatVisitors.*;
+import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
+import com.fasterxml.jackson.databind.util.StdDateFormat;
+import com.fasterxml.jackson.databind.util.TokenBuffer;
+/**
+ * Base class for serializers used for simple types that can
+ * be converted from text via {@link java.lang.Object#toString}.
+ * This is the case for many primitive types, and few simple ones
+ * (like {@link java.math.BigDecimal} and {@link java.math.BigInteger}).
+ */
 public class NumberSerializers
 {
     protected NumberSerializers() { }
