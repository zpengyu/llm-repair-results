diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
index 6d0db8734..11eb9402e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
@@ -139,18 +124,16 @@ public class NumberSerializers
      * of bridge methods.
      */
     @JacksonStdImpl
-    public final static class IntegerSerializer extends Base<Object>
+    public final static class IntegerSerializer extends Base<Integer>
     {
         public IntegerSerializer() { super(Integer.class, JsonParser.NumberType.INT ,"integer"); }
-    
         @Override
-        public void serialize(Object value, JsonGenerator gen, SerializerProvider provider) throws IOException {
-            gen.writeNumber(((Integer) value).intValue());
+        public void serialize(Integer value, JsonGenerator gen, SerializerProvider provider) throws IOException {
+            gen.writeNumber(value.intValue());
         }
-        
         // IMPORTANT: copied from `NonTypedScalarSerializerBase`
         @Override
-        public void serializeWithType(Object value, JsonGenerator gen,
+        public void serializeWithType(Integer value, JsonGenerator gen,
                 SerializerProvider provider, TypeSerializer typeSer) throws IOException {
             // no type info, just regular serialization
             serialize(value, gen, provider);            
