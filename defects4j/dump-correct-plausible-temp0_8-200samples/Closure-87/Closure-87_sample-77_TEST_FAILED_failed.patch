diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index 17a02960..20e4b9f4 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -516,7 +516,7 @@ public class PeepholeSubstituteAlternateSyntax
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
-  private boolean isFoldableExpressBlock(Node n) {
+private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
@@ -526,10 +526,6 @@ public class PeepholeSubstituteAlternateSyntax
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
