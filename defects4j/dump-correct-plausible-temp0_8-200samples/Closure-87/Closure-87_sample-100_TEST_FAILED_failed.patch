diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index 17a02960..42e778f0 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -526,10 +526,17 @@ public class PeepholeSubstituteAlternateSyntax
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
-
+          if (maybeExpr.getType() == Token.EXPR_RESULT) {
+            Node grandChild = maybeExpr.getFirstChild();
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
-
+            if (grandChild.getType() == Token.CALL) {
+              Node child = grandChild.getFirstChild();
+              if (child.getType() == Token.GETPROP) {
+                return false;
+              }
+            }
+          }
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
