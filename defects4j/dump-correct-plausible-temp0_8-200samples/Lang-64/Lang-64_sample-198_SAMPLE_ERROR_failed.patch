diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
index 0823e77d..3b6cbbba 100644
--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -103,19 +103,10 @@ import org.apache.commons.lang.ClassUtils;
  * @version $Id$
  */
 public abstract class ValuedEnum extends Enum {
-    
-    /**
-     * Required for serialization support.
-     * 
-     * @see java.io.Serializable
-     */
+    /** Required for serialization support. */
     private static final long serialVersionUID = -7129650521543789085L;
-    
-    /**
-     * The value contained in enum.
-     */
+    /** The value contained in enum. */
     private final int iValue;
-
     /**
      * Constructor for enum item.
      *
@@ -189,10 +176,28 @@ public abstract class ValuedEnum extends Enum {
      * @param other  the object to determine the value for
      * @return the value
      */
-            // ignore - should never happen
-            // ignore - should never happen
-            // ignore - should never happen
-
+    private int getValue(Object other) {
+        try {
+            return ((Integer) getValueMethod().invoke(other, null)).intValue();
+        } catch (NoSuchMethodException ex) {
+            return iValue;
+        } catch (IllegalAccessException ex) {
+            return iValue;
+        } catch (InvocationTargetException ex) {
+            return iValue;
+        }
+    }
+    /**
+     * <p>Use reflection to get a objects value method.</p>
+     *
+     * @return the value
+     */
+    private Method getValueMethod() throws NoSuchMethodException {
+        if (iValueMethod == null) {
+            iValueMethod = getEnumClass().getMethod("getValue", null);
+        }
+        return iValueMethod;
+    }
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
      *
