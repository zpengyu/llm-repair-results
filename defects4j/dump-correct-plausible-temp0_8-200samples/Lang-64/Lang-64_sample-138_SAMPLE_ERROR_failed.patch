diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
index 0823e77d..b389b92b 100644
--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -139,7 +135,7 @@ public abstract class ValuedEnum extends Enum {
      * @return the enum object, or null if the enum does not exist
      * @throws IllegalArgumentException if the enum class is <code>null</code>
      */
-    protected static Enum getEnum(Class enumClass, int value) {
+    protected static ValuedEnum getEnum(Class enumClass, int value) {
         if (enumClass == null) {
             throw new IllegalArgumentException("The Enum Class must not be null");
         }
@@ -189,10 +182,21 @@ public abstract class ValuedEnum extends Enum {
      * @param other  the object to determine the value for
      * @return the value
      */
-            // ignore - should never happen
-            // ignore - should never happen
-            // ignore - should never happen
-
+    private static int getValue(ValuedEnum other) {
+        try {
+            Field valueField = ValuedEnum.class.getDeclaredField("iValue");
+            valueField.setAccessible(true);
+            int value = valueField.getInt(other);
+            valueField.setAccessible(false);
+            return value;
+        } catch (NoSuchFieldException ex) {
+            throw new IllegalStateException(
+                "This should not happen: NoSuchFieldException for iValue");
+        } catch (IllegalAccessException ex) {
+            throw new IllegalStateException(
+                "This should not happen: IllegalAccessException for iValue");
+        }
+    }
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
      *
