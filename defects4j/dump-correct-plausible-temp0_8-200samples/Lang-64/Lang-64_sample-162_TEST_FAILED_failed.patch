diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
index 0823e77d..a7988b5e 100644
--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -189,10 +182,35 @@ public abstract class ValuedEnum extends Enum {
      * @param other  the object to determine the value for
      * @return the value
      */
-            // ignore - should never happen
-            // ignore - should never happen
-            // ignore - should never happen
-
+    private int getValue(Object other) {
+        if (other.getClass().getName().equals(this.getClass().getName())) {
+            return ((ValuedEnum) other).iValue;
+        }
+        try {
+            return getValue(other.getClass(), other);
+        } catch (NoSuchMethodException nsm) {
+            throw new IllegalStateException("This should not happen");
+        } catch (IllegalAccessException iae) {
+            throw new IllegalStateException("This should not happen");
+        } catch (InvocationTargetException ite) {
+            throw new IllegalStateException("This should not happen");
+        }
+    }
+    /**
+     * <p>Use reflection to return an objects value.</p>
+     *
+     * @param enumClass  the class of the <code>Enum</code> to get
+     * @param other  the object to determine the value for
+     * @return the value
+     * @throws NoSuchMethodException if the method is not found
+     * @throws IllegalAccessException if the method is not accessible
+     * @throws InvocationTargetException if an error occurs
+     */
+    private static int getValue(Class enumClass, Object other) throws NoSuchMethodException, IllegalAccessException,
+            InvocationTargetException {
+        Method method = enumClass.getMethod("getValue", (Class[]) null);
+        return ((Integer) method.invoke(other, (Class[]) null)).intValue();
+    }
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
      *
