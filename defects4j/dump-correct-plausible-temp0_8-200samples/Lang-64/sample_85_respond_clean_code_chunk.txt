public abstract class ValuedEnum extends Enum implements Comparable {
    private static final long serialVersionUID = -7129650521543789085L;
    private final int iValue;
    protected ValuedEnum(String name, int value) {
        super(name);
        iValue = value;
    }
    protected static ValuedEnum getEnum(Class enumClass, int value) {
        if (enumClass == null) {
            throw new IllegalArgumentException("The Enum Class must not be null");
        }
        List list = Enum.getEnumList(enumClass);
        for (Iterator it = list.iterator(); it.hasNext();) {
            ValuedEnum enumeration = (ValuedEnum) it.next();
            if (enumeration.getValue() == value) {
                return enumeration;
            }
        }
        return null;
    }
    public final int getValue() {
        return iValue;
    }
    public int compareTo(Object other) {
        return iValue - ((ValuedEnum) other).iValue;
    }
    public String toString() {
        if (iToString == null) {
            String shortName = ClassUtils.getShortClassName(getEnumClass());
            iToString = shortName + "[" + getName() + "=" + getValue() + "]";
        }
        return iToString;
    }
}