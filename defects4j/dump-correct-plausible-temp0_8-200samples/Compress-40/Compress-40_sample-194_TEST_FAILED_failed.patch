diff --git a/src/main/java/org/apache/commons/compress/utils/BitInputStream.java b/src/main/java/org/apache/commons/compress/utils/BitInputStream.java
index 4086c8b5..a045c854 100644
--- a/src/main/java/org/apache/commons/compress/utils/BitInputStream.java
+++ b/src/main/java/org/apache/commons/compress/utils/BitInputStream.java
@@ -78,7 +78,7 @@ public class BitInputStream implements Closeable {
      *         the requested number of bits
      * @throws IOException on error
      */
-    public long readBits(final int count) throws IOException {
+        public long readBits(final int count) throws IOException {
         if (count < 0 || count > MAXIMUM_CACHE_SIZE) {
             throw new IllegalArgumentException("count must not be negative or greater than " + MAXIMUM_CACHE_SIZE);
         }
@@ -95,8 +95,7 @@ public class BitInputStream implements Closeable {
             }
             bitsCachedSize += 8;
         }
-            // bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
-
+            // bitsCachedSize >= count and left-shifting it 8 bits would cause an overflow
         final long bitsOut;
             if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
                 bitsOut = (bitsCached & MASKS[count]);
@@ -106,5 +105,4 @@ public class BitInputStream implements Closeable {
             }
             bitsCachedSize -= count;
         return bitsOut;
-    }
-}
+    }}
