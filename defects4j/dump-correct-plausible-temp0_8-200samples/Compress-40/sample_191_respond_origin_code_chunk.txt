    public long readBits(final int count) throws IOException {
        if (count < 0 || count > MAXIMUM_CACHE_SIZE) {
            throw new IllegalArgumentException("count must not be negative or greater than " + MAXIMUM_CACHE_SIZE);
        }
        while (bitsCachedSize < count) {
            final long nextByte = in.read();
            if (nextByte < 0) {
                return nextByte;
            }
            bitsCached <<= 8;
            bitsCached |= nextByte;
            bitsCachedSize += 8;
        }
            // bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
        
        final long bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
        bitsCachedSize -= count;
        return bitsOut;
    }
 

