    public long readBits(final int count) throws IOException {
        if (count < 0 || count > MAXIMUM_CACHE_SIZE) {
            throw new IllegalArgumentException("count must not be negative or greater than " + MAXIMUM_CACHE_SIZE);
        }
        if (bitsCachedSize < count) {
            bitsCachedSize = 0;
            bitsCached = 0;
            int skipped = 0;
            while (skipped < count / 8) {
                final long nextByte = in.read();
                if (nextByte < 0) {
                    return nextByte;
                }
                skipped++;
            }
            while (bitsCachedSize < count) {
                final long nextByte = in.read();
                if (nextByte < 0) {
                    return nextByte;
                }
                if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
                    bitsCached |= (nextByte << bitsCachedSize);
                } else {
                    bitsCached <<= 8;
                    bitsCached |= nextByte;
                }
                bitsCachedSize += 8;
            }
        }
        
        final long bitsOut;
        if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
            bitsOut = (bitsCached & MASKS[count]);
            bitsCached >>>= count;
        } else {
            bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
        }
        bitsCachedSize -= count;
        return bitsOut;
    }
