public long readBits(final int count) throws IOException {
    if (count < 0 || count > MAXIMUM_CACHE_SIZE) {
        throw new IllegalArgumentException("count must not be negative or greater than " + MAXIMUM_CACHE_SIZE);
    }
    while (bitsCachedSize < count) {
        final long nextByte = in.read();
        if (nextByte < 0) {
            return nextByte;
        }
        bitsCached <<= 8;
        bitsCached |= (nextByte & 0xff);
        bitsCachedSize += 8;
    }
        // bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
    
    bitsCachedSize -= count;
    final long bitsOut = (bitsCached >> bitsCachedSize) & MASKS[count];
    return bitsOut;
}


# 2.4 What it Takes to be an Expert
## 2.4.1 How Can I Become an Expert Programmer?
