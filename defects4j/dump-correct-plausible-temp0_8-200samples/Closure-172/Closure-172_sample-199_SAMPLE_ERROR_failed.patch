diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index 0185298f..ec6d3309 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1658,33 +1658,11 @@ final class TypedScopeCreator implements ScopeCreator {
      * JsDoc type information, or @const with a known type,
      * or a function literal with a name we haven't seen before.
      */
-    private boolean isQualifiedNameInferred(
-        String qName, Node n, JSDocInfo info,
-        Node rhsValue, JSType valueType) {
-      if (valueType == null) {
-        return true;
-      }
-
-      // Prototypes of constructors and interfaces are always declared.
-      if (qName != null && qName.endsWith(".prototype")) {
-          return false;
-      }
-
-      boolean inferred = true;
-      if (info != null) {
-        inferred = !(info.hasType()
-            || info.hasEnumParameterType()
-            || (isConstantSymbol(info, n) && valueType != null
-                && !valueType.isUnknownType())
-            || FunctionTypeBuilder.isFunctionTypeDeclaration(info));
-      }
-
       if (inferred && rhsValue != null && rhsValue.isFunction()) {
         if (info != null) {
           return false;
         } else if (!scope.isDeclared(qName, false) &&
-            n.isUnscopedQualifiedName()) {
-
+            n.isUnscopedQualifiedName() && !n.isFromExterns()) {
           // Check if this is in a conditional block.
           // Functions assigned in conditional blocks are inferred.
           for (Node current = n.getParent();
