diff --git a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
index c700587c8..17c52f4ed 100644
--- a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
@@ -402,14 +402,24 @@ public class TokenBuffer
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
-         */
-        return this;
+        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {
+            return handleMissingStartObject(jp, ctxt);
+        }
+        return copyCurrentStructure(jp);
+    }
+    private final TokenBuffer handleMissingStartObject(JsonParser jp, DeserializationContext ctxt)
+            throws IOException
+    {
+        JsonToken t = jp.nextToken();
+        if (t == JsonToken.END_OBJECT) {
+            return this;
+        }
+        if (t != JsonToken.FIELD_NAME) {
+            return (TokenBuffer) ctxt.handleUnexpectedToken(handledType(), jp);
+        }
+        writeStartObject();
+        return deserialize(jp, ctxt);
     }
-
     @Override
     @SuppressWarnings("resource")
     public String toString()
