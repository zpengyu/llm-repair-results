diff --git a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
index c700587c8..b640f77a9 100644
--- a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
@@ -402,14 +402,19 @@ public class TokenBuffer
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
         /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
          *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
          *    to assume one did exist.
          */
-        return this;
+        boolean haveStartObject = (jp.currentToken() == JsonToken.START_OBJECT ||
+                (jp.currentToken() == JsonToken.FIELD_NAME && _mayBeJavaIdentifier(jp.currentName())));
+        if (haveStartObject) {
+            copyCurrentStructure(jp);
+            return this;
+        }
+        // no, we won't handle
+        return (TokenBuffer) ctxt.handleUnexpectedToken(handledType(), jp);
     }
-
     @Override
     @SuppressWarnings("resource")
     public String toString()
