    public void feedInput(byte[] buf, int start, int end) throws IOException
    {
        // Must not have remaining input
        if (_inputPtr < _inputEnd) {
            throw new JsonParseException(null, String.format("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr), _parserContext.getParser().getCurrentLocation());
        }
        if (end < start) {
            throw new JsonParseException(null, String.format("Input end (%d) may not be before start (%d)", end, start), _parserContext.getParser().getCurrentLocation());
        }
        // and shouldn't have been marked as end-of-input
        if (_endOfInput) {
            throw new JsonParseException(null, "Already closed, can not feed more input", _parserContext.getParser().getCurrentLocation());
        }
        // Time to update pointers first
        _currInputProcessed += _origBufferLen;

        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
        _currInputRowStart = start - (_inputEnd - _currInputRowStart);

        // And then update buffer settings
        _inputBuffer = buf;
        _inputPtr = start;
        _inputEnd = end;
        _origBufferLen = end - start;
    }
