diff --git a/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java b/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
index ff2906836..e66d408ef 100644
--- a/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
+++ b/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
@@ -139,9 +136,9 @@ public abstract class ContinuedFraction {
         while (n < maxIterations) {
             final double a = getA(n, x);
             final double b = getB(n, x);
-
-            double cN = a * hPrev + b * p0;
-            double q2 = a * q1 + b * dPrev;
+            final double deltaN = a + (b * dPrev) / cPrev;
+            double cN = deltaN * cPrev;
+            double q2 = deltaN * q1 + b;
             if (Double.isInfinite(cN) || Double.isInfinite(q2)) {
                 double scaleFactor = 1d;
                 double lastScaleFactor = 1d;
@@ -165,10 +162,7 @@ public abstract class ContinuedFraction {
                     }
                 }
             }
-
-            final double deltaN = cN / q2 / cPrev;
-            hN = cPrev * deltaN;
-
+            hN = cN / q2;
             if (Double.isInfinite(hN)) {
                 throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,
                                                x);
@@ -177,15 +171,13 @@ public abstract class ContinuedFraction {
                 throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
                                                x);
             }
-
-            if (FastMath.abs(deltaN - 1.0) < epsilon) {
+            if (FastMath.abs(hN - hPrev) < epsilon) {
                 break;
             }
-
             dPrev = q1;
-            cPrev = cN / q2;
+            cPrev = cN;
             p0 = hPrev;
-            hPrev = cN;
+            hPrev = hN;
             q1 = q2;
             n++;
         }
