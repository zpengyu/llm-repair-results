diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
index 7f269a0c..894c8e89 100644
--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
@@ -220,67 +220,74 @@ public class RandomStringUtils {
      * @throws IllegalArgumentException if {@code count} &lt; 0 or the provided chars array is empty.
      * @since 2.0
      */
-    public static String random(int count, int start, int end, boolean letters, boolean numbers,
-                                char[] chars, Random random) {
-        if (count == 0) {
-            return "";
-        } else if (count < 0) {
-            throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
+public static String random(int count, int start, int end, boolean letters, boolean numbers,
+                            char[] chars, Random random) {
+    if (count == 0) {
+        return "";
+    } else if (count < 0) {
+        throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
+    }
+    if (chars != null && chars.length == 0) {
+        throw new IllegalArgumentException("The chars array must not be empty");
+    }
+    if (start == 0 && end == 0) {
+        if (chars != null) {
+            end = chars.length;
+        } else {
+            if (!letters && !numbers) {
+                end = Integer.MAX_VALUE;
+            } else {
+                end = 'z' + 1;
+                start = ' ';
+            }
         }
-
-        if (start == 0 && end == 0) {
-                if (!letters && !numbers) {
-                    end = Integer.MAX_VALUE;
+    } else {
+        if (end <= start) {
+            throw new IllegalArgumentException("Parameter end (" + end + ") must be greater than start (" + start + ")");
+        }
+    }
+    char[] buffer = new char[count];
+    int gap = end - start;
+    while (count-- != 0) {
+        char ch;
+        if (chars == null) {
+            ch = (char) (random.nextInt(gap) + start);
+        } else {
+            ch = chars[random.nextInt(gap) + start];
+        }
+        if (letters && Character.isLetter(ch)
+                || numbers && Character.isDigit(ch)
+                || !letters && !numbers) {
+            if(ch >= 56320 && ch <= 57343) {
+                if(count == 0) {
+                    count++;
                 } else {
-                    end = 'z' + 1;
-                    start = ' ';
+                    // low surrogate, insert high surrogate after putting it in
+                    buffer[count] = ch;
+                    count--;
+                    buffer[count] = (char) (55296 + random.nextInt(128));
                 }
-        }
-
-        char[] buffer = new char[count];
-        int gap = end - start;
-
-        while (count-- != 0) {
-            char ch;
-            if (chars == null) {
-                ch = (char) (random.nextInt(gap) + start);
-            } else {
-                ch = chars[random.nextInt(gap) + start];
-            }
-            if (letters && Character.isLetter(ch)
-                    || numbers && Character.isDigit(ch)
-                    || !letters && !numbers) {
-                if(ch >= 56320 && ch <= 57343) {
-                    if(count == 0) {
-                        count++;
-                    } else {
-                        // low surrogate, insert high surrogate after putting it in
-                        buffer[count] = ch;
-                        count--;
-                        buffer[count] = (char) (55296 + random.nextInt(128));
-                    }
-                } else if(ch >= 55296 && ch <= 56191) {
-                    if(count == 0) {
-                        count++;
-                    } else {
-                        // high surrogate, insert low surrogate before putting it in
-                        buffer[count] = (char) (56320 + random.nextInt(128));
-                        count--;
-                        buffer[count] = ch;
-                    }
-                } else if(ch >= 56192 && ch <= 56319) {
-                    // private high surrogate, no effing clue, so skip it
+            } else if(ch >= 55296 && ch <= 56191) {
+                if(count == 0) {
                     count++;
                 } else {
+                    // high surrogate, insert low surrogate before putting it in
+                    buffer[count] = (char) (56320 + random.nextInt(128));
+                    count--;
                     buffer[count] = ch;
                 }
-            } else {
+            } else if(ch >= 56192 && ch <= 56319) {
+                // private high surrogate, no effing clue, so skip it
                 count++;
+            } else {
+                buffer[count] = ch;
             }
+        } else {
+            count++;
         }
-        return new String(buffer);
     }
-
+    return new String(buffer);
+}
     /**
      * <p>Creates a random string whose length is the number of characters
      * specified.</p>
