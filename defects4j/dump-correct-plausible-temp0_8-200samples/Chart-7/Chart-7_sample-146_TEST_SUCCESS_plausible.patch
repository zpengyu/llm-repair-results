diff --git a/source/org/jfree/data/time/TimePeriodValues.java b/source/org/jfree/data/time/TimePeriodValues.java
index 0a3e7a1..31ef599 100644
--- a/source/org/jfree/data/time/TimePeriodValues.java
+++ b/source/org/jfree/data/time/TimePeriodValues.java
@@ -255,11 +255,9 @@ public class TimePeriodValues extends Series implements Serializable {
      * @param index  the index of the time period.
      */
     private void updateBounds(TimePeriod period, int index) {
-        
         long start = period.getStart().getTime();
         long end = period.getEnd().getTime();
-        long middle = start + ((end - start) / 2);
-
+        long middle = start + (end - start) / 2;
         if (this.minStartIndex >= 0) {
             long minStart = getDataItem(this.minStartIndex).getPeriod()
                 .getStart().getTime();
@@ -281,13 +278,11 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.maxStartIndex = index;
         }
-        
         if (this.minMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long minMiddle = s + (e - s) / 2;
+            long minMiddle = getDataItem(this.minMiddleIndex).getPeriod()
+                .getStart().getTime()
+                + getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+                .getTime() / 2;
             if (middle < minMiddle) {
                 this.minMiddleIndex = index;           
             }
@@ -295,13 +290,11 @@ public class TimePeriodValues extends Series implements Serializable {
         else {
             this.minMiddleIndex = index;
         }
-        
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long maxMiddle = s + (e - s) / 2;
+            long maxMiddle = getDataItem(this.maxMiddleIndex).getPeriod()
+                .getStart().getTime()
+                + getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
+                .getTime() / 2;
             if (middle > maxMiddle) {
                 this.maxMiddleIndex = index;           
             }
