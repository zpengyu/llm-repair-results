diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java
index af4270610..15894ae95 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java
@@ -184,13 +184,15 @@ public class CollectionDeserializer
             }
         }
         // [databind#1043]: allow per-property allow-wrapping of single overrides:
-        // 11-Dec-2015, tatu: Should we pass basic `Collection.class`, or more refined? Mostly
-        //   comes down to "List vs Collection" I suppose... for now, pass Collection
-        Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
-                JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
+        Boolean unwrapSingle = _unwrapSingle;
+        if (unwrapSingle == null) {
+            unwrapSingle = ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY) ? Boolean.TRUE : Boolean.FALSE;
+        } else if (unwrapSingle == Boolean.TRUE) {
+            unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
+                    JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
+        }
         // also, often value deserializer is resolved here:
         JsonDeserializer<?> valueDeser = _valueDeserializer;
-        
         // May have a content converter
         valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
         final JavaType vt = _collectionType.getContentType();
