diff --git a/src/com/google/javascript/jscomp/InlineObjectLiterals.java b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
index 2f5a8e10..a4499689 100644
--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java
+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
@@ -170,10 +169,11 @@ class InlineObjectLiterals implements CompilerPass {
               && gramps.getFirstChild() == parent) {
             return false;
           }
-
           // Deleting a property has different semantics from deleting
           // a variable, so deleted properties should not be inlined.
-
+          if (gramps.isDelProp()) {
+            return false;
+          }
           // NOTE(nicksantos): This pass's object-splitting algorithm has
           // a blind spot. It assumes that if a property isn't defined on an
           // object, then the value is undefined. This is not true, because
@@ -212,7 +208,7 @@ class InlineObjectLiterals implements CompilerPass {
         // Make sure that the value is not self-referential. IOW,
         // disallow things like x = {b: x.a}.
         //
-        // TODO: Only exclude unorderable self-referential
+        // TODO(johnlenz): Only exclude unorderable self-referential
         // assignments. i.e. x = {a: x.b, b: x.a} is not orderable,
         // but x = {a: 1, b: x.a} is.
         //
