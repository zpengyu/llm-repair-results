diff --git a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
index 06ef739..a26feeb 100644
--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
@@ -115,26 +115,15 @@ public class XmlTreeBuilder extends TreeBuilder {
      */
     private void popStackToClose(Token.EndTag endTag) {
         String elName = endTag.name();
-        Element firstFound = null;
-
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
-            Element next = stack.get(pos);
-            if (next.nodeName().equals(elName)) {
-                firstFound = next;
-                break;
-            }
-        }
-        if (firstFound == null)
-            return; // not found, skip
-
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
-            Element next = stack.get(pos);
-            stack.remove(pos);
-            if (next == firstFound)
-                break;
+        // The stack must not be empty (that would be an end tag after the root end tag).
+        Element last = stack.pop();
+        assert last.nodeName().equals(elName);
+        // The stack either empty, or the current element is not the element we're trying to close (it's a
+        // stack of open elements that can be implicitly closed).
+        while (!stack.isEmpty() && !last.nodeName().equals(elName)) {
+            last = stack.pop();
         }
     }
-
     List<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors, ParseSettings settings) {
         initialiseParse(new StringReader(inputFragment), baseUri, errors, settings);
         runParser();
