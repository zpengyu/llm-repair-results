diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 34ecc5ac..d9930bc4 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -146,10 +141,34 @@ public class TarUtils {
             result = (result << 3) + (currentByte - '0'); // convert from ASCII
             // CheckStyle:MagicNumber ON
         }
-
         return result;
     }
-
+    private static String exceptionMessage(final byte[] buffer, final int offset, final int length, final int errorOffset, final byte errorByte){
+        final StringBuilder msg = new StringBuilder("Failed to parse octal number");
+        if (length < 100){
+            msg.append(" at index ");
+            msg.append(errorOffset);
+            msg.append(" - \"");
+            msg.append(new String(buffer, offset, length, StandardCharsets.UTF_8));
+            msg.append("\"");
+        }else{
+            final int half = length / 2;
+            msg.append(" - \"");
+            msg.append(new String(buffer, offset, half, StandardCharsets.UTF_8));
+            msg.append("\"...\"");
+            msg.append(new String(buffer, offset + half, length - half, StandardCharsets.UTF_8));
+            msg.append("\"");
+        }
+        msg.append(" invalid char ");
+        if ((errorByte >= ' ') && (errorByte < 127)){
+            msg.append('\'');
+            msg.append((char) errorByte);
+            msg.append('\'');
+        }else{
+            msg.append(Byte.toString(errorByte));
+        }
+        return msg.toString();
+    }
     /** 
      * Compute the value contained in a byte buffer.  If the most
      * significant bit of the first byte in the buffer is set, this
