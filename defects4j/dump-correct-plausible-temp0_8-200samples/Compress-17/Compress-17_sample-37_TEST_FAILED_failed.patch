diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 34ecc5ac..71b59500 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -143,13 +138,23 @@ public class TarUtils {
                 throw new IllegalArgumentException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
+            if (result >= 0x20000000000000L) { // [Java8] Magic number
+                // CheckStyle:MagicNumber ON
+                // we are going to multiply by 8 and add another digit - overflow is only possible if top 3 bits are 1
+                if (result >= 0x40000000000000L) {
+                    // top 3 bits are 1 - this is definitely going to overflow now or later
+                    throw new NumberFormatException();
+                }
+                // top 3 bits are 0 - this might be ok
+                if (currentByte > '3') { // [Java8] Magic number
+                    // digits 8 and 9 are definitely going to cause overflow
+                    throw new NumberFormatException();
+                }
+            }
             result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
         }
-
         return result;
     }
-
     /** 
      * Compute the value contained in a byte buffer.  If the most
      * significant bit of the first byte in the buffer is set, this
