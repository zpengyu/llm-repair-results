    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
        long    result = 0;
        int     end = offset + length;
        int     start = offset;
        if (length < 2) {
            throw new IllegalArgumentException("Length "+length+" must be at least 2");
        }
        if (buffer[start] == ' ') {
            throw new IllegalArgumentException("Leading spaces are not allowed");
        }
        while (start < end) {
            final byte currentByte = buffer[start];
            if (currentByte == ' '){
                break;
            }
            if (currentByte < '0' || currentByte > '7'){
                throw new IllegalArgumentException(
                        exceptionMessage(buffer, offset, length, start, currentByte));
            }
            result = (result << 3) + (currentByte - '0'); // convert from ASCII
            start++;
        }
        // Must have trailing NUL or space
        byte trailer;
        if (start == end) {
            throw new IllegalArgumentException(
                    exceptionMessage(buffer, offset, length, start-1, trailer));
        }
        trailer = buffer[end-1];
        if (trailer == ' ') {
            trailer = 0;
        }
        if (trailer != 0) {
            throw new IllegalArgumentException(
                    exceptionMessage(buffer, offset, length, end-1, trailer));
        }
        return result;
    }