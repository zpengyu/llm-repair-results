diff --git a/src/com/google/javascript/jscomp/ScopedAliases.java b/src/com/google/javascript/jscomp/ScopedAliases.java
index 0470cda2..98c12b28 100644
--- a/src/com/google/javascript/jscomp/ScopedAliases.java
+++ b/src/com/google/javascript/jscomp/ScopedAliases.java
@@ -276,7 +276,6 @@ class ScopedAliases implements HotSwapCompilerPass {
         int type = n.getType();
         Node parent = n.getParent();
         if (parent.isVar()) {
-          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
           String name = n.getString();
           Var aliasVar = scope.getVar(name);
           aliases.put(name, aliasVar);
@@ -288,10 +286,6 @@ class ScopedAliases implements HotSwapCompilerPass {
           // do nothing.
           // Parameters of the scope function also get a BAD_PARAMETERS
           // error.
-        } else {
-          // TODO(robbyw): Support using locals for private variables.
-          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
-        }
         }
       }
     }
