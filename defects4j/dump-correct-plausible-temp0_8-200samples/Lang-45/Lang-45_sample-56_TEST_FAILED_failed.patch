diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java
index 03aaa20b..13e2ba96 100644
--- a/src/java/org/apache/commons/lang/WordUtils.java
+++ b/src/java/org/apache/commons/lang/WordUtils.java
@@ -602,43 +602,31 @@ public class WordUtils {
      * @return the abbreviated String.
      * @since 2.4
      */
-    public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
-        // initial parameter checks
-        if (str == null) {
-            return null;
-        }
-        if (str.length() == 0) {
-            return StringUtils.EMPTY;
-        }
-
-        // if the lower value is greater than the length of the string,
-        // set to the length of the string
-        // if the upper value is -1 (i.e. no limit) or is greater
-        // than the length of the string, set to the length of the string
-        if (upper == -1 || upper > str.length()) {
-            upper = str.length();
-        }
-        // if upper is less than lower, raise it to lower
-        if (upper < lower) {
-            upper = lower;
-        }
-
-        StringBuffer result = new StringBuffer();
-        int index = StringUtils.indexOf(str, " ", lower);
-        if (index == -1) {
-            result.append(str.substring(0, upper));
-            // only if abbreviation has occured do we append the appendToEnd value
-            if (upper != str.length()) {
-                result.append(StringUtils.defaultString(appendToEnd));
-            }
-        } else if (index > upper) {
-            result.append(str.substring(0, upper));
-            result.append(StringUtils.defaultString(appendToEnd));
-        } else {
-            result.append(str.substring(0, index));
-            result.append(StringUtils.defaultString(appendToEnd));
-        }
-        return result.toString();
+public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
+    if (str == null) {
+        return null;
     }
-
+    if (str.length() == 0) {
+        return "";
+    }
+    if (lower > str.length()) {
+        return str + appendToEnd;
+    }
+    if (upper < 0 || upper > str.length()) {
+        upper = str.length();
+    }
+    if (upper < lower) {
+        lower = upper;
+    }
+    StringBuffer result = new StringBuffer();
+    int index = str.indexOf(' ', lower);
+    result.append(str.substring(0, upper));
+    if (index != -1) {
+        result.append(str.substring(index));
+    }
+    if (result.length() - appendToEnd.length() > str.length()) {
+        result.append(appendToEnd);
+    }
+    return result.toString();
+}
 }
