diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java
index 03aaa20b..6d19e797 100644
--- a/src/java/org/apache/commons/lang/WordUtils.java
+++ b/src/java/org/apache/commons/lang/WordUtils.java
@@ -602,15 +602,14 @@ public class WordUtils {
      * @return the abbreviated String.
      * @since 2.4
      */
-    public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
+public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
         // initial parameter checks
         if (str == null) {
             return null;
         }
         if (str.length() == 0) {
-            return StringUtils.EMPTY;
+            return "";
         }
-
         // if the lower value is greater than the length of the string,
         // set to the length of the string
         // if the upper value is -1 (i.e. no limit) or is greater
@@ -622,21 +621,20 @@ public class WordUtils {
         if (upper < lower) {
             upper = lower;
         }
-
         StringBuffer result = new StringBuffer();
-        int index = StringUtils.indexOf(str, " ", lower);
+        int index = indexOf(str, " ", lower);
         if (index == -1) {
             result.append(str.substring(0, upper));
             // only if abbreviation has occured do we append the appendToEnd value
             if (upper != str.length()) {
-                result.append(StringUtils.defaultString(appendToEnd));
+                result.append(defaultString(appendToEnd));
             }
         } else if (index > upper) {
             result.append(str.substring(0, upper));
-            result.append(StringUtils.defaultString(appendToEnd));
+            result.append(defaultString(appendToEnd));
         } else {
             result.append(str.substring(0, index));
-            result.append(StringUtils.defaultString(appendToEnd));
+            result.append(defaultString(appendToEnd));
         }
         return result.toString();
     }
