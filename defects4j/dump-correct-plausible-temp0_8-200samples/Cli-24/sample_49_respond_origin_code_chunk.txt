    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                             int nextLineTabStop, String text)
    {
        int pos = findWrapPos(text, width, 0);

        if (pos == -1)
        {
            sb.append(rtrim(text));

            return sb;
        }
        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);

        if (nextLineTabStop >= width)
        {
            // stops infinite loop happening
            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
                                            "- no room for the description");
        }

        // all following lines must be padded with nextLineTabStop space 
        // characters
        final String padding = createPadding(nextLineTabStop);

        while (true)
        {
            text = padding + text.substring(pos).trim();
            pos = findWrapPos(text, width, 0);

            if (pos == -1)
            {
                sb.append(text);

                return sb;
            }
            
            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
            {
                pos = width;
            }
            
            // Check added to adjust position if the last word is to big to fit in the current line.
            if (pos > 0 && text.charAt(pos) == ' ' && pos < text.length() && text.charAt(pos+1) != ' ') {
                pos = pos + findWrapPos(text.substring(pos).trim(), width, 0);
            }
            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
        }
    }
