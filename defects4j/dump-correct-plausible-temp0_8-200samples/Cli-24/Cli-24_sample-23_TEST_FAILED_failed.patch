diff --git a/src/java/org/apache/commons/cli/HelpFormatter.java b/src/java/org/apache/commons/cli/HelpFormatter.java
index 972d49a..669739b 100644
--- a/src/java/org/apache/commons/cli/HelpFormatter.java
+++ b/src/java/org/apache/commons/cli/HelpFormatter.java
@@ -809,48 +809,41 @@ public class HelpFormatter
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
-        }
-
-        // all following lines must be padded with nextLineTabStop space
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
+        if (text.length() >= width) {
+            int pos = findWrapPos(text, width, 0);
             if (pos == -1)
             {
-                sb.append(text);
-
+                sb.append(rtrim(text));
                 return sb;
             }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            if (nextLineTabStop >= width)
             {
-                pos = width;
+                // stops infinite loop happening
+                throw new IllegalStateException("Total width is less than the width of the argument and indent " +
+                                                "- no room for the description");
+            }
+            // all following lines must be padded with nextLineTabStop space 
+            // characters
+            final String padding = createPadding(nextLineTabStop);
+            while (true)
+            {
+                text = padding + text.substring(pos).trim();
+                pos = findWrapPos(text, width, 0);
+                if (pos == -1)
+                {
+                    sb.append(text);
+                    return sb;
+                }
+                if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+                {
+                    pos = width;
+                }
+                sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
             }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
+        return sb;
     }
-
     /**
      * Finds the next text wrap position after <code>startPos</code> for the
      * text in <code>text</code> with the column width <code>width</code>.
