diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
index 5287bdf95..d63106180 100644
--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
@@ -324,25 +324,22 @@ class SimplexTableau implements Serializable {
      * Removes the phase 1 objective function, positive cost non-artificial variables,
      * and the non-basic artificial variables from this tableau.
      */
-    protected void dropPhase1Objective() {
+protected void dropPhase1Objective() {
         if (getNumObjectiveFunctions() == 1) {
             return;
         }
-
         List<Integer> columnsToDrop = new ArrayList<Integer>();
         columnsToDrop.add(0);
-
         // positive cost non-artificial variables
-        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
+        for (int i = getNumObjectiveFunctions(); i < getNumObjectiveFunctions() + getOriginalNumDecisionVariables(); i++) {
             final double entry = tableau.getEntry(0, i);
             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                 columnsToDrop.add(i);
             }
         }
-
         // non-basic artificial variables
         for (int i = 0; i < getNumArtificialVariables(); i++) {
-          int col = i + getArtificialVariableOffset();
+          int col = getNumObjectiveFunctions() + getOriginalNumDecisionVariables() + i;
           if (getBasicRow(col) == null) {
             columnsToDrop.add(col);
           }
