diff --git a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java
index 25d0931..3d05454 100644
--- a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java
+++ b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java
@@ -29,37 +29,13 @@ import org.apache.commons.jxpath.ri.model.NodePointer;
  * @author Dmitri Plotnikov
  * @version $Revision$ $Date$
  */
-public class AttributeContext extends EvalContext {
-
-    private NodeTest nodeTest;
-    private boolean setStarted = false;
-    private NodeIterator iterator;
-    private NodePointer currentNodePointer;
-
-    /**
-     * @param parentContext represents the previous step on the path
-     * @param nodeTest is the name of the attribute we are looking for
-     */
-    public AttributeContext(EvalContext parentContext, NodeTest nodeTest) {
-        super(parentContext);
-        this.nodeTest = nodeTest;
-    }
-
-    public NodePointer getCurrentNodePointer() {
-        return currentNodePointer;
-    }
-
-    public void reset() {
-        setStarted = false;
-        iterator = null;
-        super.reset();
-    }
-
     public boolean setPosition(int position) {
         if (position < getCurrentPosition()) {
             reset();
         }
-
+        if (getCurrentPosition() == position) {
+            return true;
+        }
         while (getCurrentPosition() < position) {
             if (!nextNode()) {
                 return false;
@@ -88,4 +63,3 @@ public class AttributeContext extends EvalContext {
         currentNodePointer = iterator.getNodePointer();
         return true;
     }
\ No newline at end of file
-}
