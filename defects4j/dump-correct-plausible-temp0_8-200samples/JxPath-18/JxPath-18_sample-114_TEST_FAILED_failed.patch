diff --git a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java
index 25d0931..4054eec 100644
--- a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java
+++ b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java
@@ -30,12 +30,11 @@ import org.apache.commons.jxpath.ri.model.NodePointer;
  * @version $Revision$ $Date$
  */
 public class AttributeContext extends EvalContext {
-
     private NodeTest nodeTest;
     private boolean setStarted = false;
-    private NodeIterator iterator;
     private NodePointer currentNodePointer;
-
+    private NodeIterator iterator;
+    private int currentPosition = 0;
     /**
      * @param parentContext represents the previous step on the path
      * @param nodeTest is the name of the attribute we are looking for
@@ -54,22 +51,18 @@ public class AttributeContext extends EvalContext {
         iterator = null;
         super.reset();
     }
-
     public boolean setPosition(int position) {
-        if (position < getCurrentPosition()) {
+        if (position < currentPosition) {
             reset();
         }
-
-        while (getCurrentPosition() < position) {
+        while (currentPosition < position) {
             if (!nextNode()) {
                 return false;
             }
         }
         return true;
     }
-
     public boolean nextNode() {
-        super.setPosition(getCurrentPosition() + 1);
         if (!setStarted) {
             setStarted = true;
             if (!(nodeTest instanceof NodeNameTest)) {
@@ -85,6 +78,7 @@ public class AttributeContext extends EvalContext {
         if (!iterator.setPosition(iterator.getPosition() + 1)) {
             return false;
         }
+        currentPosition++;
         currentNodePointer = iterator.getNodePointer();
         return true;
     }
