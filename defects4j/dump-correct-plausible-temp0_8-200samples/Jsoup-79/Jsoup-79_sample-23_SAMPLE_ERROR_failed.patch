diff --git a/src/main/java/org/jsoup/nodes/LeafNode.java b/src/main/java/org/jsoup/nodes/LeafNode.java
index 0e068b5..9fe5fc0 100644
--- a/src/main/java/org/jsoup/nodes/LeafNode.java
+++ b/src/main/java/org/jsoup/nodes/LeafNode.java
@@ -5,85 +5,66 @@ import org.jsoup.helper.Validate;
 import java.util.List;
 
 abstract class LeafNode extends Node {
-
-    Object value; // either a string value, or an attribute map (in the rare case multiple attributes are set)
-
+    Attributes attributes = null;
+    String baseUri;
+    String coreValue;
     protected final boolean hasAttributes() {
-        return value instanceof Attributes;
+        return attributes != null;
     }
-
     @Override
     public final Attributes attributes() {
         ensureAttributes();
-        return (Attributes) value;
+        return attributes;
     }
-
     private void ensureAttributes() {
         if (!hasAttributes()) {
-            Object coreValue = value;
-            Attributes attributes = new Attributes();
-            value = attributes;
-            if (coreValue != null)
-                attributes.put(nodeName(), (String) coreValue);
+            attributes = new Attributes();
         }
     }
-
     String coreValue() {
-        return attr(nodeName());
+        return coreValue;
     }
-
     void coreValue(String value) {
-        attr(nodeName(), value);
+        coreValue = value;
     }
-
     @Override
     public String attr(String key) {
-        Validate.notNull(key);
-        if (!hasAttributes()) {
-            return key.equals(nodeName()) ? (String) value : EmptyString;
-        }
-        return super.attr(key);
+        ensureAttributes();
+        return attributes.hasKey(key) ? attributes.get(key) : baseUri;
     }
-
     @Override
     public Node attr(String key, String value) {
-        if (!hasAttributes() && key.equals(nodeName())) {
-            this.value = value;
-        } else {
-            ensureAttributes();
-            super.attr(key, value);
-        }
+        ensureAttributes();
+        attributes.put(key, value);
         return this;
     }
-
     @Override
     public boolean hasAttr(String key) {
         ensureAttributes();
-        return super.hasAttr(key);
+        return attributes.hasKey(key);
     }
-
     @Override
     public Node removeAttr(String key) {
         ensureAttributes();
-        return super.removeAttr(key);
+        attributes.remove(key);
+        return this;
     }
-
     @Override
     public String absUrl(String key) {
         ensureAttributes();
-        return super.absUrl(key);
+        Validate.notEmpty(key);
+        if (!hasAttr(key))
+            return "";
+        return attributes.absUrl(key);
     }
-
     @Override
     public String baseUri() {
-        return hasParent() ? parent().baseUri() : "";
+        return baseUri;
     }
-
     @Override
     protected void doSetBaseUri(String baseUri) {
-        // noop
+        this.baseUri = baseUri;
     }
-
     @Override
     public int childNodeSize() {
         return 0;
