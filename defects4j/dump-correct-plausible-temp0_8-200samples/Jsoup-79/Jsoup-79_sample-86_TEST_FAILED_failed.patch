diff --git a/src/main/java/org/jsoup/nodes/LeafNode.java b/src/main/java/org/jsoup/nodes/LeafNode.java
index 0e068b5..a5ba050 100644
--- a/src/main/java/org/jsoup/nodes/LeafNode.java
+++ b/src/main/java/org/jsoup/nodes/LeafNode.java
@@ -5,29 +5,24 @@ import org.jsoup.helper.Validate;
 import java.util.List;
 
 abstract class LeafNode extends Node {
-
+    private Attributes attributes;
     Object value; // either a string value, or an attribute map (in the rare case multiple attributes are set)
-
+    private static final String HtmlText = "html text";
     protected final boolean hasAttributes() {
-        return value instanceof Attributes;
+        return attributes != null;
     }
-
     @Override
     public final Attributes attributes() {
         ensureAttributes();
-        return (Attributes) value;
+        return attributes;
     }
-
     private void ensureAttributes() {
-        if (!hasAttributes()) {
-            Object coreValue = value;
-            Attributes attributes = new Attributes();
-            value = attributes;
-            if (coreValue != null)
-                attributes.put(nodeName(), (String) coreValue);
+        if (attributes == null) {
+            attributes = new Attributes();
+            if (value != null)
+                attributes.put(nodeName(), (String) value);
         }
     }
-
     String coreValue() {
         return attr(nodeName());
     }
@@ -44,18 +37,12 @@ abstract class LeafNode extends Node {
         }
         return super.attr(key);
     }
-
     @Override
     public Node attr(String key, String value) {
-        if (!hasAttributes() && key.equals(nodeName())) {
-            this.value = value;
-        } else {
-            ensureAttributes();
-            super.attr(key, value);
-        }
+        ensureAttributes();
+        super.attr(key, value);
         return this;
     }
-
     @Override
     public boolean hasAttr(String key) {
         ensureAttributes();
