diff --git a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
index 98e6912c..f6cf4807 100644
--- a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
+++ b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
@@ -200,13 +200,12 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
     }
 
     //-----------------------------------------------------------------------
-    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
+     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
@@ -214,11 +213,20 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
+        }
+        long instant;
+        if (fieldIndex == 0) {
+            // add to field 0, 1, or 2
+            // cannot add to months as may change year, so add to milliseconds
+            instant = iChronology.getDateTimeMillis(values[0], values[1], values[2], 0, 0, 0, 0);
+            instant = iChronology.monthOfYear().add(instant, valueToAdd);
         } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+            // add to field 4, 5, 6, or 7
+            instant = iChronology.getDateTimeMillis(values[0], values[1], values[2], values[3], values[4], values[5], values[6]);
+            instant = iChronology.millisOfDay().add(instant, valueToAdd);
         }
+        return iChronology.get(partial, instant);
     }
-
     //-----------------------------------------------------------------------
     /**
      * Add to the Month component of the specified time instant
