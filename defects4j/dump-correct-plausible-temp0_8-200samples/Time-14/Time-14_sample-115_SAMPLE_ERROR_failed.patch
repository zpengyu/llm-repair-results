diff --git a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
index 98e6912c..c7d41bf9 100644
--- a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
+++ b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
@@ -201,12 +201,10 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
 
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
+        // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
@@ -214,11 +212,17 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
-        } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
         }
+        long instant = 0L;
+        for (int i = 0, isize = partial.size(); i < isize; i++) {
+            if (partial.getFieldType(i) == this) {
+                instant = set(instant, values[i] + valueToAdd);
+            } else {
+                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+            }
+        }
+        return iChronology.get(partial, instant);
     }
-
     //-----------------------------------------------------------------------
     /**
      * Add to the Month component of the specified time instant
