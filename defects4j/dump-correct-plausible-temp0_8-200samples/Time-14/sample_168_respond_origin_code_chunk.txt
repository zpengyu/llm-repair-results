    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
        // overridden as superclass algorithm can't handle
        // 2004-02-29 + 48 months -> 2008-02-29 type dates
        if (valueToAdd == 0) {
            return values;
        }
        int target = 0;
        if (partial.size() > 0) {
            target = partial.get(0);
        }
        int current = values[fieldIndex];
        if (current > 28 && target == 2) {
            int lastDays = iChronology.getDaysInYearMonth(target);
            if (current > lastDays) {
                // Current date is Feb 30th or 31st, add to this
                // year's Feb last day.
                current = lastDays;
            }
        }
        // month is largest field and being added to, such as month-day
        if (DateTimeUtils.isContiguous(partial)) {
            long instant = 0L;
            for (int i = 0, isize = partial.size(); i < isize; i++) {
                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
            }
            instant = add(instant, valueToAdd);
            return iChronology.get(partial, instant);
        } else {
            return super.add(partial, fieldIndex, values, valueToAdd);
        }
    }

