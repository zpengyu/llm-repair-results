diff --git a/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java b/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
index f07c1b0c3..a17bc4afb 100644
--- a/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
+++ b/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
@@ -58,9 +56,7 @@ public class BrentOptimizer extends AbstractUnivariateRealOptimizer {
     }
     public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
         clearResult();
-        return localMin(getGoalType() == GoalType.MINIMIZE,
-                        f, goalType, min, startValue, max,
-                        getRelativeAccuracy(), getAbsoluteAccuracy());
+        return localMin(getGoalType() == GoalType.MINIMIZE, f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy());
     }
     public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
         return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));
@@ -90,11 +85,7 @@ public class BrentOptimizer extends AbstractUnivariateRealOptimizer {
      * @throws FunctionEvaluationException if an error occurs evaluating
      * the function.
      */
-    private double localMin(boolean isMinim,
-                            UnivariateRealFunction f,
-                            GoalType goalType,
-                            double lo, double mid, double hi,
-                            double eps, double t)
+    private double localMin(boolean isMinim, UnivariateRealFunction f, GoalType goalType, double lo, double mid, double hi, double eps, double t)
         throws MaxIterationsExceededException, FunctionEvaluationException {
         if (eps <= 0) {
             throw new NotStrictlyPositiveException(eps);
