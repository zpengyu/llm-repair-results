diff --git a/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java b/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
index f07c1b0c3..430f48ed4 100644
--- a/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
+++ b/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
@@ -56,16 +54,6 @@ public class BrentOptimizer extends AbstractUnivariateRealOptimizer {
         throws MaxIterationsExceededException, FunctionEvaluationException {
         throw new UnsupportedOperationException();
     }
-    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
-        clearResult();
-        return localMin(getGoalType() == GoalType.MINIMIZE,
-                        f, goalType, min, startValue, max,
-                        getRelativeAccuracy(), getAbsoluteAccuracy());
-    }
-    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
-        return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));
-    }
-
     /**
      * Find the minimum of the function within the interval {@code (lo, hi)}.
      *
@@ -242,4 +219,13 @@ public class BrentOptimizer extends AbstractUnivariateRealOptimizer {
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
+    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
+        clearResult();
+        return localMin(getGoalType() == GoalType.MINIMIZE,
+                        f, goalType, min, startValue, max,
+                        getRelativeAccuracy(), getAbsoluteAccuracy());
+    }
+    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
+        return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));
+    }
 }
\ No newline at end of file
