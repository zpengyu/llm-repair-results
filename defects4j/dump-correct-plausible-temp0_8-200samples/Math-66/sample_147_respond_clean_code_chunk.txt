import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.MaxEval;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.nonlinear.scalar.GoalType;
import org.apache.commons.math3.optim.univariate.BrentOptimizer;
import org.apache.commons.math3.optim.univariate.SearchInterval;
import org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction;
import org.apache.commons.math3.optim.univariate.UnivariatePointValuePair;
public double optimize(final UnivariateFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
    UnivariateObjectiveFunction objFun = new UnivariateObjectiveFunction(f);
    BrentOptimizer optimizer = new BrentOptimizer(getRelativeAccuracy(), getAbsoluteAccuracy());
    UnivariatePointValuePair searchResult = optimizer.optimize(objFun, goalType, min, max, min + GOLDEN_SECTION * (max - min));
    return searchResult.getPoint();
}