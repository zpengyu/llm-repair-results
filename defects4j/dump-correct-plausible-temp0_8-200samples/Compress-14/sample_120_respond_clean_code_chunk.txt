    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
        long    result = 0;
        int     end = offset + length;
        int     start = offset;
        if (length < 2){
            throw new IllegalArgumentException("Length "+length+" must be at least 2");
        }
        // Skip leading spaces
        while (start < end){
            if (buffer[start] == ' '){
                start++;
            } else {
                break;
            }
        }
        // Must have trailing NUL or space
        byte trailer;
        trailer = buffer[end-1];
        if (trailer == 0 || trailer == ' '){
            end--;
        } else {
            throw new IllegalArgumentException(
                    exceptionMessage(buffer, offset, length, end-1, trailer));
        }
        // May have additional NUL or space
        trailer = buffer[end-1];
        if (trailer == 0 || trailer == ' '){
            end--;
        }
        for ( ;start < end; start++) {
            final byte currentByte = buffer[start];
            // CheckStyle:MagicNumber OFF
            if (currentByte < '0' || currentByte > '7'){
                throw new IllegalArgumentException(
                        exceptionMessage(buffer, offset, length, start, currentByte));
            }
            result = (result << 3) + (currentByte - '0'); // convert from ASCII
            // CheckStyle:MagicNumber ON
        }
        return result;
    }
1. [D. Biswas, et al., “DeepBugs: Identifying and repairing bugs in deep learning models,” arXiv:1805.10829, 2018.](https://arxiv.org/abs/1805.10829)
2. [C. Xu and M. R. Lyu, “Neural network-based fault localization,” in Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering, ser. ASE ’19. New York, NY, USA: ACM, 2019, pp. 633–644.](https://doi.org/10.1145/3324884.3324900)
3. [C. Xu, Y. Liu, H. Tong, M. R. Lyu, and J. Ren, “NeuralNLPFL: A neural network based approach for fault localization,” in Proceedings of the 13th International Conference on Predictive Models in Software Engineering, ser. PROMISE’19, New York, NY, USA, 2019, pp. 35–39.](https://doi.org/10.1145/3324884.3324900)