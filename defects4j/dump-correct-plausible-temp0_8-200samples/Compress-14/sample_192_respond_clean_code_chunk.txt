    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
        long    result = 0;
        int     end = offset + length;
        int     start = offset;
        if (length < 2) {
            throw new IllegalArgumentException("Length " + length + " must be at least 2");
        }
        if (buffer[start] == ' ' || buffer[start] == '\0') {
            start++;
        }
        if (buffer[start] == ' ' || buffer[start] == '\0') {
            start++;
        }
        while (start < end) {
            final byte currentByte = buffer[start++];
            if (currentByte < '0' || currentByte > '7') {
                if (currentByte == ' ' || currentByte == '\0') {
                    break;
                }
                throw new IllegalArgumentException(
                        exceptionMessage(buffer, offset, length, start - 1, currentByte));
            }
            result = (result << 3) + (currentByte - '0'); // convert from ASCII
        }
        return result;
    }