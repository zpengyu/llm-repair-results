diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 121012d0..baabb254 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -57,14 +57,12 @@ public class TarUtils {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
-        if (length < 2){
+        if (length < 2) {
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
         boolean allNUL = true;
-        for (int i = start; i < end; i++){
-            if (buffer[i] != 0){
+        for (int i = start; i < end; i++) {
+            if (buffer[i] != 0) {
                 allNUL = false;
                 break;
             }
@@ -72,10 +70,9 @@ public class TarUtils {
         if (allNUL) {
             return 0L;
         }
-
         // Skip leading spaces
-        while (start < end){
-            if (buffer[start] == ' '){
+        while (start < end) {
+            if (buffer[start] == ' ') {
                 start++;
             } else {
                 break;
@@ -85,7 +81,7 @@ public class TarUtils {
         // Must have trailing NUL or space
         byte trailer;
         trailer = buffer[end-1];
-        if (trailer == 0 || trailer == ' '){
+        if (trailer == 0 || trailer == ' ') {
             end--;
         } else {
             throw new IllegalArgumentException(
@@ -93,14 +89,13 @@ public class TarUtils {
         }
         // May have additional NUL or space
         trailer = buffer[end-1];
-        if (trailer == 0 || trailer == ' '){
+        if (trailer == 0 || trailer == ' ') {
             end--;
         }
-
         for ( ;start < end; start++) {
             final byte currentByte = buffer[start];
             // CheckStyle:MagicNumber OFF
-            if (currentByte < '0' || currentByte > '7'){
+            if (currentByte < '0' || currentByte > '7') {
                 throw new IllegalArgumentException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
