diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 121012d0..77079a6d 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -53,7 +53,7 @@ public class TarUtils {
      * @return The long value of the octal string.
      * @throws IllegalArgumentException if the trailing space/NUL is missing or if a invalid byte is detected.
      */
-    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
+  public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
@@ -107,10 +102,11 @@ public class TarUtils {
             result = (result << 3) + (currentByte - '0'); // convert from ASCII
             // CheckStyle:MagicNumber ON
         }
-
+        if (end - offset >= 11) { // result > Integer.MAX_VALUE
+            throw new NumberFormatException("number too large: " + Arrays.toString(buffer));
+        }
         return result;
     }
-
     /** 
      * Compute the value contained in a byte buffer.  If the most
      * significant bit of the first byte in the buffer is set, this
