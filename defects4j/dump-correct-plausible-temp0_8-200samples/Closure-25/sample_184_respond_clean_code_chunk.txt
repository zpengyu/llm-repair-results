  private FlowScope traverseNew(Node n, FlowScope scope) {
    Node constructor = n.getFirstChild();
    scope = traverse(constructor, scope);
    JSType constructorType = constructor.getJSType();
    JSType type = null;
    if (constructorType != null) {
      constructorType = constructorType.restrictByNotNullOrUndefined();
      if (constructorType.isUnknownType()) {
        type = getNativeType(UNKNOWN_TYPE);
      } else if (constructorType instanceof FunctionType) {
          FunctionType ct = constructorType.toMaybeFunctionType();
          if (ct != null && ct.isConstructor()) {
            type = ct.getInstanceType();
          } else if (constructorType instanceof NoObjectType) {
            type = getNativeType(OBJECT_TYPE);
          }
      }
    }
    n.setJSType(type);
    for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
      scope = traverse(arg, scope);
    }
    return scope;
  }