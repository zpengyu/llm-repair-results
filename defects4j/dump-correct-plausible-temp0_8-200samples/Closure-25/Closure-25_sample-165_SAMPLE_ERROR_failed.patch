diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index dbe40e0f..d6b8463f 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1044,13 +1043,19 @@ class TypeInference
         type = getNativeType(UNKNOWN_TYPE);
       } else {
         FunctionType ct = constructorType.toMaybeFunctionType();
-        if (ct == null && constructorType instanceof FunctionType) {
-          // If constructorType is a NoObjectType, then toMaybeFunctionType will
-          // return null. But NoObjectType implements the FunctionType
-          // interface, precisely because it can validly construct objects.
-          ct = (FunctionType) constructorType;
+        if (ct == null) {
+          if (constructorType instanceof FunctionType) {
+            // If constructorType is a NoObjectType, then toMaybeFunctionType
+            // will return null. But NoObjectType implements the FunctionType
+            // interface, precisely because it can validly construct objects.
+            ct = (FunctionType) constructorType;
+          } else {
+            compiler.report(
+                JSError.make(n, CONSTRUCTOR_EXPECTED, constructorType.toString()));
+            return scope;
+          }
         }
-        if (ct != null && ct.isConstructor()) {
+        if (ct.isConstructor()) {
           type = ct.getInstanceType();
         }
       }
