diff --git a/src/java/org/apache/commons/cli/HelpFormatter.java b/src/java/org/apache/commons/cli/HelpFormatter.java
index 7f61ceb..282d19f 100644
--- a/src/java/org/apache/commons/cli/HelpFormatter.java
+++ b/src/java/org/apache/commons/cli/HelpFormatter.java
@@ -802,44 +802,28 @@ public class HelpFormatter
      *
      * @return the StringBuffer with the rendered Options contents.
      */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+    protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // all following lines must be padded with nextLineTabStop space characters
         final String padding = createPadding(nextLineTabStop);
-
-        while (true)
+        text = text.trim();
+        while (text.length() > width)
         {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            // find position of nearest whitespace character to target wrap position
+            int pos = findWrapPos(text, width, 0);
+            // handle long words that exceed the wrap point
+            if (pos == -1) {
+                sb.append(rtrim(text.substring(0, width))).append(defaultNewLine);
+                text = padding + text.substring(width);
+            } else {
+                // normal case: wrap at a whitespace character
+                sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+                text = padding + text.substring(pos).trim();
             }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
+        sb.append(text);
+        return sb;
     }
-
     /**
      * Finds the next text wrap position after <code>startPos</code> for the
      * text in <code>text</code> with the column width <code>width</code>.
