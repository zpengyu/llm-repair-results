diff --git a/src/main/java/org/jsoup/nodes/FormElement.java b/src/main/java/org/jsoup/nodes/FormElement.java
index baffcf1..c191a18 100644
--- a/src/main/java/org/jsoup/nodes/FormElement.java
+++ b/src/main/java/org/jsoup/nodes/FormElement.java
@@ -45,8 +42,9 @@ public class FormElement extends Element {
         elements.add(element);
         return this;
     }
-
-
+    public Connection submit() {
+        return submit(null);
+    }
     /**
      * Prepare to submit this form. A Connection object is created with the request set up from the form values. You
      * can then set up other options (like user-agent, timeout, cookies), then execute it.
@@ -54,25 +52,26 @@ public class FormElement extends Element {
      * @throws IllegalArgumentException if the form's absolute action URL cannot be determined. Make sure you pass the
      * document's base URI when parsing.
      */
-    public Connection submit() {
+    public Connection submit(String submitButtonName) {
+        Validate.notNull(submitButtonName);
         String action = hasAttr("action") ? absUrl("action") : baseUri();
         Validate.notEmpty(action, "Could not determine a form action URL for submit. Ensure you set a base URI when parsing.");
         Connection.Method method = attr("method").toUpperCase().equals("POST") ?
                 Connection.Method.POST : Connection.Method.GET;
-
         return Jsoup.connect(action)
-                .data(formData())
+                .data(formData(submitButtonName))
                 .method(method);
     }
-
+    public List<Connection.KeyVal> formData() {
+        return formData(null);
+    }
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
-    public List<Connection.KeyVal> formData() {
+    public List<Connection.KeyVal> formData(String submitButtonName) {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
-
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
@@ -99,6 +97,8 @@ public class FormElement extends Element {
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
+            } else if (submitButtonName != null && submitButtonName.equals(name)) {
+                data.add(HttpConnection.KeyVal.create(name, el.val().length() >  0 ? el.val() : "Submit query"));
             } else {
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
