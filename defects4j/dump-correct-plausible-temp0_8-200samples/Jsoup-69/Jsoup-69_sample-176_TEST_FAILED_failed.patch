diff --git a/src/main/java/org/jsoup/nodes/FormElement.java b/src/main/java/org/jsoup/nodes/FormElement.java
index baffcf1..136f801 100644
--- a/src/main/java/org/jsoup/nodes/FormElement.java
+++ b/src/main/java/org/jsoup/nodes/FormElement.java
@@ -16,7 +16,7 @@ import java.util.List;
  */
 public class FormElement extends Element {
     private final Elements elements = new Elements();
-
+    private final List<Connection.KeyVal> data;
     /**
      * Create a new, standalone form element.
      *
@@ -26,8 +26,8 @@ public class FormElement extends Element {
      */
     public FormElement(Tag tag, String baseUri, Attributes attributes) {
         super(tag, baseUri, attributes);
+        data = new ArrayList<>();
     }
-
     /**
      * Get the list of form control elements associated with this form.
      * @return form controls associated with this element.
@@ -71,38 +66,14 @@ public class FormElement extends Element {
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
-        ArrayList<Connection.KeyVal> data = new ArrayList<>();
-
-        // iterate the form control elements and accumulate their values
-        for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
-            String name = el.attr("name");
-            if (name.length() == 0) continue;
-            String type = el.attr("type");
-
-            if ("select".equals(el.tagName())) {
-                Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
-                    data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
-                }
-                if (!set) {
-                    Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
-                }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
-                if (el.hasAttr("checked")) {
-                    final String val = el.val().length() >  0 ? el.val() : "on";
-                    data.add(HttpConnection.KeyVal.create(name, val));
-                }
-            } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
-            }
-        }
         return data;
     }
+    public FormElement addData(Connection.KeyVal keyVal) {
+        data.add(keyVal);
+        return this;
+    }
+    public FormElement data(String key, String value) {
+        data.add(HttpConnection.KeyVal.create(key, value));
+        return this;
+    }
 }
\ No newline at end of file
