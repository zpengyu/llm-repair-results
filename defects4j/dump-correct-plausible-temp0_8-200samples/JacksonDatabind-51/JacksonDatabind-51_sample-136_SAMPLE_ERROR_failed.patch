diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
index 339362e1e..cdebc05cc 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
@@ -171,7 +171,7 @@ public abstract class TypeDeserializerBase
                  *   type in process (getting SimpleType of Map.class which will not work as expected)
                  */
                 if ((_baseType != null)
-                        && _baseType.getClass() == type.getClass()) {
+                        && (_baseType.getClass() == type.getClass())) {
                     /* 09-Aug-2015, tatu: Not sure if the second part of the check makes sense;
                      *   but it appears to check that JavaType impl class is the same which is
                      *   important for some reason?
@@ -181,7 +181,11 @@ public abstract class TypeDeserializerBase
                     //   generic type with custom type resolvers. If so, should try to retain them.
                     //  Whether this is sufficient to avoid problems remains to be seen, but for
                     //  now it should improve things.
+                    if (_baseType.isContainerType()) {
                         type = ctxt.getTypeFactory().constructSpecializedType(_baseType, type.getRawClass());
+                    } else {
+                        type = _baseType.narrowBy(type.getRawClass());
+                    }
                 }
                 deser = ctxt.findContextualValueDeserializer(type, _property);
             }
