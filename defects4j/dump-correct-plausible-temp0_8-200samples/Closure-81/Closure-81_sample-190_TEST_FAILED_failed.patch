diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java
index 32a15610..1eb76dfb 100644
--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -511,38 +511,19 @@ public class IRFactory {
 
     @Override
     Node processFunctionNode(FunctionNode functionNode) {
-      Name name = functionNode.getFunctionName();
-      Boolean isUnnamedFunction = false;
-      if (name == null) {
-        name = new Name();
-        name.setIdentifier("");
-        isUnnamedFunction = true;
-      }
       Node node = newNode(Token.FUNCTION);
-      Node newName = transform(name);
-      if (isUnnamedFunction) {
-        // Old Rhino tagged the empty name node with the line number of the
-        // declaration.
-        newName.setLineno(functionNode.getLineno());
-        // TODO(bowdidge) Mark line number of paren correctly.
-        // Same problem as below - the left paren might not be on the
-        // same line as the function keyword.
-        int lpColumn = functionNode.getAbsolutePosition() +
-            functionNode.getLp();
-        newName.setCharno(position2charno(lpColumn));
+      Name name = functionNode.getFunctionName();
+      if (name != null) {
+        node.addChildToBack(transform(name));
       }
-
-      node.addChildToBack(newName);
       Node lp = newNode(Token.LP);
       // The left paren's complicated because it's not represented by an
       // AstNode, so there's nothing that has the actual line number that it
       // appeared on.  We know the paren has to appear on the same line as the
       // function name (or else a semicolon will be inserted.)  If there's no
       // function name, assume the paren was on the same line as the function.
-      // TODO(bowdidge): Mark line number of paren correctly.
-      Name fnName = functionNode.getFunctionName();
-      if (fnName != null) {
-        lp.setLineno(fnName.getLineno());
+      if (name != null) {
+        lp.setLineno(name.getLineno());
       } else {
         lp.setLineno(functionNode.getLineno());
       }
@@ -558,9 +537,8 @@ public class IRFactory {
       Node bodyNode = transform(functionNode.getBody());
       parseDirectives(bodyNode);
       node.addChildToBack(bodyNode);
-     return node;
+      return node;
     }
-
     @Override
     Node processIfStatement(IfStatement statementNode) {
       Node node = newNode(Token.IF);
