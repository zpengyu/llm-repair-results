diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java
index 32a15610..d9155dfc 100644
--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -530,8 +530,10 @@ public class IRFactory {
         int lpColumn = functionNode.getAbsolutePosition() +
             functionNode.getLp();
         newName.setCharno(position2charno(lpColumn));
+      } else {
+        newName.setLineno(functionNode.getLineno());
+        newName.setCharno(functionNode.getAbsolutePosition());
       }
-
       node.addChildToBack(newName);
       Node lp = newNode(Token.LP);
       // The left paren's complicated because it's not represented by an
@@ -543,13 +545,13 @@ public class IRFactory {
       Name fnName = functionNode.getFunctionName();
       if (fnName != null) {
         lp.setLineno(fnName.getLineno());
+        lp.setCharno(fnName.getAbsolutePosition());
       } else {
         lp.setLineno(functionNode.getLineno());
+        int lparenCharno = functionNode.getLp() +
+            functionNode.getAbsolutePosition();
+        lp.setCharno(position2charno(lparenCharno));
       }
-      int lparenCharno = functionNode.getLp() +
-          functionNode.getAbsolutePosition();
-
-      lp.setCharno(position2charno(lparenCharno));
       for (AstNode param : functionNode.getParams()) {
         lp.addChildToBack(transform(param));
       }
@@ -558,9 +559,8 @@ public class IRFactory {
       Node bodyNode = transform(functionNode.getBody());
       parseDirectives(bodyNode);
       node.addChildToBack(bodyNode);
-     return node;
+      return node;
     }
-
     @Override
     Node processIfStatement(IfStatement statementNode) {
       Node node = newNode(Token.IF);
