diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java
index 32a15610..ad90a4dd 100644
--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -546,9 +545,20 @@ public class IRFactory {
       } else {
         lp.setLineno(functionNode.getLineno());
       }
+      // The left paren's complicated because it's not represented by an
+      // AstNode, so there's nothing that has the actual line number that it
+      // appeared on.  We know the paren has to appear on the same line as the
+      // function name (or else a semicolon will be inserted.)  If there's no
+      // function name, assume the paren was on the same line as the function.
+      // TODO(bowdidge): Mark line number of paren correctly.
+      Name fnName = functionNode.getFunctionName();
+      if (fnName != null) {
+        lp.setLineno(fnName.getLineno());
+      } else {
+        lp.setLineno(functionNode.getLineno());
+      }
       int lparenCharno = functionNode.getLp() +
           functionNode.getAbsolutePosition();
-
       lp.setCharno(position2charno(lparenCharno));
       for (AstNode param : functionNode.getParams()) {
         lp.addChildToBack(transform(param));
