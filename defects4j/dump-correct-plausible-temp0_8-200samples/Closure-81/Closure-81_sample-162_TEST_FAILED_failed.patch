diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java
index 32a15610..c8a86f9f 100644
--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -524,32 +524,20 @@ public class IRFactory {
         // Old Rhino tagged the empty name node with the line number of the
         // declaration.
         newName.setLineno(functionNode.getLineno());
-        // TODO(bowdidge) Mark line number of paren correctly.
-        // Same problem as below - the left paren might not be on the
-        // same line as the function keyword.
-        int lpColumn = functionNode.getAbsolutePosition() +
-            functionNode.getLp();
-        newName.setCharno(position2charno(lpColumn));
+      } else {
+        // The left paren's complicated because it's not represented by an
+        // AstNode, so there's nothing that has the actual line number that it
+        // appeared on.  We know the paren has to appear on the same line as the
+        // function name (or else a semicolon will be inserted.)  If there's no
+        // function name, assume the paren was on the same line as the function.
+        newName.setLineno(functionNode.getLineno());
       }
-
       node.addChildToBack(newName);
       Node lp = newNode(Token.LP);
-      // The left paren's complicated because it's not represented by an
-      // AstNode, so there's nothing that has the actual line number that it
-      // appeared on.  We know the paren has to appear on the same line as the
-      // function name (or else a semicolon will be inserted.)  If there's no
-      // function name, assume the paren was on the same line as the function.
-      // TODO(bowdidge): Mark line number of paren correctly.
-      Name fnName = functionNode.getFunctionName();
-      if (fnName != null) {
-        lp.setLineno(fnName.getLineno());
-      } else {
-        lp.setLineno(functionNode.getLineno());
-      }
-      int lparenCharno = functionNode.getLp() +
-          functionNode.getAbsolutePosition();
-
-      lp.setCharno(position2charno(lparenCharno));
+      // TODO(bowdidge) Mark line number of paren correctly.
+      int lpColumn = functionNode.getAbsolutePosition() +
+          functionNode.getLp();
+      lp.setCharno(position2charno(lpColumn));
       for (AstNode param : functionNode.getParams()) {
         lp.addChildToBack(transform(param));
       }
