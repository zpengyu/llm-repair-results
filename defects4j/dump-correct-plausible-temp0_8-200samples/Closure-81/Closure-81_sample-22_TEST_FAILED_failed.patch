diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java
index 32a15610..aa92de61 100644
--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -527,11 +527,9 @@ public class IRFactory {
         // TODO(bowdidge) Mark line number of paren correctly.
         // Same problem as below - the left paren might not be on the
         // same line as the function keyword.
-        int lpColumn = functionNode.getAbsolutePosition() +
-            functionNode.getLp();
-        newName.setCharno(position2charno(lpColumn));
+        newName.setCharno(
+            functionNode.getAbsolutePosition() + functionNode.getLp());
       }
-
       node.addChildToBack(newName);
       Node lp = newNode(Token.LP);
       // The left paren's complicated because it's not represented by an
@@ -546,10 +544,8 @@ public class IRFactory {
       } else {
         lp.setLineno(functionNode.getLineno());
       }
-      int lparenCharno = functionNode.getLp() +
-          functionNode.getAbsolutePosition();
-
-      lp.setCharno(position2charno(lparenCharno));
+      lp.setCharno(
+          functionNode.getLp() + functionNode.getAbsolutePosition());
       for (AstNode param : functionNode.getParams()) {
         lp.addChildToBack(transform(param));
       }
