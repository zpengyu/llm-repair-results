diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java
index c4ecc477..e2724b6f 100644
--- a/src/com/google/javascript/jscomp/CheckAccessControls.java
+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java
@@ -416,22 +415,21 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {
       boolean isOverride = t.inGlobalScope() &&
           parent.getType() == Token.ASSIGN &&
           parent.getFirstChild() == getprop;
-
       // Find the lowest property defined on a class with visibility
       // information.
+      JSDocInfo docInfo = null;
       if (isOverride) {
         objectType = objectType.getImplicitPrototype();
-      }
-      JSDocInfo docInfo = null;
-      for (; objectType != null;
-           objectType = objectType.getImplicitPrototype()) {
-        docInfo = objectType.getOwnPropertyJSDocInfo(propertyName);
-        if (docInfo != null &&
-            docInfo.getVisibility() != Visibility.INHERITED) {
-          break;
+        while (objectType != null) {
+          docInfo = objectType.getOwnPropertyJSDocInfo(propertyName);
+          if (docInfo != null && docInfo.getVisibility() != Visibility.INHERITED) {
+            break;
+          }
+          objectType = objectType.getImplicitPrototype();
         }
+      } else {
+        docInfo = objectType.getOwnPropertyJSDocInfo(propertyName);
       }
-
       if (objectType == null) {
         // We couldn't find a visibility modifier; assume it's public.
         return;
