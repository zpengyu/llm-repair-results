diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java
index c4ecc477..d3e9251e 100644
--- a/src/com/google/javascript/jscomp/CheckAccessControls.java
+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java
@@ -488,6 +482,19 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {
           // 3) Accessing the property from inside a subclass
           // The first two have already been checked for.
           if (currentClass == null || !currentClass.isSubtype(ownerType)) {
+            if (parent.getType() == Token.ASSIGN) {
+              if (parent.getParent().getType() == Token.EXPR_RESULT) {
+                Node grandParent = parent.getParent().getParent();
+                if (grandParent.getType() == Token.BLOCK) {
+                  Node greatGrandParent = grandParent.getParent();
+                  if (greatGrandParent.getType() == Token.FUNCTION) {
+                    if (greatGrandParent.getChildAtIndex(0) == grandParent) {
+                      return;
+                    }
+                  }
+                }
+              }
+            }
             compiler.report(
                 t.makeError(getprop,  BAD_PROTECTED_PROPERTY_ACCESS,
                     propertyName,
