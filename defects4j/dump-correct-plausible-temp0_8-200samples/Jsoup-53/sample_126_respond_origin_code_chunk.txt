    public String chompBalanced(char open, char close) {
        int start = -1;
        int end = -1;
        int depth = 0;
        char last = 0;
        Character c = null;
        Character o = new Character(open);
        Character c1 = new Character(close);
        Character esc = new Character(ESC);

        do {
            if (isEmpty()) break;
            c = consume();
            if (last == 0 || last != ESC) {
                if (c.equals(o)) {
                    depth++;
                    if (start == -1)
                        start = pos;
                }
                else if (c.equals(c1))
                    depth--;
            }

            if (depth > 0 && last != 0)
                end = pos; // don't include the outer match pair in the return
            last = c;
        } while (depth > 0);
        return (end >= 0) ? queue.substring(start, end) : "";
    }
