diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
index 152e9424e..ac93d89c4 100644
--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
@@ -82,7 +81,25 @@ public abstract class GenericMetadataSupport {
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
-
+    private List<Type> boundsOf(WildcardType wildcardType) {
+        Type[] bounds = wildcardType.getUpperBounds();
+        if (bounds.length == 0) {
+            return boundOf(Object.class);
+        }
+        return boundOf(bounds[0]);
+    }
+    private List<Type> boundOf(Type bound) {
+        if (bound == null) {
+            return boundOf(Object.class);
+        }
+        if (bound instanceof WildcardType) {
+            return boundsOf((WildcardType) bound);
+        }
+        if (bound instanceof TypeVariable) {
+            return Collections.singletonList(contextualActualTypeParameters.get(bound));
+        }
+        return Collections.singletonList(bound);
+    }
     protected void registerTypeParametersOn(TypeVariable[] typeParameters) {
         for (TypeVariable typeVariable : typeParameters) {
             registerTypeVariableIfNotPresent(typeVariable);
