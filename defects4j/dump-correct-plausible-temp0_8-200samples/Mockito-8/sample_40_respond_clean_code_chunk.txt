    protected void registerTypeVariablesOn(Type classType) {
        if (!(classType instanceof ParameterizedType)) {
            return;
        }
        ParameterizedType parameterizedType = (ParameterizedType) classType;
        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
        for (int i = 0; i < actualTypeArguments.length; i++) {
            TypeVariable typeParameter = typeParameters[i];
            Type actualTypeArgument = actualTypeArguments[i];
            if (actualTypeArgument instanceof WildcardType) {
                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
            } else if (actualTypeArgument instanceof TypeVariable) {
            	TypeVariable typeVar = (TypeVariable) actualTypeArgument;
            	TypeVariable[] tvs = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
            	for (int j = 0; j < tvs.length; j++) {
            		TypeVariable tv = tvs[j];
            		if (tv.equals(typeVar) && i != j) {
            			actualTypeArgument = actualTypeArguments[j];
            			break;
            		}
            	}
                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
            } else {
                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
            }
        }
    }