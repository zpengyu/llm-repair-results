    protected void registerTypeVariablesOn(Type classType) {
        if (!(classType instanceof ParameterizedType)) {
            return;
        }
        ParameterizedType parameterizedType = (ParameterizedType) classType;
        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
        for (int i = 0; i < actualTypeArguments.length; i++) {
            TypeVariable typeParameter = typeParameters[i];
            Type actualTypeArgument = actualTypeArguments[i];
            if (actualTypeArgument instanceof WildcardType) {
                Type[] bounds = ((WildcardType) actualTypeArgument).getUpperBounds();
                if (bounds.length == 1) {
                    actualTypeArgument = bounds[0];
                } else if (bounds.length == 0) {
                    actualTypeArgument = Object.class;
                }
            }

            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
        }
    }