diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
index 152e9424e..b3dc18e59 100644
--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
@@ -63,7 +63,7 @@ public abstract class GenericMetadataSupport {
     protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();
 
 
-    protected void registerTypeVariablesOn(Type classType) {
+     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
@@ -73,10 +73,12 @@ public abstract class GenericMetadataSupport {
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
-
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+            } else if(actualTypeArgument instanceof TypeVariable<?>) {
+            	contextualActualTypeParameters.put(typeParameter, typeParameters[i]);
+            }
+            else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
