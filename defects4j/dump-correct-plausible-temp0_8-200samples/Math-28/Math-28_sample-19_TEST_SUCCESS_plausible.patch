diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
index 5217ace34..361939db9 100644
--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
@@ -135,20 +131,22 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
-                Integer minRow = null;
-                int minIndex = tableau.getWidth();
-                for (Integer row : minRatioPositions) {
-                    int i = tableau.getNumObjectiveFunctions();
-                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                        if (row == tableau.getBasicRow(i)) {
-                            if (i < minIndex) {
-                                minIndex = i;
-                                minRow = row;
-                            }
-                        }
-                    }
-                }
-                return minRow;
+            //        if (getIterations() < (getMaxIterations() / 2)) {
+            //            Integer minRow = null;
+            //            int minIndex = tableau.getWidth();
+            //            for (Integer row : minRatioPositions) {
+            //                int i = tableau.getNumObjectiveFunctions();
+            //                for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
+            //                    if (row == tableau.getBasicRow(i)) {
+            //                        if (i < minIndex) {
+            //                            minIndex = i;
+            //                            minRow = row;
+            //                        }
+            //                    }
+            //                }
+            //            }
+            //            return minRow;
+            //        }
         }
         return minRatioPositions.get(0);
     }
