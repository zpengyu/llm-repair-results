diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java
index 42c6f0491..852239a73 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java
@@ -100,13 +100,18 @@ public final class StringCollectionDeserializer
     public JsonDeserializer<?> createContextual(DeserializationContext ctxt,
             BeanProperty property) throws JsonMappingException
     {
-        // May need to resolve types for delegate-based creators:
         JsonDeserializer<Object> delegate = null;
+        // May need to resolve types for delegate-based creators:
         if (_valueInstantiator != null) {
             // [databind#2324]: check both array-delegating and delegating
             AnnotatedWithParams delegateCreator = _valueInstantiator.getDelegateCreator();
             if (delegateCreator != null) {
                 JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());
+                if (delegateType == null) {
+                    ctxt.reportBadDefinition(_containerType,
+                            String.format("Invalid delegate-creator definition for %s: value instantiator (%s) returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'",
+                                    _containerType, _valueInstantiator.getClass().getName()));
+                }
                 delegate = findDeserializer(ctxt, delegateType, property);
             }
         }
@@ -116,7 +121,7 @@ public final class StringCollectionDeserializer
             // [databind#125]: May have a content converter
             valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
             if (valueDeser == null) {
-            // And we may also need to get deserializer for String
+                // And we may also need to get deserializer for String
                 valueDeser = ctxt.findContextualValueDeserializer(valueType, property);
             }
         } else { // if directly assigned, probably not yet contextual, so:
