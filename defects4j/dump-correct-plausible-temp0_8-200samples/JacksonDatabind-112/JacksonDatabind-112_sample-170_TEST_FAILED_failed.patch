diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java
index 42c6f0491..e896b72ff 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java
@@ -116,7 +116,7 @@ public final class StringCollectionDeserializer
             // [databind#125]: May have a content converter
             valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
             if (valueDeser == null) {
-            // And we may also need to get deserializer for String
+                // And we may also need to get deserializer for String
                 valueDeser = ctxt.findContextualValueDeserializer(valueType, property);
             }
         } else { // if directly assigned, probably not yet contextual, so:
@@ -127,8 +127,13 @@ public final class StringCollectionDeserializer
         Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
                 JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
         NullValueProvider nuller = findContentNullProvider(ctxt, property, valueDeser);
-        if (isDefaultDeserializer(valueDeser)) {
-            valueDeser = null;
+        if (valueDeser == null) {
+            valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
+            if (valueDeser == null) {
+                valueDeser = ctxt.findContextualValueDeserializer(valueType, property);
+            }
+        } else { // if directly assigned, probably not yet contextual, so:
+            valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, valueType);
         }
         return withResolved(delegate, valueDeser, nuller, unwrapSingle);
     }    
