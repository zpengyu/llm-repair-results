diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
index e8942ba4b..e6423937c 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
@@ -162,7 +162,7 @@ public abstract class TypeDeserializerBase
                     JavaType actual = _handleUnknownTypeId(ctxt, typeId);
                     if (actual == null) { // what should this be taken to mean?
                         // 17-Jan-2019, tatu: As per [databind#2221], better NOT return `null` but...
-                        return null;
+                        return _findDeserializer2(ctxt, typeId);
                     }
                     // ... would this actually work?
                     deser = ctxt.findContextualValueDeserializer(actual, _property);
@@ -197,7 +197,26 @@ public abstract class TypeDeserializerBase
         }
         return deser;
     }
-
+    protected final JsonDeserializer<Object> _findDeserializer2(DeserializationContext ctxt,
+            String typeId) throws IOException
+    {
+        JsonDeserializer<Object> deser = _deserializers.get(typeId);
+        if (deser == null) {
+            JavaType type = _idResolver.typeFromId(ctxt, typeId);
+            if (type == null) {
+                /* Ok then, we must have a default impl; caller should have
+                 * checked but just in case let's verify:
+                 */
+                if (_defaultImpl == null) {
+                    throw ctxt.mappingException("Unable to locate typeId '"+typeId+"' (for id type 'Id.class')");
+                }
+                return ctxt.findContextualValueDeserializer(_defaultImpl, _property);
+            }
+            deser = ctxt.findContextualValueDeserializer(type, _property);
+            _deserializers.put(typeId, deser);
+        }
+        return deser;
+    }
     protected final JsonDeserializer<Object> _findDefaultImplDeserializer(DeserializationContext ctxt) throws IOException
     {
         /* 06-Feb-2013, tatu: As per [databind#148], consider default implementation value of
