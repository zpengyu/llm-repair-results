diff --git a/src/com/google/javascript/rhino/jstype/NamedType.java b/src/com/google/javascript/rhino/jstype/NamedType.java
index cddc8a88..832d7699 100644
--- a/src/com/google/javascript/rhino/jstype/NamedType.java
+++ b/src/com/google/javascript/rhino/jstype/NamedType.java
@@ -182,30 +182,20 @@ class NamedType extends ProxyObjectType {
    */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
-    boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
-    if (resolved) {
-      super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
-    }
-
-    resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
-    super.resolveInternal(t, enclosing);
-    if (isResolved()) {
-      finishPropertyContinuations();
+    if (!resolved) {
+      boolean resolved = resolveViaRegistry(t, enclosing);
+      if (!resolved) {
+        resolveViaProperties(t, enclosing);
+      }
+      if (detectImplicitPrototypeCycle()) {
+        handleTypeCycle(t);
+      }
+      if (resolved) {
+        super.resolveInternal(t, enclosing);
+        finishPropertyContinuations();
+        return registry.isLastGeneration() ?
+            getReferencedType() : this;
+      }
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
