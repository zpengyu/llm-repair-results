diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
index fde65ce30..64d06b2ff 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
@@ -299,11 +299,13 @@ public class MapDeserializer
     public boolean isCachable() {
         /* As per [databind#735], existence of value or key deserializer (only passed
          * if annotated to use non-standard one) should also prevent caching.
+         * Also, if current context specifies that there are no default type id settings,
+         * we can not share.
          */
         return (_valueTypeDeserializer == null)
-                && (_ignorableProperties == null);
+                && (_ignorableProperties == null)
+                && (_annotationIntrospector == null || _annotationIntrospector.findTypeResolver(getContextAnnotationIntrospector(), _config, null) == null);
     }
-
     @Override
     @SuppressWarnings("unchecked")
     public Map<Object,Object> deserialize(JsonParser jp, DeserializationContext ctxt)
