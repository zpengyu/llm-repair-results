diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
index fde65ce30..3bcad844b 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
@@ -296,14 +296,18 @@ public class MapDeserializer
      * @since 2.4.4
      */
     @Override
-    public boolean isCachable() {
-        /* As per [databind#735], existence of value or key deserializer (only passed
-         * if annotated to use non-standard one) should also prevent caching.
-         */
-        return (_valueTypeDeserializer == null)
-                && (_ignorableProperties == null);
+public boolean isCachable()
+{
+    if (_valueTypeDeserializer != null) {
+        // 18-Oct-2016, tatu: Even if deser is present, it may be "force-disabled"
+        if (!_valueDeserializer.isCachable()) {
+            return false;
+        }
     }
-
+    // As per [databind#735], existence of value or key deserializer (only passed
+    // if annotated to use non-standard one) should also prevent caching.
+    return _valueTypeDeserializer == null;
+}
     @Override
     @SuppressWarnings("unchecked")
     public Map<Object,Object> deserialize(JsonParser jp, DeserializationContext ctxt)
