diff --git a/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java b/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
index c64b2ffd..7ae3cdf1 100644
--- a/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
+++ b/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
@@ -385,9 +381,7 @@ class PeepholeReplaceKnownMethods extends AbstractPeepholeOptimization{
         !functionName.getString().equals("join")) {
       return n;
     }
-
-      // "," is the default, it doesn't need to be explicit
-
+    // "," is the default, it doesn't need to be explicit
     String joinString = (right == null) ? "," : NodeUtil.getStringValue(right);
     List<Node> arrayFoldedChildren = Lists.newLinkedList();
     StringBuilder sb = null;
@@ -396,7 +390,7 @@ class PeepholeReplaceKnownMethods extends AbstractPeepholeOptimization{
     Node elem = arrayNode.getFirstChild();
     // Merges adjacent String nodes.
     while (elem != null) {
-      if (NodeUtil.isImmutableValue(elem) || elem.getType() == Token.EMPTY) {
+      if (NodeUtil.isImmutableValue(elem)) {
         if (sb == null) {
           sb = new StringBuilder();
         } else {
