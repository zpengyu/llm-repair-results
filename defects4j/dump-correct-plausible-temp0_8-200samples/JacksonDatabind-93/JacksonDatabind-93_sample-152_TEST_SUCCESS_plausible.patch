diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
index fe9cba8d4..dc2d91c41 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
@@ -76,25 +75,35 @@ public class SubTypeValidator
             if (_cfgIllegalClassNames.contains(full)) {
                 break;
             }
-
             // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
             //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
-                    String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
+            if (raw.isInterface()) {
+                if (full.startsWith(PREFIX_STRING)) {
+                    for (Class<?> iface : raw.getInterfaces()) {
+                        String name = iface.getSimpleName();
+                        // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
+                        if ("AbstractPointcutAdvisor".equals(name)
+                                // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
+                                || "AbstractApplicationContext".equals(name)) {
+                            break main_check;
+                        }
+                    }
+                }
+            } else {
+                if (full.startsWith(PREFIX_STRING)) {
+                    for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
+                        String name = cls.getSimpleName();
+                        // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
+                        if ("AbstractPointcutAdvisor".equals(name)
+                                // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
+                                || "AbstractApplicationContext".equals(name)) {
+                            break main_check;
+                        }
                     }
                 }
             }
             return;
         } while (false);
-
         throw JsonMappingException.from(ctxt,
                 String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
-    }
-}
+    }}
