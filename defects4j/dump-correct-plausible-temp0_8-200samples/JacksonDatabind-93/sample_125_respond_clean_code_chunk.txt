    public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
    {
        // There are certain nasty classes that could cause problems, mostly
        // via default typing -- catch them here.
        final Class<?> raw = type.getRawClass();
        String full = raw.getName();
        if (_cfgIllegalClassNames.contains(full)) {
            if (raw.isInterface()) {
                return;
            }
            if (ClassUtil.isBogusClass(raw)) {
                return;
            }
            if (isJacksonStdImpl(raw)) {
                return;
            }
        }
        // 05-Jan-2017, tatu: As per [databind#1855], need bit more sophisticated handling
        //    for some Spring framework types
        // 18-Dec-2017, tatu: ... also, only applies to classes, not interfaces
        if (full.startsWith(PREFIX_STRING) && !raw.isInterface()) {
            for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
                String name = cls.getSimpleName();
                // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                if ("AbstractPointcutAdvisor".equals(name)
                        // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                        || "AbstractApplicationContext".equals(name)) {
                    break;
                }
            }
        }
        throw JsonMappingException.from(ctxt,
                String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
    }