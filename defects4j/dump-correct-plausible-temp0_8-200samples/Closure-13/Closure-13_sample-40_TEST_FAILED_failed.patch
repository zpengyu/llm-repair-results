diff --git a/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java b/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java
index 7eda511e..6fdab785 100644
--- a/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java
+++ b/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java
@@ -118,25 +118,22 @@ class PeepholeOptimizationsPass
     if (!shouldVisit(node)) {
       return;
     }
-
-    int visits = 0;
+    boolean needsReVisit = false;
     do {
+      needsReVisit = false;
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
-
-      visit(node);
-      visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
-
+      needsReVisit = shouldRetraverse(node);
+      if (!needsReVisit) {
+        visit(node);
+      }
+    } while (needsReVisit);
     exitNode(node);
   }
-
   private boolean shouldRetraverse(Node node) {
     if (node.getParent() != null && node.isFunction() || node.isScript()) {
       ScopeState state = traversalState.peek();
