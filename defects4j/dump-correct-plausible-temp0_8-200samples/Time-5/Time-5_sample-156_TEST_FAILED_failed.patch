diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java
index 8fce39c6..07dbca70 100644
--- a/src/main/java/org/joda/time/Period.java
+++ b/src/main/java/org/joda/time/Period.java
@@ -1616,11 +1616,16 @@ public final class Period
     public Period normalizedStandard(PeriodType type) {
         type = DateTimeUtils.getPeriodType(type);
         long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs
-        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));
-        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));
-        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));
-        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));
-        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));
+        int seconds = getSeconds();
+        millis += (((long) seconds) * ((long) DateTimeConstants.MILLIS_PER_SECOND));
+        int minutes = getMinutes();
+        millis += (((long) minutes) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));
+        int hours = getHours();
+        millis += (((long) hours) * ((long) DateTimeConstants.MILLIS_PER_HOUR));
+        int days = getDays();
+        millis += (((long) days) * ((long) DateTimeConstants.MILLIS_PER_DAY));
+        int weeks = getWeeks();
+        millis += (((long) weeks) * ((long) DateTimeConstants.MILLIS_PER_WEEK));
         Period result = new Period(millis, type, ISOChronology.getInstanceUTC());
         int years = getYears();
         int months = getMonths();
