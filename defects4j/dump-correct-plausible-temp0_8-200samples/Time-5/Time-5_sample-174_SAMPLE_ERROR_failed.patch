diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java
index 8fce39c6..20ebeac7 100644
--- a/src/main/java/org/joda/time/Period.java
+++ b/src/main/java/org/joda/time/Period.java
@@ -1615,24 +1615,39 @@ public final class Period
      */
     public Period normalizedStandard(PeriodType type) {
         type = DateTimeUtils.getPeriodType(type);
-        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs
-        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));
-        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));
-        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));
-        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));
-        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));
-        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());
-        int years = getYears();
-        int months = getMonths();
-        if (years != 0 || months != 0) {
-            years = FieldUtils.safeAdd(years, months / 12);
-            months = months % 12;
-            if (years != 0) {
-                result = result.withYears(years);
-            }
-            if (months != 0) {
-                result = result.withMonths(months);
-            }
+        Period result = new Period(0, type, ISOChronology.getInstanceUTC());
+        int[] values = iValues;
+        int days = values[DurationFieldType.days().getIndex()];
+        if (days != 0) {
+            result = result.withDays(days);
+        }
+        int hours = values[DurationFieldType.hours().getIndex()];
+        if (hours != 0) {
+            result = result.withHours(hours);
+        }
+        int minutes = values[DurationFieldType.minutes().getIndex()];
+        if (minutes != 0) {
+            result = result.withMinutes(minutes);
+        }
+        int seconds = values[DurationFieldType.seconds().getIndex()];
+        if (seconds != 0) {
+            result = result.withSeconds(seconds);
+        }
+        int millis = values[DurationFieldType.millis().getIndex()];
+        if (millis != 0) {
+            result = result.withMillis(millis);
+        }
+        int weeks = values[DurationFieldType.weeks().getIndex()];
+        if (weeks != 0) {
+            result = result.withWeeks(weeks);
+        }
+        int months = values[DurationFieldType.months().getIndex()];
+        if (months != 0) {
+            result = result.withMonths(months);
+        }
+        int years = values[DurationFieldType.years().getIndex()];
+        if (years != 0) {
+            result = result.withYears(years);
         }
         return result;
     }
