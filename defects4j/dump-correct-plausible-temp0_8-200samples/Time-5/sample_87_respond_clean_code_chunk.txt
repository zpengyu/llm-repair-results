    public Period normalizedStandard(PeriodType type) {
        type = DateTimeUtils.getPeriodType(type);
        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs
        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));
        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));
        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));
        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));
        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));
        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());
        if (iValues[YEAR_INDEX] != 0 || iValues[MONTH_INDEX] != 0) {
            long totalMonths = FieldUtils.safeAdd(
                FieldUtils.safeMultiply(iValues[YEAR_INDEX], 12), iValues[MONTH_INDEX]);
            result = result.withMonths((int) totalMonths);
        }
        return result;
    }