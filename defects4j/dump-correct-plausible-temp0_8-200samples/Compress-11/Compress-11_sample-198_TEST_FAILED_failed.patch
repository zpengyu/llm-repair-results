diff --git a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
index e2847a61..32208a65 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
@@ -203,10 +202,9 @@ public class ArchiveStreamFactory {
         if (!in.markSupported()) {
             throw new IllegalArgumentException("Mark is not supported.");
         }
-
-        final byte[] signature = new byte[12];
-        in.mark(signature.length);
         try {
+            byte[] signature = new byte[12];
+            in.mark(signature.length);
             int signatureLength = in.read(signature);
             in.reset();
             if (ZipArchiveInputStream.matches(signature, signatureLength)) {
@@ -218,18 +216,16 @@ public class ArchiveStreamFactory {
             } else if (CpioArchiveInputStream.matches(signature, signatureLength)) {
                 return new CpioArchiveInputStream(in);
             }
-
             // Dump needs a bigger buffer to check the signature;
-            final byte[] dumpsig = new byte[32];
-            in.mark(dumpsig.length);
-            signatureLength = in.read(dumpsig);
+            signature = new byte[32];
+            in.mark(signature.length);
+            signatureLength = in.read(signature);
             in.reset();
-            if (DumpArchiveInputStream.matches(dumpsig, signatureLength)) {
+            if (DumpArchiveInputStream.matches(signature, signatureLength)) {
                 return new DumpArchiveInputStream(in);
             }
-
             // Tar needs an even bigger buffer to check the signature; read the first block
-            final byte[] tarheader = new byte[512];
+            byte[] tarheader = new byte[512];
             in.mark(tarheader.length);
             signatureLength = in.read(tarheader);
             in.reset();
@@ -249,7 +245,5 @@ public class ArchiveStreamFactory {
         } catch (IOException e) {
             throw new ArchiveException("Could not use reset and mark operations.", e);
         }
-
         throw new ArchiveException("No Archiver found for the stream signature");
-    }
-}
+    }}
