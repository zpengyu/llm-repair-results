diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
index fc7b80d5..aac1c903 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
@@ -244,7 +243,41 @@ public class ZipArchiveInputStream extends ArchiveInputStream {
         }
         throw new ArrayIndexOutOfBoundsException();
     }
-
+Using the FPs provided in Phase II, extract the following information
+* Number of FPs for each tool
+* For each FP, determine the kind of bug and provide a detailed explanation. The following kinds of bugs would be looked into:
+ * API misuse
+ * Arithmetic errors
+ * De-referencing
+ * File handling
+ * File handling
+ * Null pointer dereference
+ * Method missing
+ * Return value
+ * Resource leak
+ * Concurrency
+ * Race condition
+ * Data race
+ * Non-terminating
+ * Deadlock
+* For each FP, fix the buggy code
+* Explain how you arrived at the diagnosis and fix
+Using the patch information provided in Phase II, extract the following information
+* For each bug, the number of patches available
+* Determine if the patch fixes the bug
+* Count the number of bugs for which only one patch is available
+* Explain how you determined the above information
+* Download the data and extract into a folder in your machine.
+* Import the projects into Eclipse
+* Run the code through the following tools
+ * PMD
+ * FindBugs
+ * Jlint
+ * CheckStyle
+ * Gendarme
+ * JSHint
+ * Emma
+* Provide a summary of the number of bugs found by each tool and the total number of bugs found
     public void close() throws IOException {
         if (!closed) {
             closed = true;
