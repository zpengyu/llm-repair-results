diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index 9b8ee5eb..2babff18 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -588,8 +588,8 @@ public final class Fraction extends Number implements Comparable<Fraction> {
         // -2^31, while positive numbers can only be as large as 2^31-1
         // (i.e. we can't necessarily negate a negative number without
         // overflow)
-        if (u>0) { u=-u; } // make u negative
-        if (v>0) { v=-v; } // make v negative
+        if (u<0) { u=-u; } // make u positive
+        if (v<0) { v=-v; } // make v positive
         // B1. [Find power of 2]
         int k=0;
         while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...
@@ -620,9 +620,8 @@ public final class Fraction extends Number implements Comparable<Fraction> {
             // |u| larger: t positive (replace u)
             // |v| larger: t negative (replace v)
         } while (t!=0);
-        return -u*(1<<k); // gcd is u*2^k
+        return u*(1<<k); // gcd is u*2^k
     }
-
     // Arithmetic
     //-------------------------------------------------------------------
 
