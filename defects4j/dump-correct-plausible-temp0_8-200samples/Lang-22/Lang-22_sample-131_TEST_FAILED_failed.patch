diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index 9b8ee5eb..e54b518c 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -600,14 +600,14 @@ public final class Fraction extends Number implements Comparable<Fraction> {
         }
         // B2. Initialize: u and v have been divided by 2^k and at least
         //     one is odd.
-        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;
+        int t = ((u&1)==1) ? v : -(u>>1)/*B3*/;
         // t negative: u was odd, v may be even (t replaces v)
         // t positive: u was even, v is odd (t replaces u)
         do {
             /* assert u<0 && v<0; */
             // B4/B3: cast out twos from t.
             while ((t&1)==0) { // while t is even..
-                t/=2; // cast out twos
+                t>>=1; // cast out twos
             }
             // B5 [reset max(u,v)]
             if (t>0) {
@@ -616,13 +616,12 @@ public final class Fraction extends Number implements Comparable<Fraction> {
                 v = t;
             }
             // B6/B3. at this point both u and v should be odd.
-            t = (v - u)/2;
+            t = (v - u)>>1;
             // |u| larger: t positive (replace u)
             // |v| larger: t negative (replace v)
         } while (t!=0);
-        return -u*(1<<k); // gcd is u*2^k
+        return -u<<k; // gcd is u*2^k
     }
-
     // Arithmetic
     //-------------------------------------------------------------------
 
