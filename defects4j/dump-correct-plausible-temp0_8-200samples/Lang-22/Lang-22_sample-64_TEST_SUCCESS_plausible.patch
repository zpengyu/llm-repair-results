diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index 9b8ee5eb..59a5228d 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -579,11 +579,6 @@ public final class Fraction extends Number implements Comparable<Fraction> {
      * @return the greatest common divisor, never zero
      */
     private static int greatestCommonDivisor(int u, int v) {
-        // From Commons Math:
-        //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
-            return 1;
-        }
         // keep u and v negative, as negative integers range down to
         // -2^31, while positive numbers can only be as large as 2^31-1
         // (i.e. we can't necessarily negate a negative number without
@@ -596,7 +591,7 @@ public final class Fraction extends Number implements Comparable<Fraction> {
             u/=2; v/=2; k++; // cast out twos.
         }
         if (k==31) {
-            throw new ArithmeticException("overflow: gcd is 2^31");
+            return Integer.MAX_VALUE;
         }
         // B2. Initialize: u and v have been divided by 2^k and at least
         //     one is odd.
