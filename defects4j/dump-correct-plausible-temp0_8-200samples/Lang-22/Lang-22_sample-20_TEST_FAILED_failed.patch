diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index 9b8ee5eb..e0647e91 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -593,21 +593,21 @@ public final class Fraction extends Number implements Comparable<Fraction> {
         // B1. [Find power of 2]
         int k=0;
         while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...
-            u/=2; v/=2; k++; // cast out twos.
+            u=u>>1; v=v>>1; k++; // cast out twos.
         }
         if (k==31) {
             throw new ArithmeticException("overflow: gcd is 2^31");
         }
         // B2. Initialize: u and v have been divided by 2^k and at least
         //     one is odd.
-        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;
+        int t = ((u&1)==1) ? v : -(u>>1)/*B3*/;
         // t negative: u was odd, v may be even (t replaces v)
         // t positive: u was even, v is odd (t replaces u)
         do {
             /* assert u<0 && v<0; */
             // B4/B3: cast out twos from t.
             while ((t&1)==0) { // while t is even..
-                t/=2; // cast out twos
+                t=t>>1; // cast out twos
             }
             // B5 [reset max(u,v)]
             if (t>0) {
