public long adjustOffset(long instant, boolean earlierOrLater) {
    // a bit messy, but will work in all non-pathological cases
    
    // evaluate 3 hours before and after to work out if anything is happening
    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
    if (instantBefore == instantAfter) {
        return instant;  // not an overlap (less than is a gap, equal is normal case)
    }
    
    // work out range of instants that have duplicate local times
    long local = convertUTCToLocal(instant);
    long earlier = Math.min(instantBefore, instantAfter);
    long later = Math.max(instantBefore, instantAfter);
    if (earlierOrLater) {
        later = Math.max(local, later);
    } else {
        earlier = Math.min(local, earlier);
    }
    
    return convertLocalToUTC(local, false, earlierOrLater ? later : earlier);
    
    // calculate result
      // currently in later offset
      // currently in earlier offset
}
