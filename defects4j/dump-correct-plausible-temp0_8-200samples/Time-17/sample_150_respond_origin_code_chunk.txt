    public long adjustOffset(long instant, boolean earlierOrLater) {
        // a bit messy, but will work in all non-pathological cases
        
        // evaluate 3 hours before and after to work out if anything is happening
        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
        if (instantBefore == instantAfter) {
            return instant;  // not an overlap (less than is a gap, equal is normal case)
        }
        
        // work out range of instants that have duplicate local times
        long local = convertUTCToLocal(instant);
        long localBefore = convertUTCToLocal(instantBefore);
        long localAfter = convertUTCToLocal(instantAfter);
        if (localBefore == localAfter) {
            return instant;  // not an overlap (less than is a gap, equal is normal case)
        }
        
        // calculate result
        boolean earlier = (local == localBefore);
        if (earlierOrLater && !earlier) {
            return instant;
        }
        if (!earlierOrLater && earlier) {
            return instant;
        }
        if (earlier) {
            return convertLocalToUTC(local, true, localAfter);
        } else {
            return convertLocalToUTC(local, false, localBefore);
        }
    }
