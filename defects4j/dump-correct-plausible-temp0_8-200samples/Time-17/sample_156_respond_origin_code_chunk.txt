    public long adjustOffset(long instant, boolean earlierOrLater) {
        // a bit messy, but will work in all non-pathological cases
        
        // evaluate 3 hours before and after to work out if anything is happening
        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
        if (instantBefore == instantAfter) {
            return instant;  // not an overlap (less than is a gap, equal is normal case)
        }
        
        // work out range of instants that have duplicate local times
        long local = convertUTCToLocal(instant);
        long[] range = (earlierOrLater ? new long[] {instantAfter, instantBefore} : new long[] {instantBefore, instantAfter});
        
        // calculate result
        if (earlierOrLater) {
            if (range[0] < instant && range[1] >= instant) {
                return instant;
            } else {
                return convertLocalToUTC(local, false, earlierOrLater ? range[0] : range[1]);
            }
        } else {
            if (range[1] > instant && range[0] <= instant) {
                return instant;
            } else {
                return convertLocalToUTC(local, false, earlierOrLater ? range[0] : range[1]);
            }
        }
    }
