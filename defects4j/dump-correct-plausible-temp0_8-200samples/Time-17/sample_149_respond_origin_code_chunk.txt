public long adjustOffset(long instant, boolean earlierOrLater) {
    // a bit messy, but will work in all non-pathological cases

    // evaluate 3 hours before and after to work out if anything is happening
    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
    if (instantBefore == instantAfter) {
        return instant;  // not an overlap (less than is a gap, equal is normal case)
    }

    // work out range of instants that have duplicate local times
    long local = convertUTCToLocal(instant);
    long localStart = convertUTCToLocal(instantBefore);
    long localEnd = convertUTCToLocal(instantAfter);

    if (localStart < localEnd) {
        // see if we are within the overlapping period
        if (local < localStart || local >= localEnd) {
            return instant;
        }
    } else {
        // see if we are within the overlapping period
        if (local < localEnd || local >= localStart) {
            return instant;
        }
    }

    // calculate result
    if (earlierOrLater) {
        return instantAfter;
    } else {
        return instantBefore;
    }

}
