    public long adjustOffset(long instant, boolean earlierOrLater) {
        // a bit messy, but will work in all non-pathological cases
        
        // evaluate 3 hours before and after to work out if anything is happening
        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
        if (instantBefore == instantAfter) {
            return instant;  // not an overlap (less than is a gap, equal is normal case)
        }
        
        // work out range of instants that have duplicate local times
        long local = convertUTCToLocal(instant);
        long result = convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
        if (result < instant) {
            // if moved back and now before instant, move forward one overlap
            result = convertLocalToUTC(local, false, instantBefore + 1);
        } else if (result > instant) {
            // if moved forward and now after instant, move back one overlap
            result = convertLocalToUTC(local, false, instantBefore - 1);
        }
        return result;
        
        // calculate result
          // currently in later offset
          // currently in earlier offset
    }

