diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java
index 5c7a348c..be1dec6a 100644
--- a/src/main/java/org/joda/time/DateTimeZone.java
+++ b/src/main/java/org/joda/time/DateTimeZone.java
@@ -1173,12 +1171,27 @@ public abstract class DateTimeZone implements Serializable {
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
         return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-
         // calculate result
-          // currently in later offset
-          // currently in earlier offset
-    }
-//    System.out.println(new DateTime(transitionStart, DateTimeZone.UTC) + " " + new DateTime(transitionStart, this));
+        if (instant < instantBefore) {  // currently in later offset
+            return instant;
+        } else if (instant >= instantAfter) {  // currently in earlier offset
+            return convertUTCToLocal(instant);
+        } else if (instantBefore < instantAfter) {  // not in gap
+            return earlierOrLater ? instantBefore : instantAfter;
+        } else {
+            long gapInstant = earlierOrLater ? instantBefore : instantAfter;
+            long gapOffset = earlierOrLater ? 0 : 1;
+            int i;
+            for (i = 1; i < 7; i++) {
+                if (instantBefore == gapInstant || instantAfter == gapInstant) {
+                    return gapOffset + convertUTCToLocal(instant);
+                }
+                gapOffset++;
+                gapInstant += DateTimeConstants.MILLIS_PER_HOUR;
+            }
+            return instant;
+        }
+    }//    System.out.println(new DateTime(transitionStart, DateTimeZone.UTC) + " " + new DateTime(transitionStart, this));
 
     //-----------------------------------------------------------------------
     /**
