diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java
index 5c7a348c..a88ecae8 100644
--- a/src/main/java/org/joda/time/DateTimeZone.java
+++ b/src/main/java/org/joda/time/DateTimeZone.java
@@ -1169,16 +1168,26 @@ public abstract class DateTimeZone implements Serializable {
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
-
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-
+        if (earlierOrLater) {
+            while (local < instantBefore) {
+                local += DateTimeConstants.MILLIS_PER_HOUR;
+            }
+        } else {
+            while (local > instantAfter) {
+                local -= DateTimeConstants.MILLIS_PER_HOUR;
+            }
+        }
         // calculate result
-          // currently in later offset
-          // currently in earlier offset
-    }
-//    System.out.println(new DateTime(transitionStart, DateTimeZone.UTC) + " " + new DateTime(transitionStart, this));
+        if (instant >= instantBefore && instant < instantAfter) {
+            // currently in later offset
+            return instant + (local - instantAfter);
+        } else {
+            // currently in earlier offset
+            return instant - (instantBefore - local);
+        }
+    }//    System.out.println(new DateTime(transitionStart, DateTimeZone.UTC) + " " + new DateTime(transitionStart, this));
 
     //-----------------------------------------------------------------------
     /**
