    public long adjustOffset(long instant, boolean earlierOrLater) {
        // a bit messy, but will work in all non-pathological cases
        // evaluate 3 hours before and after to work out if anything is happening
        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
        if (instantBefore == instantAfter) {
            return instant;  // not an overlap (less than is a gap, equal is normal case)
        }
        // work out range of instants that have duplicate local times
        long local = convertUTCToLocal(instant);
        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
        // calculate result
        if (instant == instantBefore) {
            if (instantAfter < instant) {
                return instantAfter;
            } else {
                return earlierOrLater ? instantAfter : instantBefore;
            }
        }
        if (instantBefore < instant && instant < instantAfter) {
            // currently in later offset
            return earlierOrLater ? instantBefore : instantAfter;
        } else {
            // currently in earlier offset
            return earlierOrLater ? instantAfter : instantBefore;
        }
    }