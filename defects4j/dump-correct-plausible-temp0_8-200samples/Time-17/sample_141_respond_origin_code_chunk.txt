    public long adjustOffset(long instant, boolean earlierOrLater) {
        // a bit messy, but will work in all non-pathological cases
        
        // evaluate 3 hours before and after to work out if anything is happening
        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
        if (instantBefore == instantAfter) {
            return instant;  // not an overlap (less than is a gap, equal is normal case)
        }
        
        // work out range of instants that have duplicate local times
        long local = convertUTCToLocal(instant);
        if (earlierOrLater) {
            // If current time is earlier than the end of the gap
            if (local < instantBefore) {
                return convertLocalToUTC(local, false, instantBefore);
            }
            return convertLocalToUTC(local, false, instantAfter);
        } else {
            // If current time is later than the start of the gap
            if (local > instantAfter) {
                return convertLocalToUTC(local, false, instantAfter);
            }
            return convertLocalToUTC(local, false, instantBefore);
        }
        
        // calculate result
          // currently in later offset
          // currently in earlier offset
    }

 
