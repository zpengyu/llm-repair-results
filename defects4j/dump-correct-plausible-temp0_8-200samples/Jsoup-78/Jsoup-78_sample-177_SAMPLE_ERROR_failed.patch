diff --git a/src/main/java/org/jsoup/helper/DataUtil.java b/src/main/java/org/jsoup/helper/DataUtil.java
index bbbd8fb..7fb8764 100644
--- a/src/main/java/org/jsoup/helper/DataUtil.java
+++ b/src/main/java/org/jsoup/helper/DataUtil.java
@@ -90,14 +90,12 @@ public final class DataUtil {
         }
     }
 
-    static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException  {
+    static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException {
         if (input == null) // empty body
             return new Document(baseUri);
-        input = ConstrainableInputStream.wrap(input, bufferSize, 0);
-
+        input = ConstrainableInputStream.wrap(input, bufferSize, maxSize);
         Document doc = null;
         boolean fullyRead = false;
-
         // read the start of the stream and look for a BOM or meta charset
         input.mark(bufferSize);
         ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1); // -1 because we read one more to see if completed. First read is < buffer size, so can't be invalid.
@@ -148,8 +142,12 @@ public final class DataUtil {
             if (charsetName == null)
                 charsetName = defaultCharset;
             BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);
+            if (maxSize <= 0) {
                 doc = parser.parseInput(reader, baseUri);
                 // io exception when parsing (not seen before because reading the stream as we go)
+            } else {
+                doc = parser.parseInput(reader, baseUri, maxSize);
+            }
             doc.outputSettings().charset(charsetName);
         }
         input.close();
