diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java b/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java
index 9a9d91ebf..35fb1a5b5 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java
@@ -81,8 +80,7 @@ public class PropertyBuilder
              *    revisited if this causes problems.
              */
             if (serializationType == null) {
-//                serializationType = TypeFactory.type(am.getGenericType(), _beanDesc.getType());
-                serializationType = declaredType;
+                serializationType = TypeFactory.type(am.getGenericType(), _beanDesc.getType());
             }
             JavaType ct = serializationType.getContentType();
             // Not exactly sure why, but this used to occur; better check explicitly:
@@ -102,10 +98,6 @@ public class PropertyBuilder
         if (inclusion == JsonInclude.Include.USE_DEFAULTS) { // should not occur but...
             inclusion = JsonInclude.Include.ALWAYS;
         }
-
-        // 12-Jul-2016, tatu: [databind#1256] Need to make sure we consider type refinement
-        JavaType actualType = (serializationType == null) ? declaredType : serializationType;
-        
         switch (inclusion) {
         case NON_DEFAULT:
             // 11-Nov-2015, tatu: This is tricky because semantics differ between cases,
@@ -114,9 +106,9 @@ public class PropertyBuilder
             //    static definition. Sigh.
             // First: case of class specifying it; try to find POJO property defaults
             if (_defaultInclusion.getValueInclusion() == JsonInclude.Include.NON_DEFAULT) {
-                valueToSuppress = getPropertyDefaultValue(propDef.getName(), am, actualType);
+                valueToSuppress = getPropertyDefaultValue(propDef.getName(), am, declaredType);
             } else {
-                valueToSuppress = getDefaultValue(actualType);
+                valueToSuppress = getDefaultValue(declaredType);
             }
             if (valueToSuppress == null) {
                 suppressNulls = true;
@@ -125,15 +117,6 @@ public class PropertyBuilder
                     valueToSuppress = ArrayBuilders.getArrayComparator(valueToSuppress);
                 }
             }
-
-            break;
-        case NON_ABSENT: // new with 2.6, to support Guava/JDK8 Optionals
-            // always suppress nulls
-            suppressNulls = true;
-            // and for referential types, also "empty", which in their case means "absent"
-            if (declaredType.isReferenceType()) {
-                valueToSuppress = BeanPropertyWriter.MARKER_FOR_EMPTY;
-            }
             break;
         case NON_EMPTY:
             // always suppress nulls
