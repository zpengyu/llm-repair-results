diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
index e5295d0bf..3ffe3e658 100644
--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
@@ -328,22 +328,35 @@ class SimplexTableau implements Serializable {
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
+            // if multiple variables can take a given value 
+            // then we choose the first and set the rest equal to 0
+            coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+                        coefficients[i] = 0;
                     }
                 }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
-
+    // get the most negative value from the basic row of the RHS
+    protected Integer getBasicRow(int col) {
+        int row = -1;
+        for (int i = 0; i < tableau.getNumRows(); i++) {
+            if (Precision.equals(tableau.getEntry(i, col), 1d, epsilon)) {
+                if (row == -1) {
+                    row = i;
+                } else {
+                    return null;
+                }
+            }
+        }
+        return row;
+    }
     /**
      * Subtracts a multiple of one row from another.
      * <p>
