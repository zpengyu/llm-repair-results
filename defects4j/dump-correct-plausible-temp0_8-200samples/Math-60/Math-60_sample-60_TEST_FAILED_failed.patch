diff --git a/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java b/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
index a0ee398d5..677f060bc 100644
--- a/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
+++ b/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
@@ -121,22 +121,21 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution
      * @return CDF evaluated at {@code x}.
      * @throws MathException if the algorithm fails to converge
      */
-    public double cumulativeProbability(double x) throws MathException {
-        final double dev = x - mean;
-        try {
+public double cumulativeProbability(double x) throws MathException {
+    final double dev = x - mean;
+    try {
         return 0.5 * (1.0 + Erf.erf((dev) /
-                    (standardDeviation * FastMath.sqrt(2.0))));
-        } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
-                return 0;
-            } else if (x > (mean + 20 * standardDeviation)) {
-                return 1;
-            } else {
-                throw ex;
-            }
+                                    (standardDeviation * FastMath.sqrt(2.0))));
+    } catch (MaxIterationsExceededException ex) {
+        if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            return 0;
+        } else if (x > (mean + 20 * standardDeviation)) {
+            return 1;
+        } else {
+            return 0;
         }
     }
-
+}
     /**
      * Return the absolute accuracy setting of the solver used to estimate
      * inverse cumulative probabilities.
