diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
index 9fe2d40b0..06ef3f3fc 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
@@ -45,18 +43,10 @@ public class SubTypeValidator
         s.add("java.util.logging.FileHandler");
         s.add("java.rmi.server.UnicastRemoteObject");
         // [databind#1737]; 3rd party
-//s.add("org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor"); // deprecated by [databind#1855]
-        s.add("org.springframework.beans.factory.config.PropertyPathFactoryBean");
-
-// s.add("com.mchange.v2.c3p0.JndiRefForwardingDataSource"); // deprecated by [databind#1931]
-// s.add("com.mchange.v2.c3p0.WrapperConnectionPoolDataSource"); // - "" -
-        // [databind#1855]: more 3rd party
         s.add("org.apache.tomcat.dbcp.dbcp2.BasicDataSource");
         s.add("com.sun.org.apache.bcel.internal.util.ClassLoader");
-
         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);
     }
-
     /**
      * Set of class names of types that are never to be deserialized.
      */
@@ -74,39 +60,9 @@ public class SubTypeValidator
         // via default typing -- catch them here.
         final Class<?> raw = type.getRawClass();
         String full = raw.getName();
-
-        main_check:
-        do {
-            if (_cfgIllegalClassNames.contains(full)) {
-                break;
-            }
-
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (raw.isInterface()) {
-                ;
-            } else if (full.startsWith(PREFIX_SPRING)) {
-                for (Class<?> cls = raw; (cls != null) && (cls != Object.class); cls = cls.getSuperclass()){
-                    String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
-                    }
-                // [databind#1737]; more 3rd party
-                // s.add("com.mchange.v2.c3p0.JndiRefForwardingDataSource");
-                // s.add("com.mchange.v2.c3p0.WrapperConnectionPoolDataSource");
-                // [databind#1931]; more 3rd party
-                // com.mchange.v2.c3p0.ComboPooledDataSource
-                // com.mchange.v2.c3p0.debug.AfterCloseLoggingComboPooledDataSource
-                }
-            }
-            return;
-        } while (false);
-
-        throw JsonMappingException.from(ctxt,
-                String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
+        if (_cfgIllegalClassNames.contains(full)) {
+            throw JsonMappingException.from(ctxt,
+                    String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
+        }
     }
 }
\ No newline at end of file
