diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
index 9fe2d40b0..95fd544aa 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java
@@ -84,28 +73,27 @@ public class SubTypeValidator
             // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
             //    for some Spring framework types
             // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (raw.isInterface()) {
-                ;
-            } else if (full.startsWith(PREFIX_SPRING)) {
-                for (Class<?> cls = raw; (cls != null) && (cls != Object.class); cls = cls.getSuperclass()){
-                    String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
+            if (!raw.isInterface()) {
+                if (full.startsWith(PREFIX_SPRING)) {
+                    for (Class<?> cls = raw; (cls != null) && (cls != Object.class); cls = cls.getSuperclass()){
+                        String name = cls.getSimpleName();
+                        // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
+                        if ("AbstractPointcutAdvisor".equals(name)
+                                // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
+                                || "AbstractApplicationContext".equals(name)) {
+                            break main_check;
+                        }
+                    // [databind#1737]; more 3rd party
+                    // s.add("com.mchange.v2.c3p0.JndiRefForwardingDataSource");
+                    // s.add("com.mchange.v2.c3p0.WrapperConnectionPoolDataSource");
+                    // [databind#1931]; more 3rd party
+                    // com.mchange.v2.c3p0.ComboPooledDataSource
+                    // com.mchange.v2.c3p0.debug.AfterCloseLoggingComboPooledDataSource 
                     }
-                // [databind#1737]; more 3rd party
-                // s.add("com.mchange.v2.c3p0.JndiRefForwardingDataSource");
-                // s.add("com.mchange.v2.c3p0.WrapperConnectionPoolDataSource");
-                // [databind#1931]; more 3rd party
-                // com.mchange.v2.c3p0.ComboPooledDataSource
-                // com.mchange.v2.c3p0.debug.AfterCloseLoggingComboPooledDataSource
                 }
+                return;
             }
-            return;
         } while (false);
-
         throw JsonMappingException.from(ctxt,
                 String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
     }
