diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java
index f68dfea6..fdd8aa4d 100644
--- a/src/com/google/javascript/rhino/jstype/FunctionType.java
+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -861,15 +861,16 @@ public class FunctionType extends PrototypeObjectType {
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope) {
     setResolvedTypeInternal(this);
-
     call = (ArrowType) safeResolve(call, t, scope);
-    prototype = (FunctionPrototypeType) safeResolve(prototype, t, scope);
-
+    if (prototype != null) {
+      prototype = (FunctionPrototypeType) safeResolve(prototype, t, scope);
+    }
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
-
+    if (typeOfThis != null) {
+      typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+    }
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =
         ImmutableList.builder();
