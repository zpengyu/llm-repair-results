    protected JavaType _narrow(Class<?> subclass)
    {
        if (_class == subclass) {
            return this;
        }
        if (!_class.isAssignableFrom(subclass)) {
            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                    +_class.getName());
        }
        JavaType superCls = _superClass;
        if (superCls == null) {
            superCls = ctxt.constructType(_class.getGenericSuperclass());
        }
        return ctxt.constructSpecializedType(superCls, subclass);
    }