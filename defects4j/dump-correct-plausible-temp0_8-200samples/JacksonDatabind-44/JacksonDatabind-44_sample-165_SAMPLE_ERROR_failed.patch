diff --git a/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java b/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
index 09fc2487a..e9bd1fd4b 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
@@ -129,13 +129,20 @@ public class SimpleType // note: until 2.6 was final
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
         // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
+        /*
+        throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+                +_class.getName());
+        */
         // Otherwise, stitch together the hierarchy. First, super-class
+        JavaType superClass = _findSuperTypeChain(_class, subclass);
+        if (superClass == null) {
+            superClass = _findSuperTypeChain(subclass, _class);
+            if (superClass == null) {
+                throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+                        +_class.getName());
+            }
+        }
+        return superClass.forcedNarrowBy(_class);
         // if not found, try a super-interface
         // should not get here but...
     }
