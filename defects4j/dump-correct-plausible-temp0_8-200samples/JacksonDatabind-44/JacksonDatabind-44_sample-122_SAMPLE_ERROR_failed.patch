diff --git a/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java b/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
index 09fc2487a..9bff1b168 100644
--- a/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
+++ b/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
@@ -126,20 +126,30 @@ public class SimpleType // note: until 2.6 was final
             return this;
         }
         // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+        if (!_class.isAssignableFrom(subclass)) {
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
-                    */
+        }
+        // Otherwise, stitch together the hierarchy. First, super-class
+        Class<?> superCls = subclass.getSuperclass();
+        if (superCls == _class) {
             return new SimpleType(subclass, _bindings, this, _superInterfaces,
                     _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
+        }
         // if not found, try a super-interface
+        for (Type iface : subclass.getGenericInterfaces()) {
+            if (iface instanceof Class<?>) {
+                Class<?> ifaceClass = (Class<?>) iface;
+                if (ifaceClass.isAssignableFrom(_class)) {
+                    return new SimpleType(subclass, _bindings, null, new TypeBindings.AsClass(ifaceClass),
+                            _valueHandler, _typeHandler, _asStatic);
+                }
+            }
+        }
         // should not get here but...
+        return new SimpleType(subclass, _bindings, this, null,
+                _valueHandler, _typeHandler, _asStatic);
     }
-
     @Override
     public JavaType withContentType(JavaType contentType) {
         throw new IllegalArgumentException("Simple types have no content types; can not call withContentType()");
