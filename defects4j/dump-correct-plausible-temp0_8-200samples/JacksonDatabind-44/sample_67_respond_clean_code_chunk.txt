    protected JavaType _narrow(Class<?> subclass)
    {
        if (_class == subclass) {
            return this;
        }
        // Should we check that there is a sub-class relationship?
        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
        // TODO: fix in 2.8
        if (!_class.isAssignableFrom(subclass)) {
            /*
            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                    +_class.getName());
                    */
            reportBadDefinition(_class, subclass);
        }
        // Otherwise, stitch together the hierarchy. First, super-class
        if (subclass.isInterface()) {
            for (Class<?> cls : _superInterfaces) {
                if (cls.isAssignableFrom(subclass)) {
                    return new SimpleType(subclass, _bindings, this, _superInterfaces,
                            _valueHandler, _typeHandler, _asStatic);
                }
            }
            // if not found, try a super-interface
            for (Class<?> cls : subclass.getInterfaces()) {
                if (_class.isAssignableFrom(cls)) {
                    return new SimpleType(subclass, _bindings, this, _superInterfaces,
                            _valueHandler, _typeHandler, _asStatic);
                }
            }
        } else {
            Class<?> superCls = subclass.getSuperclass();
            if (_class.isAssignableFrom(superCls)) {
                return new SimpleType(subclass, _bindings, this, _superInterfaces,
                        _valueHandler, _typeHandler, _asStatic);
            }
        }
        // should not get here but...
        reportBadDefinition(_class, subclass);
    }