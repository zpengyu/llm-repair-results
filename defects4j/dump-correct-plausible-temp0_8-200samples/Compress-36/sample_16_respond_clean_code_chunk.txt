    private InputStream getCurrentStream() throws IOException {
        if (deferredBlockStreams.isEmpty()) {
            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
        }
        if (deferredBlockStreams.size() > 1) {
            // If there is more than one deferred stream, it means we're in solid
            // compression mode. This means that all folder streams preceding the
            // current entry need to be decompressed to decompress the current
            // entry. We do this on demand, but since we're done with the current
            // entry, we can now decompress all folder streams to skip the whole
            // block.
            while (deferredBlockStreams.size() > 1) {
                final InputStream stream = deferredBlockStreams.remove(0);
                IOUtils.skip(stream, Long.MAX_VALUE);
                stream.close();
            }
        }
        return deferredBlockStreams.get(0);
    }