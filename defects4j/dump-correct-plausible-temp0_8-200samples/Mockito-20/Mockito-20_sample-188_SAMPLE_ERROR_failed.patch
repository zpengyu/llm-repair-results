diff --git a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
index ddaada2f1..cec8b39b8 100644
--- a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
+++ b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
@@ -25,16 +25,14 @@ public class ByteBuddyMockMaker implements MockMaker {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
-        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
-                settings.getTypeToMock(),
-                settings.getExtraInterfaces()
-        );
-        T mockInstance = null;
         try {
-            mockInstance = classInstantiator.instantiate(mockedProxyType);
-            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
-            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
-
+			Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
+                    settings.getTypeToMock(),
+                    settings.getExtraInterfaces()
+            );
+			T mockInstance = classInstantiator.instantiate(mockedProxyType);
+			MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
+			mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
             return ensureMockIsAssignableToMockedType(settings, mockInstance);
         } catch (ClassCastException cce) {
             throw new MockitoException(join(
