diff --git a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
index ddaada2f1..0b0d9d74a 100644
--- a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
+++ b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
@@ -21,7 +21,7 @@ public class ByteBuddyMockMaker implements MockMaker {
         cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();
     }
 
-    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
+public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
@@ -34,19 +34,31 @@ public class ByteBuddyMockMaker implements MockMaker {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
-
             return ensureMockIsAssignableToMockedType(settings, mockInstance);
         } catch (ClassCastException cce) {
-            throw new MockitoException(join(
-                    "ClassCastException occurred while creating the mockito mock :",
-                    "  class to mock : " + describeClass(mockedProxyType),
-                    "  created class : " + describeClass(settings.getTypeToMock()),
-                    "  proxy instance class : " + describeClass(mockInstance),
-                    "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
-                    "",
-                    "You might experience classloading issues, please ask the mockito mailing-list.",
-                    ""
-            ),cce);
+            if (settings.getTypeToMock().isInterface()) {
+                throw new MockitoException(join(
+                        "ClassCastException occurred while creating the mockito mock :",
+                        "  class to mock : " + describeClass(mockedProxyType),
+                        "  created class : " + describeClass(settings.getTypeToMock()),
+                        "  proxy instance class : " + describeClass(mockInstance),
+                        "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
+                        "",
+                        "You might experience classloading issues, please ask the mockito mailing-list.",
+                        ""
+                ),cce);
+            } else {
+                throw new MockitoException(join(
+                        "ClassCastException occurred while creating the mockito mock :",
+                        "  class to mock : " + describeClass(mockedProxyType),
+                        "  created class : " + describeClass(settings.getTypeToMock()),
+                        "  proxy instance class : " + describeClass(mockInstance),
+                        "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
+                        "",
+                        "You might experience classloading issues, please ask the mockito mailing-list.",
+                        ""
+                ),cce);
+            }
         } catch (org.mockito.internal.creation.instance.InstantiationException e) {
             throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
         }
