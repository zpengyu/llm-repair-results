diff --git a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
index 57b411d0..f2f422d7 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
@@ -195,7 +195,7 @@ public class ArchiveStreamFactory {
      * @throws IllegalArgumentException if the stream is null or does not support mark
      */
     public ArchiveInputStream createArchiveInputStream(final InputStream in)
-            throws ArchiveException {
+        throws ArchiveException {
         if (in == null) {
             throw new IllegalArgumentException("Stream must not be null.");
         }
@@ -239,10 +235,11 @@ public class ArchiveStreamFactory {
             // COMPRESS-117 - improve auto-recognition
             if (signatureLength >= 512) {
                 try {
-                    TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader));
+                    TarArchiveInputStream tais = new TarArchiveInputStream(
+                        new ByteArrayInputStream(tarheader));
                     // COMPRESS-191 - verify the header checksum
                     tais.getNextEntry();
-                        return new TarArchiveInputStream(in);
+                    return new TarArchiveInputStream(in);
                 } catch (Exception e) { // NOPMD
                     // can generate IllegalArgumentException as well
                     // as IOException
@@ -251,9 +248,8 @@ public class ArchiveStreamFactory {
                 }
             }
         } catch (IOException e) {
-            throw new ArchiveException("Could not use reset and mark operations.", e);
+            throw new ArchiveException("Could not use reset and mark operations.",
+                e);
         }
-
         throw new ArchiveException("No Archiver found for the stream signature");
-    }
-}
+    }}
