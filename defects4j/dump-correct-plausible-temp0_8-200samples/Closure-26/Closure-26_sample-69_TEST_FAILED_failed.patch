diff --git a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
index f516e584..90446ea2 100644
--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
@@ -187,33 +181,15 @@ public class ProcessCommonJSModules implements CompilerPass {
       script.addChildToFront(IR.exprResult(
           IR.call(IR.getprop(IR.name("goog"), IR.string("provide")),
               IR.string(moduleName))).copyInformationFromForTree(script));
-
-      emitOptionalModuleExportsOverride(script, moduleName);
-
-      // Rename vars to not conflict in global scope.
-      NodeTraversal.traverse(compiler, script, new SuffixVarsCallback(
-          moduleName));
-
-      compiler.reportCodeChange();
-    }
-
-    /**
-     * Emit <code>if (moduleName.module$exports) {
-     *    moduleName = moduleName.module$export;
-     * }</code> at end of file.
-     */
-    private void emitOptionalModuleExportsOverride(Node script,
-        String moduleName) {
-
-      Node moduleExportsProp = IR.getprop(IR.name(moduleName),
+      // Rewrite module.exports to moduleName.module$exports.
+      Node moduleProp = IR.getprop(IR.name(moduleName),
           IR.string("module$exports"));
       script.addChildToBack(IR.ifNode(
-          moduleExportsProp,
-          IR.block(IR.exprResult(IR.assign(IR.name(moduleName),
-              moduleExportsProp.cloneTree())))).copyInformationFromForTree(
+          moduleProp,
+          IR.block(IR.exprResult(IR.assign(
+              IR.name(moduleName), moduleProp.cloneTree())))).copyInformationFromForTree(
           script));
     }
-
     /**
      * Rewrite module.exports to moduleName.module$exports.
      */
