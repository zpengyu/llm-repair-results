    public int parseInto(ReadWritableInstant instant, String text, int position) {
        DateTimeParser parser = requireParser();
        if (instant == null) {
            throw new IllegalArgumentException("Instant must not be null");
        }
        // bug [1613348]
        DateTimeParserBucket bucket = null;
        try {
            bucket = new DateTimeParserBucket(
                instant.getMillis(), instant.getChronology(), iLocale, iPivotYear, 2000);
        } catch (IllegalFieldValueException e) {
            bucket = new DateTimeParserBucket(
                DateTimeUtils.currentTimeMillis(), instant.getChronology(), iLocale, iPivotYear, 2000);
        }
        // bug [1613348]
        int newPos = parser.parseInto(bucket, text, position);
        instant.setMillis(bucket.computeMillis(false, text));
        if (iOffsetParsed && bucket.getOffsetInteger() != null) {
            int parsedOffset = bucket.getOffsetInteger();
            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
            instant.setChronology(instant.getChronology().withZone(parsedZone));
        } else if (bucket.getZone() != null) {
            instant.setChronology(instant.getChronology().withZone(bucket.getZone()));
        }
        if (iZone != null) {
            instant.setZone(iZone);
        }
        return newPos;
    }

