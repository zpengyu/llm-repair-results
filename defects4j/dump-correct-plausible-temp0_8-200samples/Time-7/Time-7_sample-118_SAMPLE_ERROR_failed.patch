diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java
index 8f9d3948..0237586a 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java
@@ -702,25 +702,25 @@ public class DateTimeFormatter {
         if (instant == null) {
             throw new IllegalArgumentException("Instant must not be null");
         }
-
-        long instantMillis = instant.getMillis();
-        Chronology chrono = instant.getChronology();
-        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
-        chrono = selectChronology(chrono);
-        int defaultYear = chrono.year().get(instantLocal);
-
-        DateTimeParserBucket bucket = new DateTimeParserBucket(
-            instantLocal, chrono, iLocale, iPivotYear, defaultYear);
+        // bug [1613348]
+        DateTimeParserBucket bucket = null;
+        try {
+            bucket = new DateTimeParserBucket(
+                instant.getMillis(), instant.getChronology(), iLocale, iPivotYear, 2000);
+        } catch (IllegalFieldValueException e) {
+            bucket = new DateTimeParserBucket(
+                DateTimeUtils.currentTimeMillis(), instant.getChronology(), iLocale, iPivotYear, 2000);
+        }
+        // bug [1613348]
         int newPos = parser.parseInto(bucket, text, position);
         instant.setMillis(bucket.computeMillis(false, text));
         if (iOffsetParsed && bucket.getOffsetInteger() != null) {
             int parsedOffset = bucket.getOffsetInteger();
             DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
-            chrono = chrono.withZone(parsedZone);
+            instant.setChronology(instant.getChronology().withZone(parsedZone));
         } else if (bucket.getZone() != null) {
-            chrono = chrono.withZone(bucket.getZone());
+            instant.setChronology(instant.getChronology().withZone(bucket.getZone()));
         }
-        instant.setChronology(chrono);
         if (iZone != null) {
             instant.setZone(iZone);
         }
