diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java
index 8f9d3948..5f9843d4 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java
@@ -713,15 +711,18 @@ public class DateTimeFormatter {
             instantLocal, chrono, iLocale, iPivotYear, defaultYear);
         int newPos = parser.parseInto(bucket, text, position);
         instant.setMillis(bucket.computeMillis(false, text));
-        if (iOffsetParsed && bucket.getOffsetInteger() != null) {
-            int parsedOffset = bucket.getOffsetInteger();
-            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
-            chrono = chrono.withZone(parsedZone);
-        } else if (bucket.getZone() != null) {
-            chrono = chrono.withZone(bucket.getZone());
-        }
-        instant.setChronology(chrono);
         if (iZone != null) {
+            DateTimeZone parsedZone = null;
+            if (iOffsetParsed && bucket.getOffsetInteger() != null) {
+                int parsedOffset = bucket.getOffsetInteger();
+                parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
+            } else if (bucket.getZone() != null) {
+                parsedZone = bucket.getZone();
+            }
+            if (parsedZone != null) {
+                chrono = chrono.withZone(parsedZone);
+                instant.setChronology(chrono);
+            }
             instant.setZone(iZone);
         }
         return newPos;
