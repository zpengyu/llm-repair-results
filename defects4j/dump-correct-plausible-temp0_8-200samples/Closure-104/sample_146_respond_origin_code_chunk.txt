  JSType meet(JSType that) {
    UnionTypeBuilder builder = new UnionTypeBuilder(registry);
    for (JSType alternate : alternates) {
      if (alternate.isSubtype(that)) {
        builder.addAlternate(alternate);
      }
    }

    if (that instanceof UnionType) {
      for (JSType otherAlternate : ((UnionType) that).alternates) {
        if (otherAlternate.isSubtype(this)) {
          builder.addAlternate(otherAlternate);
        }
      }
    } else if (that.isSubtype(this)) {
      builder.addAlternate(that);
    }

    // TODO(nicksantos): This should go away if we can fix the unions
    // algorithm to always do the right thing.
    if (this.isObject() && that.isObject()) {
      builder.addAlternate(getNativeType(JSTypeNative.NO_OBJECT_TYPE));
    }

    return builder.build();
  }
