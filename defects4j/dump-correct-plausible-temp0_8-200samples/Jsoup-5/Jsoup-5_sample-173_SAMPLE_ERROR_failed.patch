diff --git a/src/main/java/org/jsoup/parser/Parser.java b/src/main/java/org/jsoup/parser/Parser.java
index 5f71aaf..2e165bd 100644
--- a/src/main/java/org/jsoup/parser/Parser.java
+++ b/src/main/java/org/jsoup/parser/Parser.java
@@ -185,11 +185,22 @@ public class Parser {
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
-
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
+                if (key.length() != 0)
+                    return Attribute.createFromEncoded(key, value);
+                else {
+                    tq.consume();
+                    return null;
+                }
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
+                if (key.length() != 0)
+                    return Attribute.createFromEncoded(key, value);
+                else {
+                    tq.consume();
+                    return null;
+                }
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
@@ -197,18 +208,16 @@ public class Parser {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
+                if (key.length() != 0)
+                    return Attribute.createFromEncoded(key, value);
+                else {
+                    tq.consume();
+                    return null;
+                }
             }
-            tq.consumeWhitespace();
-        }
-        if (key.length() != 0)
-            return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-
-            return null;
         }
+        tq.consumeWhitespace();
     }
-
     private void parseTextNode() {
         TextNode textNode;
         // special case: handle string like "hello < there". first char will be "<", because of matchStartTag
