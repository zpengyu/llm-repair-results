diff --git a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
index 1cfcfa1b..603ffe11 100644
--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
@@ -1960,22 +1959,39 @@ public class ReaderBasedJsonParser // final in 2.3, earlier
             }
             char c = _inputBuffer[_inputPtr];
             int i = (int) c;
-            if (i <= maxCode) {
-                if (codes[i] != 0) {
-                    break;
+            if (i < maxCode && codes[i] != 0) {
+                if (c == '"' || c == '\\') { // we'll need a backslash?
+                    outBuf[outPtr++] = '\\';
+                }
+                // escape as needed:
+                outBuf[outPtr++] = (char) codes[i];
+                // anything to output?
+                if (outPtr >= outBuf.length) {
+                    outBuf = _textBuffer.finishCurrentSegment();
+                    outPtr = 0;
+                }
+                // either way, can skip the input char
+                ++_inputPtr;
+            } else {
+                if (c == '"' || c == '\\') { // we'll need a backslash?
+                    if (outPtr >= outBuf.length) {
+                        outBuf = _textBuffer.finishCurrentSegment();
+                        outPtr = 0;
+                    }
+                    outBuf[outPtr++] = '\\';
+                }
+                // Need more room?
+                if (outPtr >= outBuf.length) {
+                    outBuf = _textBuffer.finishCurrentSegment();
+                    outPtr = 0;
+                }
+                // Ok, let's add char to output:
+                outBuf[outPtr++] = c;
+                // Need more room?
+                if (outPtr >= outBuf.length) {
+                    outBuf = _textBuffer.finishCurrentSegment();
+                    outPtr = 0;
                 }
-            } else if (!Character.isJavaIdentifierPart(c)) {
-                break;
-            }
-            ++_inputPtr;
-            hash = (hash * CharsToNameCanonicalizer.HASH_MULT) + i;
-            // Ok, let's add char to output:
-            outBuf[outPtr++] = c;
-
-            // Need more room?
-            if (outPtr >= outBuf.length) {
-                outBuf = _textBuffer.finishCurrentSegment();
-                outPtr = 0;
             }
         }
         _textBuffer.setCurrentLength(outPtr);
