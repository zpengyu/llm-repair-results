diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
index 773d1fbd8..4ab2d3431 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
@@ -143,7 +129,8 @@ public final class StringArrayDeserializer
             deser = ctxt.handleSecondaryContextualization(deser, property);
         }
         // Ok ok: if all we got is the default String deserializer, can just forget about it
-        if (deser != null && this.isDefaultDeserializer(deser)) {
+        //DeserializerFactory.createDefaultImpl(DeserializationConfig cfg, JavaType baseType, JsonDeserializer<Object> defaultImpl)
+        if (deser != null && _isDefaultImpl(deser)) {
             deser = null;
         }
         if (_elementDeserializer != deser) {
@@ -151,4 +138,7 @@ public final class StringArrayDeserializer
         }
         return this;
     }
+    private static boolean _isDefaultImpl(JsonDeserializer<?> deser) {
+        return deser instanceof StdDeserializer<?> && ((StdDeserializer<?>) deser).getValueClass() == String.class;
+    }
 }
\ No newline at end of file
