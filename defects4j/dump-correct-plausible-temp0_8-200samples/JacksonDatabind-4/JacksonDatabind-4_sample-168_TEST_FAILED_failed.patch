diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
index 773d1fbd8..faa91752b 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
@@ -49,13 +44,10 @@ public final class StringArrayDeserializer
         if (_elementDeserializer != null) {
             return _deserializeCustom(jp, ctxt);
         }
-
-        final ObjectBuffer buffer = ctxt.leaseObjectBuffer();
+        ObjectBuffer buffer = ctxt.leaseObjectBuffer();
         Object[] chunk = buffer.resetAndStart();
-
         int ix = 0;
         JsonToken t;
-
             while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                 // Ok: no need to convert Strings, but must recognize nulls
                 String value;
@@ -83,13 +74,11 @@ public final class StringArrayDeserializer
      */
     protected final String[] _deserializeCustom(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-        final ObjectBuffer buffer = ctxt.leaseObjectBuffer();
+        ObjectBuffer buffer = ctxt.leaseObjectBuffer();
         Object[] chunk = buffer.resetAndStart();
         final JsonDeserializer<String> deser = _elementDeserializer;
-        
         int ix = 0;
         JsonToken t;
-
             while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                 // Ok: no need to convert Strings, but must recognize nulls
                 String value = (t == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);
