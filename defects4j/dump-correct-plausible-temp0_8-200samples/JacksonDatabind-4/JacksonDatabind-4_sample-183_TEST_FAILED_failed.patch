diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
index 773d1fbd8..f167d16a2 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
@@ -124,9 +111,11 @@ public final class StringArrayDeserializer
             }
             throw ctxt.mappingException(_valueClass);
         }
+        if (_elementDeserializer != null) {
+            return new String[] { (jp.getCurrentToken() == JsonToken.VALUE_NULL) ? null : _elementDeserializer.deserialize(jp, ctxt) };
+        }
         return new String[] { (jp.getCurrentToken() == JsonToken.VALUE_NULL) ? null : _parseString(jp, ctxt) };
     }
-
     /**
      * Contextualization is needed to see whether we can "inline" deserialization
      * of String values, or if we have to use separate value deserializer.
