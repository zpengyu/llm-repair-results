diff --git a/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java b/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java
index 6220b91..bbaf573 100644
--- a/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java
+++ b/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java
@@ -109,10 +109,9 @@ public class WriteableCommandLineImpl
     }
 
     public List getValues(final Option option,
-                          List defaultValues) {
+                          final List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
-
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
@@ -122,13 +120,24 @@ public class WriteableCommandLineImpl
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
-
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+        // make sure the original list is not null
+        if (valueList == null) {
+            valueList = new ArrayList();
+        }
+        // make sure the default list is not null
+        if (defaultValues == null) {
+            defaultValues = Collections.EMPTY_LIST;
+        }
+        // if there are more default values as specified, add them to
+        // the list.
+        for (int size = valueList.size(); size < defaultValues.size(); size++) {
+            Object value = defaultValues.get(size);
+            if (!valueList.contains(value)) {
+                valueList.add(value);
+            }
+        }
+        return valueList;
     }
-
     public List getUndefaultedValues(Option option) {
       // First grab the command line values
       List valueList = (List) values.get(option);
