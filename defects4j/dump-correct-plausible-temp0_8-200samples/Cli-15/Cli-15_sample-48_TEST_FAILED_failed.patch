diff --git a/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java b/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java
index 6220b91..69ed494 100644
--- a/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java
+++ b/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java
@@ -109,26 +109,35 @@ public class WriteableCommandLineImpl
     }
 
     public List getValues(final Option option,
-                          List defaultValues) {
+        final List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
-
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
-
         // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+            List defaultValueList = (List) this.defaultValues.get(option);
+            if (defaultValueList != null) {
+                int numDefaultValues = defaultValueList.size();
+                for (int i = 0; i < numDefaultValues; i++) {
+                    valueList.add(defaultValueList.get(i));
+                }
+            }
+        }
+        // if there are more default values as specified, add them to
+        // the list.
+        // copy the list first
+        if ((defaultValues != null) && (defaultValues.size() > valueList.size())) {
+            valueList = new ArrayList(valueList);
+            int numDefaultValues = defaultValues.size();
+            for (int i = valueList.size(); i < numDefaultValues; i++) {
+                valueList.add(defaultValues.get(i));
+            }
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
-
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
-
     public List getUndefaultedValues(Option option) {
       // First grab the command line values
       List valueList = (List) values.get(option);
