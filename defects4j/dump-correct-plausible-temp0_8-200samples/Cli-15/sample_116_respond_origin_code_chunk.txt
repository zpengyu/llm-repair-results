    public List getValues(final Option option,
                          final List defaultValues) {
        // initialize the return list
        List valueList = (List) values.get(option);

        // grab the correct default values
        if ((valueList == null) || valueList.isEmpty()) {
            valueList = defaultValues;
        }

        // augment the list with the default values
        if ((valueList == null) || valueList.isEmpty()) {
            valueList = (List) this.defaultValues.get(option);
        }
                // if there are more default values as specified, add them to
                // the list.
        if ((valueList != null) && (defaultValues != null)
            && !defaultValues.isEmpty()) {
            final int size = valueList.size();
            for (int i = 0; i < size; i++) {
                final Object value = valueList.get(i);

                if (defaultValues.contains(value)) {
                    valueList.addAll(defaultValues.subList(
                            defaultValues.indexOf(value) + 1,
                            defaultValues.size()));

                    break;
                }
            }
        }
                // copy the list first
        return valueList == null ? Collections.EMPTY_LIST : valueList;
    }

