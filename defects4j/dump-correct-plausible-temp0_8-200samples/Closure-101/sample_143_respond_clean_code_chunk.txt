  protected CompilerOptions createOptions() {
    CompilerOptions options = new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level = flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel = flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
    if (flags.process_closure_primitives) {
      options.closurePass = true;
    }
    initOptionsFromFlags(options);
    if (options.manageClosureDependencies) {
      flags.deps = options.manageClosureDependencies;
      try {
        flags.setManageClosureDependencies(flags.deps);
      } catch (FlagUsageException e) {
        // If this happens, it means the flag is set incorrectly.
        throw new RuntimeException("bad dependency management flag");
      }
    }
    return options;
  }