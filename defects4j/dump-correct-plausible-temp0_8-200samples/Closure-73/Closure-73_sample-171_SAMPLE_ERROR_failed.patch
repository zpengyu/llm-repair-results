diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java
index b58df9b3..0d654134 100644
--- a/src/com/google/javascript/jscomp/CodeGenerator.java
+++ b/src/com/google/javascript/jscomp/CodeGenerator.java
@@ -1014,15 +1014,13 @@ class CodeGenerator {
         case '<':
           // Break </script into <\/script
           final String END_SCRIPT = "/script";
-
           // Break <!-- into <\!--
           final String START_COMMENT = "!--";
-
           if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
-                              END_SCRIPT.length())) {
+                  END_SCRIPT.length())) {
             sb.append("<\\");
           } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
-                                     START_COMMENT.length())) {
+                  START_COMMENT.length())) {
             sb.append("<\\");
           } else {
             sb.append(c);
@@ -1056,7 +1054,25 @@ class CodeGenerator {
     sb.append(quote);
     return sb.toString();
   }
-
+  private static void appendHexJavaScriptRepresentation(
+      StringBuilder sb, char c) {
+    // We assume that we're called only when we know that the character
+    // needs to be escaped.
+    sb.append('\\');
+    if (c < 16) {
+      sb.append('x');
+      sb.append('0');
+      sb.append(Integer.toHexString(c));
+    } else if (c < 256) {
+      sb.append('x');
+      sb.append(Integer.toHexString(c));
+    } else {
+      // TODO(nicksantos): This actually needs to be UTF-16 escaping,
+      // according to the spec.  But this will work for now.
+      sb.append('u');
+      sb.append(Integer.toHexString(c));
+    }
+  }
   static String identifierEscape(String s) {
     // First check if escaping is needed at all -- in most cases it isn't.
     if (NodeUtil.isLatin(s)) {
