diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java
index b58df9b3..ca64ba80 100644
--- a/src/com/google/javascript/jscomp/CodeGenerator.java
+++ b/src/com/google/javascript/jscomp/CodeGenerator.java
@@ -1004,8 +1004,8 @@ class CodeGenerator {
         case '\'': sb.append(singlequoteEscape); break;
         case '>':                       // Break --> into --\> or ]]> into ]]\>
           if (i >= 2 &&
-              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
-               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
+                  ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
+                          (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
             sb.append("\\>");
           } else {
             sb.append(c);
@@ -1014,15 +1014,13 @@ class CodeGenerator {
         case '<':
           // Break </script into <\/script
           final String END_SCRIPT = "/script";
-
           // Break <!-- into <\!--
           final String START_COMMENT = "!--";
-
           if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
-                              END_SCRIPT.length())) {
+                  END_SCRIPT.length())) {
             sb.append("<\\");
           } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
-                                     START_COMMENT.length())) {
+                  START_COMMENT.length())) {
             sb.append("<\\");
           } else {
             sb.append(c);
@@ -1056,7 +1054,16 @@ class CodeGenerator {
     sb.append(quote);
     return sb.toString();
   }
-
+  static void appendHexJavaScriptRepresentation(
+          StringBuilder sb, int c) {
+    sb.append("\\u");
+    String hexChars = "0123456789ABCDEF";
+    int d = c & 0xF;
+    sb.append(hexChars.charAt((c & 0xF000) >> 12));
+    sb.append(hexChars.charAt((c & 0xF00) >> 8));
+    sb.append(hexChars.charAt((c & 0xF0) >> 4));
+    sb.append(hexChars.charAt(d));
+  }
   static String identifierEscape(String s) {
     // First check if escaping is needed at all -- in most cases it isn't.
     if (NodeUtil.isLatin(s)) {
