diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 53e8cb48..2cffd6b3 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -544,10 +543,6 @@ class TypeInference
         // is as narrow as it can possibly be, but we need to make
         // sure we back-infer the <string> element constraint on
         // the left hand side, so we use the left hand side.
-
-        boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
-            // Makes it easier to check for NPEs.
-
         // TODO(nicksantos): This might be a better check once we have
         // back-inference of object/array constraints.  It will probably
         // introduce more type warnings.  It uses the result type iff it's
@@ -556,8 +551,8 @@ class TypeInference
         //boolean isVarTypeBetter = isVarDeclaration &&
         //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
         //     || !resultType.isSubtype(varType));
-
-
+        // Explicitly declared types are better than inferred types.
+        boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
         if (isVarTypeBetter) {
           redeclareSimpleVar(scope, left, resultType);
         }
