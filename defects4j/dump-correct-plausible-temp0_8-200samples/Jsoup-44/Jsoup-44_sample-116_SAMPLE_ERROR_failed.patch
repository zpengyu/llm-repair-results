diff --git a/src/main/java/org/jsoup/parser/TreeBuilder.java b/src/main/java/org/jsoup/parser/TreeBuilder.java
index f4faad4..e083d9c 100644
--- a/src/main/java/org/jsoup/parser/TreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/TreeBuilder.java
@@ -11,17 +11,16 @@ import java.util.ArrayList;
  * @author Jonathan Hedley
  */
 abstract class TreeBuilder {
-    CharacterReader reader;
-    Tokeniser tokeniser;
+    protected CharacterReader reader;
+    protected Tokeniser tokeniser;
     protected Document doc; // current doc we are building into
     protected ArrayList<Element> stack; // the stack of open elements
     protected String baseUri; // current base uri, for creating new elements
     protected Token currentToken; // currentToken is used only for error tracking.
     protected ParseErrorList errors; // null when not tracking errors
-
+    protected boolean selfClosingFlagAcknowledged = true;
     private Token.StartTag start = new Token.StartTag(); // start tag to process
     private Token.EndTag end  = new Token.EndTag();
-
     protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {
         Validate.notNull(input, "String input must not be null");
         Validate.notNull(baseUri, "BaseURI must not be null");
@@ -54,24 +48,25 @@ abstract class TreeBuilder {
                 break;
         }
     }
-
     protected abstract boolean process(Token token);
-
     protected boolean processStartTag(String name) {
-        return process(start.reset().name(name));
+        if (selfClosingFlagAcknowledged) {
+            selfClosingFlagAcknowledged = false;
+            return process(start.reset().name(name));
+        } else {
+            return process(start.reset().nameAttr(name, emptyAttributes));
+        }
     }
-
     public boolean processStartTag(String name, Attributes attrs) {
+        selfClosingFlagAcknowledged = false;
         start.reset();
         start.nameAttr(name, attrs);
         return process(start);
     }
-
     protected boolean processEndTag(String name) {
+        selfClosingFlagAcknowledged = false;
         return process(end.reset().name(name));
     }
-
-
     protected Element currentElement() {
         int size = stack.size();
         return size > 0 ? stack.get(size-1) : null;
