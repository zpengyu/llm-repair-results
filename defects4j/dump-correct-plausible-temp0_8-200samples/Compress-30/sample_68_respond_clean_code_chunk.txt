    public int read(final byte[] dest, int offs, int len)
        throws IOException {
        if (offs < 0) {
            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
        }
        if (len < 0) {
            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
        }
        if (offs + len > dest.length) {
            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                                + len + ") > dest.length(" + dest.length + ").");
        }
        if (this.in == null) {
            throw new IOException("stream closed");
        }
        while (len > 0) {
            final int b = read0();
            if (b < 0) {
                return (offs - offs) ? offs : -1;
            }
            dest[offs++] = (byte) b;
            count(1);
            --len;
        }
        return offs - offs;
    }