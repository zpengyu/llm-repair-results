    public int read(final byte[] dest, final int offs, final int len)
        throws IOException {
        if (offs < 0 || len < 0 || len > dest.length - offs) {
            throw new IndexOutOfBoundsException();
        }
        if (this.in == null) {
            throw new IOException("stream closed");
        }
        if (0 == len) {
            return 0;
        }
        final int hi = offs + len;
        int destOffs = offs;
        int b;
        while (destOffs < hi && ((b = read0()) >= 0)) {
            dest[destOffs++] = (byte) b;
            count(1);
        }
        int c = (destOffs == offs) ? -1 : (destOffs - offs);
        return c;
    }