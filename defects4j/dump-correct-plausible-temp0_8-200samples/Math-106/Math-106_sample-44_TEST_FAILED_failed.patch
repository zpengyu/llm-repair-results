diff --git a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
index df2713da8..cba36478f 100644
--- a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
+++ b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
@@ -161,32 +156,27 @@ public class ProperFractionFormat extends FractionFormat {
             pos.setIndex(initialIndex);
             return null;
         }
-        
-            // minus signs should be leading, invalid expression
-
         // parse '/'
         int startIndex = pos.getIndex();
         char c = parseNextCharacter(source, pos);
         switch (c) {
-        case 0 :
-            // no '/'
-            // return num as a fraction
-            return new Fraction(num.intValue(), 1);
-        case '/' :
-            // found '/', continue parsing denominator
-            break;
-        default :
-            // invalid '/'
-            // set index back to initial, error index should be the last
-            // character examined.
-            pos.setIndex(initialIndex);
-            pos.setErrorIndex(startIndex);
-            return null;
+            case 0 :
+                // no '/'
+                // return num as a fraction
+                return new Fraction(num.intValue(), 1);
+            case '/' :
+                // found '/', continue parsing denominator
+                break;
+            default :
+                // invalid '/'
+                // set index back to initial, error index should be the last
+                // character examined.
+                pos.setIndex(initialIndex);
+                pos.setErrorIndex(startIndex);
+                return null;
         }
-
         // parse whitespace
         parseAndIgnoreWhitespace(source, pos);
-
         // parse denominator
         Number den = getDenominatorFormat().parse(source, pos);
         if (den == null) {
@@ -196,15 +186,11 @@ public class ProperFractionFormat extends FractionFormat {
             pos.setIndex(initialIndex);
             return null;
         }
-        
-            // minus signs must be leading, invalid
-
         int w = whole.intValue();
         int n = num.intValue();
         int d = den.intValue();
-        return new Fraction(((Math.abs(w) * d) + n) * MathUtils.sign(w), d);
+        return new Fraction((w * d) + n, d);
     }    
-    
     /**
      * Modify the whole format.
      * @param format The new whole format value.
