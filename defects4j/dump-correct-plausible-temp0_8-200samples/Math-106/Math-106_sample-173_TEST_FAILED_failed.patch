diff --git a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
index df2713da8..916fe7510 100644
--- a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
+++ b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
@@ -133,37 +133,22 @@ public class ProperFractionFormat extends FractionFormat {
         if (ret != null) {
             return ret;
         }
-        
-        int initialIndex = pos.getIndex();
-
         // parse whitespace
         parseAndIgnoreWhitespace(source, pos);
-
         // parse whole
         Number whole = getWholeFormat().parse(source, pos);
         if (whole == null) {
             // invalid integer number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
             return null;
         }
-
         // parse whitespace
         parseAndIgnoreWhitespace(source, pos);
-        
         // parse numerator
         Number num = getNumeratorFormat().parse(source, pos);
         if (num == null) {
             // invalid integer number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
             return null;
         }
-        
-            // minus signs should be leading, invalid expression
-
         // parse '/'
         int startIndex = pos.getIndex();
         char c = parseNextCharacter(source, pos);
@@ -179,7 +164,6 @@ public class ProperFractionFormat extends FractionFormat {
             // invalid '/'
             // set index back to initial, error index should be the last
             // character examined.
-            pos.setIndex(initialIndex);
             pos.setErrorIndex(startIndex);
             return null;
         }
@@ -191,20 +173,13 @@ public class ProperFractionFormat extends FractionFormat {
         Number den = getDenominatorFormat().parse(source, pos);
         if (den == null) {
             // invalid integer number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
             return null;
         }
-        
-            // minus signs must be leading, invalid
-
         int w = whole.intValue();
         int n = num.intValue();
         int d = den.intValue();
-        return new Fraction(((Math.abs(w) * d) + n) * MathUtils.sign(w), d);
+        return new Fraction((Math.abs(w) * d + n) * MathUtils.sign(w), d);
     }    
-    
     /**
      * Modify the whole format.
      * @param format The new whole format value.
