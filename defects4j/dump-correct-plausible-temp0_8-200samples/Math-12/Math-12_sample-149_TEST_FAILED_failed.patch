diff --git a/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java b/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
index 33d350cb1..4ba5ad749 100644
--- a/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
+++ b/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
@@ -93,29 +84,21 @@ public abstract class BitsStreamGenerator
     public float nextFloat() {
         return next(23) * 0x1.0p-23f;
     }
-
     /** {@inheritDoc} */
     public double nextGaussian() {
-
-        final double random;
         if (Double.isNaN(nextGaussian)) {
             // generate a new pair of gaussian numbers
             final double x = nextDouble();
             final double y = nextDouble();
             final double alpha = 2 * FastMath.PI * x;
             final double r      = FastMath.sqrt(-2 * FastMath.log(y));
-            random       = r * FastMath.cos(alpha);
-            nextGaussian = r * FastMath.sin(alpha);
-        } else {
-            // use the second element of the pair already generated
-            random = nextGaussian;
-            nextGaussian = Double.NaN;
+            nextGaussian       = r * FastMath.cos(alpha);
+            return r * FastMath.sin(alpha);
         }
-
-        return random;
-
+        final double result = nextGaussian;
+        nextGaussian = Double.NaN;
+        return result;
     }
-
     /** {@inheritDoc} */
     public int nextInt() {
         return next(32);
