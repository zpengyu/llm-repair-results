  private void visitParameterList(NodeTraversal t, Node call,
      FunctionType functionType) {
    Iterator<Node> arguments = call.children().iterator();
    arguments.next(); // skip the function name
    Iterator<Node> parameters = functionType.getParameters().iterator();
    int ordinal = 0;
    Node parameter = null;
    Node argument = null;
    while (arguments.hasNext()) {
      argument = arguments.next();
      if (parameters.hasNext()) {
        parameter = parameters.next();
        ordinal++;
        validator.expectArgumentMatchesParameter(t, argument,
            getJSType(argument), getJSType(parameter), call, ordinal);
      } else {
        if (!argument.isSpread()) {
          validator.expectParameterType(
              t,
              getJSType(argument),
              getNativeType(JSTypeNative.UNKNOWN_TYPE),
              argument,
              call);
        }
      }
    }
  }