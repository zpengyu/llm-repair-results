diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
index aeaa0dc42..a7e16232c 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
@@ -425,33 +425,29 @@ System.err.println("And new propr #"+slot+" '"+key+"'");
      */
     public void remove(SettableBeanProperty propToRm)
     {
-        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
-
-        for (int i = 1, end = _hashArea.length; i < end; i += 2) {
-            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
+        SettableBeanProperty[] newProps = new SettableBeanProperty[_size - 1];
+        int newPos = 0;
+        for (int i = 0; i < _size; i++) {
+            SettableBeanProperty prop = _propsInOrder[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
                 found = key.equals(prop.getName());
                 if (found) {
-                    // need to leave a hole here
-                    _propsInOrder[_findFromOrdered(prop)] = null;
                     continue;
                 }
             }
-            props.add(prop);
+            newProps[newPos] = prop;
+            newPos++;
         }
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
-        init(props);
+        init(newProps);
     }
-
     /**
      * Convenience method that tries to find property with given name, and
      * if it is found, call {@link SettableBeanProperty#deserializeAndSet}
