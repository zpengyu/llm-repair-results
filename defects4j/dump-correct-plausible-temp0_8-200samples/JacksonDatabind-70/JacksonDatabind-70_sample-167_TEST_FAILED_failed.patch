diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
index aeaa0dc42..2594cb4e5 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
@@ -423,35 +423,18 @@ System.err.println("And new propr #"+slot+" '"+key+"'");
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
-    public void remove(SettableBeanProperty propToRm)
-    {
-        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
-        String key = getPropertyName(propToRm);
-        boolean found = false;
-
-        for (int i = 1, end = _hashArea.length; i < end; i += 2) {
-            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
-            if (prop == null) {
-                continue;
-            }
-            if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
-                    _propsInOrder[_findFromOrdered(prop)] = null;
-                    continue;
-                }
-            }
-            props.add(prop);
-        }
-        if (!found) {
-            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
-        }
-        init(props);
+public void remove(SettableBeanProperty propToRm)
+{
+    int i = _findIndexInHash(propToRm.getName());
+    if (i < 0) {
+        throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
     }
-
+    _hashArea[i] = null;
+    i = _findFromOrdered(propToRm);
+    if (i >= 0) {
+        _propsInOrder[i] = null;
+    }
+}
     /**
      * Convenience method that tries to find property with given name, and
      * if it is found, call {@link SettableBeanProperty#deserializeAndSet}
