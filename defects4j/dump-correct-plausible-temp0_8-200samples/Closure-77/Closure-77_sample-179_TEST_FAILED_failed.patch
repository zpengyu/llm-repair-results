diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java
index a9d0a5b0..0262d931 100644
--- a/src/com/google/javascript/jscomp/CodeGenerator.java
+++ b/src/com/google/javascript/jscomp/CodeGenerator.java
@@ -954,10 +954,10 @@ class CodeGenerator {
 
   /** Helper to escape javascript string as well as regular expression */
   static String strEscape(String s, char quote,
-                          String doublequoteEscape,
-                          String singlequoteEscape,
-                          String backslashEscape,
-                          CharsetEncoder outputCharsetEncoder) {
+      String doublequoteEscape,
+      String singlequoteEscape,
+      String backslashEscape,
+      CharsetEncoder outputCharsetEncoder) {
     StringBuilder sb = new StringBuilder(s.length() + 2);
     sb.append(quote);
     for (int i = 0; i < s.length(); i++) {
@@ -1011,6 +1009,11 @@ class CodeGenerator {
             // check is measurably faster than using the CharsetEncoder.
             if (c > 0x1f && c <= 0x7f) {
               sb.append(c);
+            } else if (c == 0x2028 || c == 0x2029) {
+              // Don't pass these characters through directly.  This is
+              // a workaround for a bug in Firefox where these characters
+              // are being treated as newlines.
+              appendHexJavaScriptRepresentation(sb, c);
             } else {
               // Other characters can be misinterpreted by some js parsers,
               // or perhaps mangled by proxies along the way,
