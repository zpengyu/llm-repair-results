diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index a5b356fb..c80794cc 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -896,10 +894,15 @@ final class TypedScopeCreator implements ScopeCreator {
       // scope where the root object appears. This helps out people
       // who declare "global" names in an anonymous namespace.
       Scope scopeToDeclareIn = scope;
-
-        // don't try to declare in the global scope if there's
-        // already a symbol there with this name.
-
+      // don't try to declare in the global scope if there's
+      // already a symbol there with this name.
+      if (!scopeToDeclareIn.isGlobal()) {
+        scopeToDeclareIn = scopeToDeclareIn.getClosestContainerScope();
+      } else if (scopeToDeclareIn.isDeclared(variableName, false)) {
+        Var oldVar = scopeToDeclareIn.getVar(variableName);
+        validator.expectUndeclaredVariable(
+            sourceName, n, parent, oldVar, variableName, type);
+      }
       // declared in closest scope?
       if (scopeToDeclareIn.isDeclared(variableName, false)) {
         Var oldVar = scopeToDeclareIn.getVar(variableName);
@@ -943,7 +944,7 @@ final class TypedScopeCreator implements ScopeCreator {
         }
       }
     }
-
+  }
     /**
      * Check if the given node is a property of a name in the global scope.
      */
