diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index a5b356fb..5167b696 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -896,12 +894,17 @@ final class TypedScopeCreator implements ScopeCreator {
       // scope where the root object appears. This helps out people
       // who declare "global" names in an anonymous namespace.
       Scope scopeToDeclareIn = scope;
-
-        // don't try to declare in the global scope if there's
-        // already a symbol there with this name.
-
-      // declared in closest scope?
-      if (scopeToDeclareIn.isDeclared(variableName, false)) {
+      if (n.isGetProp()) {
+        Node root = n.getFirstChild();
+        Preconditions.checkState(root.isName() || root.isGetProp());
+        if (!scopeToDeclareIn.isDeclared(root.getQualifiedName(), true)) {
+          scopeToDeclareIn = scopeToDeclareIn.getClosestContainerScope();
+        }
+      }
+      // don't try to declare in the global scope if there's
+      // already a symbol there with this name.
+      if (scopeToDeclareIn.isGlobal() &&
+          scopeToDeclareIn.isDeclared(variableName, false)) {
         Var oldVar = scopeToDeclareIn.getVar(variableName);
         validator.expectUndeclaredVariable(
             sourceName, n, parent, oldVar, variableName, type);
