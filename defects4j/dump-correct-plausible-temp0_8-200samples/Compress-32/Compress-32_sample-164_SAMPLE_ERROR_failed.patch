diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 87ff4aab..fc218bd2 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -508,7 +508,7 @@ public class TarArchiveInputStream extends ArchiveInputStream {
             } else if ("size".equals(key)){
                 currEntry.setSize(Long.parseLong(val));
             } else if ("mtime".equals(key)){
-                currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
+                currEntry.setModTime(extractLongValue(val));
             } else if ("SCHILY.devminor".equals(key)){
                 currEntry.setDevMinor(Integer.parseInt(val));
             } else if ("SCHILY.devmajor".equals(key)){
@@ -516,7 +516,26 @@ public class TarArchiveInputStream extends ArchiveInputStream {
             }
         }
     }
-
+    private static long extractLongValue(String val) {
+        long result;
+        if (val.length() > 18 || val.length() == 17
+                && val.charAt(0) > '1') {
+            // PAX standard limits it to 18 decimal digits
+            try {
+                BigInteger bi = new BigInteger(val);
+                result = bi.longValue();
+            } catch (NumberFormatException ex) {
+                result = 0;
+            }
+        } else {
+            try {
+                result = Long.parseLong(val);
+            } catch (NumberFormatException ex) {
+                result = 0;
+            }
+        }
+        return result;
+    }
     /**
      * Adds the sparse chunks from the current entry to the sparse chunks,
      * including any additional sparse entries following the current entry.
