diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 87ff4aab..160c0261 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -498,21 +498,45 @@ public class TarArchiveInputStream extends ArchiveInputStream {
             } else if ("linkpath".equals(key)){
                 currEntry.setLinkName(val);
             } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
+                try{
+                    currEntry.setGroupId(Integer.parseInt(val));
+                } catch (NumberFormatException ex){
+                    Log.debug("Error parsing gid - this entry will have a default gid.");
+                }
             } else if ("gname".equals(key)){
                 currEntry.setGroupName(val);
             } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
+                try{
+                    currEntry.setUserId(Integer.parseInt(val));
+                } catch (NumberFormatException ex){
+                    Log.debug("Error parsing uid - this entry will have a default uid.");
+                }
             } else if ("uname".equals(key)){
                 currEntry.setUserName(val);
             } else if ("size".equals(key)){
-                currEntry.setSize(Long.parseLong(val));
+                try{
+                    currEntry.setSize(Long.parseLong(val));
+                } catch (NumberFormatException ex){
+                    Log.debug("Error parsing size - this entry will have a default size.");
+                }
             } else if ("mtime".equals(key)){
-                currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
+                try{
+                    currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
+                } catch (NumberFormatException ex){
+                    Log.debug("Error parsing mtime - this entry will have a default mtime.");
+                }
             } else if ("SCHILY.devminor".equals(key)){
-                currEntry.setDevMinor(Integer.parseInt(val));
+                try{
+                    currEntry.setDevMinor(Integer.parseInt(val));
+                } catch (NumberFormatException ex){
+                    Log.debug("Error parsing devminor - this entry will have a default devminor.");
+                }
             } else if ("SCHILY.devmajor".equals(key)){
-                currEntry.setDevMajor(Integer.parseInt(val));
+                try{
+                    currEntry.setDevMajor(Integer.parseInt(val));
+                } catch (NumberFormatException ex){
+                    Log.debug("Error parsing devmajor - this entry will have a default devmajor.");
+                }
             }
         }
     }
