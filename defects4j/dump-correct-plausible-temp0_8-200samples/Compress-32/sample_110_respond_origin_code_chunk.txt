private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
    /*
     * The following headers are defined for Pax.
     * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
     * mtime
     * comment
     * gid, gname
     * linkpath
     * size
     * uid,uname
     * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
     */
    if (headers.containsKey("path") && headers.get("path") != null){
        currEntry.setName(headers.get("path"));
    }
    if (headers.containsKey("linkpath") && headers.get("linkpath") != null){
        currEntry.setLinkName(headers.get("linkpath"));
    }
    if (headers.containsKey("gid") && headers.get("gid") != null){
        currEntry.setGroupId(Integer.parseInt(headers.get("gid")));
    }
    if (headers.containsKey("gname") && headers.get("gname") != null){
        currEntry.setGroupName(headers.get("gname"));
    }
    if (headers.containsKey("uid") && headers.get("uid") != null){
        currEntry.setUserId(Integer.parseInt(headers.get("uid")));
    }
    if (headers.containsKey("uname") && headers.get("uname") != null){
        currEntry.setUserName(headers.get("uname"));
    }
    if (headers.containsKey("size") && headers.get("size") != null){
        currEntry.setSize(Long.parseLong(headers.get("size")));
    }
    if (headers.containsKey("mtime") && headers.get("mtime") != null){
        currEntry.setModTime((long) (Double.parseDouble(headers.get("mtime")) * 1000));
    }
    if (headers.containsKey("SCHILY.devminor") && headers.get("SCHILY.devminor") != null){
        currEntry.setDevMinor(Integer.parseInt(headers.get("SCHILY.devminor")));
    }
    if (headers.containsKey("SCHILY.devmajor") && headers.get("SCHILY.devmajor") != null){
        currEntry.setDevMajor(Integer.parseInt(headers.get("SCHILY.devmajor")));
    }
}


