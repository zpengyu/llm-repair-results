diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 87ff4aab..265041bd 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -506,17 +506,33 @@ public class TarArchiveInputStream extends ArchiveInputStream {
             } else if ("uname".equals(key)){
                 currEntry.setUserName(val);
             } else if ("size".equals(key)){
-                currEntry.setSize(Long.parseLong(val));
+                if (isDigits(val)){
+                    currEntry.setSize(Long.parseLong(val));
+                }
             } else if ("mtime".equals(key)){
-                currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
+                if (isDigits(val)){
+                    currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
+                }
             } else if ("SCHILY.devminor".equals(key)){
-                currEntry.setDevMinor(Integer.parseInt(val));
+                if (isDigits(val)){
+                    currEntry.setDevMinor(Integer.parseInt(val));
+                }
             } else if ("SCHILY.devmajor".equals(key)){
-                currEntry.setDevMajor(Integer.parseInt(val));
+                if (isDigits(val)){
+                    currEntry.setDevMajor(Integer.parseInt(val));
+                }
             }
         }
     }
-
+    public static boolean isDigits(String str){
+        if(str == null || str.equals(""))
+            return false;
+        Pattern pattern = Pattern.compile("[0-9]*");
+        Matcher isNum = pattern.matcher(str);
+        if( !isNum.matches() )
+            return false;
+        return true;
+    }
     /**
      * Adds the sparse chunks from the current entry to the sparse chunks,
      * including any additional sparse entries following the current entry.
