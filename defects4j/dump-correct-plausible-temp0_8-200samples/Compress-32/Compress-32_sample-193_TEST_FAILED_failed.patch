diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
index 87ff4aab..19f9dfb2 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
@@ -498,21 +498,39 @@ public class TarArchiveInputStream extends ArchiveInputStream {
             } else if ("linkpath".equals(key)){
                 currEntry.setLinkName(val);
             } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
+                int groupId = Integer.parseInt(val);
+                if (groupId >= 0 && groupId <= Integer.MAX_VALUE) {
+                    currEntry.setGroupId(groupId);
+                }
             } else if ("gname".equals(key)){
                 currEntry.setGroupName(val);
             } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
+                int userId = Integer.parseInt(val);
+                if (userId >= 0 && userId <= Integer.MAX_VALUE) {
+                    currEntry.setUserId(userId);
+                }
             } else if ("uname".equals(key)){
                 currEntry.setUserName(val);
             } else if ("size".equals(key)){
-                currEntry.setSize(Long.parseLong(val));
+                long size = Long.parseLong(val);
+                if (size >= 0 && size <= Integer.MAX_VALUE) {
+                    currEntry.setSize(size);
+                }
             } else if ("mtime".equals(key)){
-                currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
+                double modTime = Double.parseDouble(val);
+                if (modTime >= 0 && modTime <= Integer.MAX_VALUE) {
+                    currEntry.setModTime((long) (modTime * 1000));
+                }
             } else if ("SCHILY.devminor".equals(key)){
-                currEntry.setDevMinor(Integer.parseInt(val));
+                int devMinor = Integer.parseInt(val);
+                if (devMinor >= 0 && devMinor <= Integer.MAX_VALUE) {
+                    currEntry.setDevMinor(devMinor);
+                }
             } else if ("SCHILY.devmajor".equals(key)){
-                currEntry.setDevMajor(Integer.parseInt(val));
+                int devMajor = Integer.parseInt(val);
+                if (devMajor >= 0 && devMajor <= Integer.MAX_VALUE) {
+                    currEntry.setDevMajor(devMajor);
+                }
             }
         }
     }
