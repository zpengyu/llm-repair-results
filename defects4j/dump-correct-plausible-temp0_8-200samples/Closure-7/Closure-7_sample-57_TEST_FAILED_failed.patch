diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
index 965d2eb2..16629f44 100644
--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
@@ -607,16 +607,15 @@ public abstract class ChainableReverseAbstractInterpreter
     }
 
     @Override
-    public JSType caseObjectType(ObjectType type) {
-      if (value.equals("function")) {
-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
-      }
-      return matchesExpectation("object") ? type : null;
-    }
-
+     public JSType caseObjectType(ObjectType type) {
+       if (value.equals("function") || value.equals("object")) {
+         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
+         return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
+           // Objects are restricted to "Function" and "Object", subtypes are left
+           // Only filter out subtypes of "function"
+       }
+       return matchesExpectation("object") ? type : null;
+     }
     @Override
     public JSType caseStringType() {
       return matchesExpectation("string") ? getNativeType(STRING_TYPE) : null;
