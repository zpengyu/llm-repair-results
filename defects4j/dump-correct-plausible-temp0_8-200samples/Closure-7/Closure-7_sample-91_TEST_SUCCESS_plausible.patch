diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
index 965d2eb2..520a3e2c 100644
--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
@@ -608,15 +608,21 @@ public abstract class ChainableReverseAbstractInterpreter
 
     @Override
     public JSType caseObjectType(ObjectType type) {
-      if (value.equals("function")) {
-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
-      }
-      return matchesExpectation("object") ? type : null;
+        if (value.equals("function")) {
+            JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
+            if (resultEqualsValue && ctorType.isSubtype(type)) {
+                return ctorType;
+            }
+            // Objects are restricted to "Function", subtypes are left
+            // Only filter out subtypes of "function"
+            if (resultEqualsValue) {
+                return null;
+            }
+            // Only subtypes of Function are left, no need to look further
+            return type;
+        }
+        return matchesExpectation("object") ? type : null;
     }
-
     @Override
     public JSType caseStringType() {
       return matchesExpectation("string") ? getNativeType(STRING_TYPE) : null;
