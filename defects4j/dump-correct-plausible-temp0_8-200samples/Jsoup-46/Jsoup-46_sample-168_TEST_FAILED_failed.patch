diff --git a/src/main/java/org/jsoup/nodes/Entities.java b/src/main/java/org/jsoup/nodes/Entities.java
index 32cc3af..2afd1f6 100644
--- a/src/main/java/org/jsoup/nodes/Entities.java
+++ b/src/main/java/org/jsoup/nodes/Entities.java
@@ -86,13 +85,11 @@ public class Entities {
         final CoreCharset coreCharset = CoreCharset.byName(encoder.charset().name());
         final Map<Character, String> map = escapeMode.getMap();
         final int length = string.length();
-
-        int codePoint;
-        for (int offset = 0; offset < length; offset += Character.charCount(codePoint)) {
-            codePoint = string.codePointAt(offset);
-
+        char[] chars = string.toCharArray();
+        for (int i = 0; i < length; i++) {
+            char c = chars[i];
             if (normaliseWhite) {
-                if (StringUtil.isWhitespace(codePoint)) {
+                if (StringUtil.isWhitespace(c)) {
                     if ((stripLeadingWhite && !reachedNonWhite) || lastWasWhite)
                         continue;
                     accum.append(' ');
@@ -103,52 +100,42 @@ public class Entities {
                     reachedNonWhite = true;
                 }
             }
-            // surrogate pairs, split implementation for efficiency on single char common case (saves creating strings, char[]):
-            if (codePoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
-                final char c = (char) codePoint;
-                // html specific and required escapes:
-                switch (c) {
-                    case '&':
-                        accum.append("&amp;");
-                        break;
-                    case 0xA0:
-                        if (escapeMode != EscapeMode.xhtml)
-                            accum.append("&nbsp;");
-                        else
-                            accum.append(c);
-                        break;
-                    case '<':
-                        if (!inAttribute)
-                            accum.append("&lt;");
-                        else
-                            accum.append(c);
-                        break;
-                    case '>':
-                        if (!inAttribute)
-                            accum.append("&gt;");
-                        else
-                            accum.append(c);
-                        break;
-                    case '"':
-                        if (inAttribute)
-                            accum.append("&quot;");
-                        else
-                            accum.append(c);
-                        break;
-                    default:
-                        if (canEncode(coreCharset, c, encoder))
-                            accum.append(c);
-                        else if (map.containsKey(c))
-                            accum.append('&').append(map.get(c)).append(';');
-                        else
-                            accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
-                }
-            } else {
-                final String c = new String(Character.toChars(codePoint));
-                if (encoder.canEncode(c)) // uses fallback encoder for simplicity
-                    accum.append(c);
-                else
-                    accum.append("&#x").append(Integer.toHexString(codePoint)).append(';');
+            // html specific and required escapes:
+            switch (c) {
+                case '&':
+                    accum.append("&amp;");
+                    break;
+                case 0xA0:
+                    if (escapeMode != EscapeMode.xhtml)
+                        accum.append("&nbsp;");
+                    else
+                        accum.append(c);
+                    break;
+                case '<':
+                    if (!inAttribute)
+                        accum.append("&lt;");
+                    else
+                        accum.append(c);
+                    break;
+                case '>':
+                    if (!inAttribute)
+                        accum.append("&gt;");
+                    else
+                        accum.append(c);
+                    break;
+                case '"':
+                    if (inAttribute)
+                        accum.append("&quot;");
+                    else
+                        accum.append(c);
+                    break;
+                default:
+                    if (canEncode(coreCharset, c, encoder))
+                        accum.append(c);
+                    else if (map.containsKey(c))
+                        accum.append('&').append(map.get(c)).append(';');
+                    else
+                        accum.append("&#x").append(Integer.toHexString(c)).append(';');
             }
         }
     }
