    public double solve(double min, double max) throws MaxIterationsExceededException, 
        FunctionEvaluationException {
        
        clearResult();
        verifyInterval(min, max);
        
        double ret = Double.NaN;
        
        double yMin = f.value(min);
        double yMax = f.value(max);
        
        // Verify bracketing
        if ((yMin > 0 && yMax > 0) || (yMin < 0 && yMax < 0)) {
            // check if either value is close to a zero
            double absYMin = FastMath.abs(yMin);
            double absYMax = FastMath.abs(yMax);
            double minY, maxY;
            if (absYMin < absYMax) {
                minY = yMin;
                maxY = yMax;
            } else {
                minY = yMax;
                maxY = yMin;
            }
            if (FastMath.abs(minY) <= functionValueAccuracy) {
                ret = minY <= 0 ? min : max;
            } else if (FastMath.abs(maxY) <= functionValueAccuracy) {
                ret = maxY <= 0 ? max : min;
            } else {
                // neither value is close to zero and min and max do not bracket root.
                throw new IllegalArgumentException
                    ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
            }
        } else {
            // solve using only the first endpoint as initial guess
            ret = solve(min, yMin, max, yMax, min, yMin);
        }

        return ret;
    }
