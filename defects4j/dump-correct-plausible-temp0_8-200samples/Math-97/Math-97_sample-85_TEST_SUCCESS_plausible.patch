diff --git a/src/java/org/apache/commons/math/analysis/BrentSolver.java b/src/java/org/apache/commons/math/analysis/BrentSolver.java
index 8dab47503..e2664e53e 100644
--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java
+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java
@@ -137,20 +133,25 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         double sign = yMin * yMax;
         if (sign >= 0) {
             // check if either value is close to a zero
+            double zeroTol = Math.max(Math.abs(min),Math.abs(max)) * relativeAccuracy;
+            if (Math.abs(yMin) <= functionValueAccuracy || 
+                Math.abs(yMax) <= functionValueAccuracy) {
+                ret = (Math.abs(yMin) <= Math.abs(yMax)) ? min : max;
+            } else if (min == max) {
+                ret = min;
+            } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
+            }
         } else {
             // solve using only the first endpoint as initial guess
             ret = solve(min, yMin, max, yMax, min, yMin);
-            // either min or max is a root
         }
-
         return ret;
     }        
-        
     /**
      * Find a zero starting search according to the three provided points.
      * @param x0 old approximation for the root
