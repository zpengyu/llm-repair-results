diff --git a/src/java/org/apache/commons/math/analysis/BrentSolver.java b/src/java/org/apache/commons/math/analysis/BrentSolver.java
index 8dab47503..6337d313b 100644
--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java
+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java
@@ -122,17 +122,13 @@ public class BrentSolver extends UnivariateRealSolverImpl {
      * @throws IllegalArgumentException if min is not less than max or the
      * signs of the values of the function at the endpoints are not opposites
      */
-    public double solve(double min, double max) throws MaxIterationsExceededException, 
+public double solve(double min, double max) throws MaxIterationsExceededException, 
         FunctionEvaluationException {
-        
         clearResult();
         verifyInterval(min, max);
-        
         double ret = Double.NaN;
-        
         double yMin = f.value(min);
         double yMax = f.value(max);
-
         // Verify bracketing
         double sign = yMin * yMax;
         if (sign >= 0) {
@@ -144,13 +140,11 @@ public class BrentSolver extends UnivariateRealSolverImpl {
                         "  Values: [" + yMin + "," + yMax + "]");
         } else {
             // solve using only the first endpoint as initial guess
-            ret = solve(min, yMin, max, yMax, min, yMin);
+            ret = solve(min, yMin, max, yMax, (min+max)/2, f.value((min+max)/2));
             // either min or max is a root
         }
-
         return ret;
     }        
-        
     /**
      * Find a zero starting search according to the three provided points.
      * @param x0 old approximation for the root
