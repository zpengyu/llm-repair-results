diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java
index 128a8346f..ead46ccbe 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java
@@ -16,11 +16,8 @@ import com.fasterxml.jackson.databind.util.ClassUtil;
  * alternative for default constructor; but otherwise can delegate
  * to regular implementation.
  */
-public final class InnerClassProperty
-    extends SettableBeanProperty
-{
+public final class InnerClassProperty extends SettableBeanProperty {
     private static final long serialVersionUID = 1L;
-
     /**
      * Actual property that we use after value construction.
      */
@@ -83,23 +72,23 @@ public final class InnerClassProperty
     public InnerClassProperty withValueDeserializer(JsonDeserializer<?> deser) {
         return new InnerClassProperty(this, deser);
     }
-
     @Override
-    public void assignIndex(int index) { _delegate.assignIndex(index); }
-
+    public void assignIndex(int index) {
+        _delegate.assignIndex(index);
+    }
     @Override
-    public int getPropertyIndex() { return _delegate.getPropertyIndex(); }
-
-
+    public int getPropertyIndex() {
+        return _delegate.getPropertyIndex();
+    }
     // // // BeanProperty impl
-
     @Override
     public <A extends Annotation> A getAnnotation(Class<A> acls) {
         return _delegate.getAnnotation(acls);
     }
-
-    @Override public AnnotatedMember getMember() {  return _delegate.getMember(); }
-
+    @Override
+    public AnnotatedMember getMember() {
+        return _delegate.getMember();
+    }
     /*
     /**********************************************************
     /* Deserialization methods
@@ -127,10 +115,9 @@ public final class InnerClassProperty
         }
         set(bean, value);
     }
-
     @Override
     public Object deserializeSetAndReturn(JsonParser jp,
-    		DeserializationContext ctxt, Object instance)
+        DeserializationContext ctxt, Object instance)
         throws IOException
     {
         return setAndReturn(instance, deserialize(jp, ctxt));
